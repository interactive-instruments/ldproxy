//TODO: move everything to application plugin

task dockerFile {
    outputs.file new File(buildDir, 'tmp/Dockerfile')
    doLast {
        new File(buildDir, 'tmp/Dockerfile').text = """
FROM openjdk:11-jre-slim
MAINTAINER interactive instruments GmbH
ARG TARGETOS
ARG TARGETARCH
ADD ${project.name}-\$TARGETOS-\$TARGETARCH.tar /
ADD ${project.name}.tar /
ENTRYPOINT ["/${project.name}/bin/${project.name}"]
EXPOSE 7080
WORKDIR /${project.name}
ENV XTRAPLATFORM_ENV CONTAINER
"""
    }
}
//TODO: move arch replacements to layer plugin, rebuild xtraplatform-native
task dockerCopy(type: Copy) {
    from tasks.distTar
    from tasks.dockerFile
    into "$buildDir/docker"
    rename {
        it.replace("${project.name}", "${project.name}-${platform.replace('x86_64', 'amd64').replace('aarch_64', 'arm64')}")
    }
}

//TODO: set TARGETOS and TARGETARCH
task dockerBuild(type: Exec) {
    dependsOn dockerCopy
    outputs.upToDateWhen { dockerCopy.state.upToDate }
    workingDir "$buildDir/docker"
    commandLine 'docker', 'build', '-t', 'iide/ldproxy:local-dev', '.'
}

task dockerRun(type: Exec) {
    dependsOn dockerBuild
    if (org.gradle.internal.os.OperatingSystem.current().isLinux()) {
        commandLine 'docker', 'run', '--rm', '-i', '--network=host', '-v', "${project.findProperty('data') ?: "$buildDir/data"}:/ldproxy/data", '-e', 'XTRAPLATFORM_ENV=DEVELOPMENT', '-e', "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=${project.findProperty('debug') ? 'y' : 'n'},address=*:5005", 'iide/ldproxy:local-dev'
    } else {
        commandLine 'docker', 'run', '--rm', '-i', '-p', '7080:7080', '-p', '7081:7081', '-p', '5005:5005', '-v', "${project.findProperty('data') ?: "$buildDir/data"}:/ldproxy/data", '-e', 'XTRAPLATFORM_ENV=DEVELOPMENT', '-e', "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=${project.findProperty('debug') ? 'y' : 'n'},address=*:5005", 'iide/ldproxy:local-dev'
    }
}


if (!useNativeRun) {
    tasks.run.finalizedBy tasks.dockerRun
}

