{
	"en": {
		"FOUNDATION": {
			"_label": "Foundation",
			"_description": "Adds an API catalog with all published APIs. <br/>Provides base functionality for all other modules and therefore cannot be disabled.",
			"includeLinkHeader": {
				"_label": "Include 'link' header",
				"_description": "Return links contained in API responses also as HTTP header."
		    },
			"useLangParameter": {
				"_label": "Use 'lang' parameter",
				"_description": "Support query parameter `lang` to set the desired response language."
		    },
			"apiCatalogLabel": {
				"_label": "API catalog label",
				"_description": "Title for resource *API Catalog*."
		    },
			"apiCatalogDescription": {
				"_label": "API catalog description",
				"_description": "Description for resource *API Catalog*. May contain HTML elements."
		    }
		},
		"COMMON": {
			"_label": "Common Core",
			"_description": "The module *Common Core* is always enabled. It provides the resources *Landing Page*, *Conformance Declaration* and *API Definition*. <br/>*Common Core* implements all requirements of conformance class *Core* of [OGC API - Features - Part 1: Core 1.0](http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#rc_core) for the three mentioned resources."
		},
		"JSON": {
			"_label": "JSON",
			"_description": "Provides *JSON* encoding for every supported resource that does not have more specific rules (like [Features](geojson.md))."
		},
		"HTML": {
			"_label": "HTML",
			"_description": "Provides HTML encoding for every supported resource that does not have more specific rules (like [Features](features-html.md)).",
			"noIndexEnabled": {
				"_label": "Enable search engine indexing",
				"_description": "Set `noIndex` for all sites to prevent search engines from indexing."
		    },
			"schemaOrgEnabled": {
				"_label": "Enable schema.org annotations",
				"_description": "Enable [schema.org](https://schema.org) annotations for all sites, which are used e.g. by search engines. The annotations are embedded as JSON-LD."
		    },
			"collectionDescriptionsInOverview": {
				"_label": "Show descriptions in collections overview",
				"_description": "Show collection descriptions in *Feature Collections* resource for HTML."
		    },
			"legalName": {
				"_label": "Legal notice label",
				"_description": "Label for optional legal notice link on every site."
		    },
			"legalUrl": {
				"_label": "Legal notice URL",
				"_description": "URL for optional legal notice link on every site."
		    },
			"privacyName": {
				"_label": "Privacy notice label",
				"_description": "Label for optional privacy notice link on every site."
		    },
			"privacyUrl": {
				"_label": "Privacy notice URL",
				"_description": "URL for optional privacy notice link on every site."
		    },
			"leafletUrl": {
				"_label": "Leaflet background map URL template",
				"_description": "URL template for Leaflet background map tiles."
		    },
			"leafletAttribution": {
				"_label": "Leaflet source attribution",
				"_description": "Source attribution for Leaflet background map."
		    },
			"openLayersUrl": {
				"_label": "OpenLayers background map URL template",
				"_description": "URL template for OpenLayers background map tiles."
		    },
			"openLayersAttribution": {
				"_label": "OpenLayers source attribution",
				"_description": "Source attribution for OpenLayers background map."
		    },
			"footerText": {
				"_label": "Footer text",
				"_description": "Additional text shown in footer of every site."
		    }
		},
		"OAS30": {
			"_label": "OpenAPI 3.0",
			"_description": "This module provides the resource *API Definition*.<br/>It implements all requirements of conformance class *OpenAPI 3.0* from [OGC API - Features - Part 1: Core 1.0](http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#rc_oas30) for the mentioned resource."
		},
		"COLLECTIONS": {
			"_label": "Feature Collections",
			"_description": "Provides the resources *Feature Collections* and *Feature Collection*."
		},
		"FEATURES_CORE": {
			"_label": "Features Core",
			"_description": "Provides the resources *Features* and *Feature*. Implements all requirements of conformance class *Core* of [OGC API - Features - Part 1: Core 1.0](http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#rc_core) for the two mentioned resources.",
			"minimumPageSize": {
				"_label": "Minimum page size",
				"_description": "Minimum value for parameter `limit`."
			},
			"defaultPageSize": {
				"_label": "Default page size",
				"_description": "Default value for parameter `limit`."
			},
			"maximumPageSize": {
				"_label": "Maximum page size",
				"_description": "Maximum value for parameter `limit`."
			}
		},
		"GEO_JSON": {
			"_label": "Features GeoJSON",
			"_description": "Provides the resources *Features* and *Feature* encoded as GeoJSON. Implements all requirements of conformance class *GeoJSON* from [OGC API - Features - Part 1: Core 1.0](http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#rc_geojson) for the two mentioned resources.",
			"nestedObjectStrategy": {
				"_label": "Nested object strategy",
				"_description": "Option to nest (`NEST`) or flatten ('FLATTEN') complex object structures defined in the feature provider types. For `FLATTEN` the value of `multiplicityStrategy` has to be `SUFFIX`, for `NEST` it has to be `ARRAY`."
			},
			"multiplicityStrategy": {
				"_label": "Multiplicity strategy",
				"_description": "Option to pass through (`ARRAY`) or flatten ('SUFFIX') complex array structures defined in the feature provider types. For `SUFFIX` the value of `nestedObjectStrategy` has to be `FLATTEN`, for `ARRAY` it has to be `NEST`."
			}
		},
		"FEATURES_HTML": {
			"_label": "Features HTML",
			"_description": "Provides the resources *Features* and *Feature* encoded as HTML. Implements all requirements of conformance class *HTML* of [OGC API - Features - Part 1: Core 1.0](http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#rc_html) for the two mentioned resources.",
			"layout": {
				"_label": "Layout",
				"_description": "Layout for *Features* and *Feature* resources. Either `CLASSIC` (mainly for simple objects with simple values) or `COMPLEX_OBJECTS` (supports more complex object structures and longer values)."
			}
		},
		"QUERYABLES": {
			"_label": "Queryables",
			"_description": "This module provides the sub-resource *Queryables* for the resource *Feature Collection* that publishes the feature properties that may be used in queries. <br/>*Collections Queryables* implements all requirements of conformance class *Queryables* from the draft of [OGC API - Styles](http://docs.opengeospatial.org/DRAFTS/20-009.html#rc_queryables). The resource will change in the future due to the harmonization with the requirements for *Queryables* from the draft of [OGC API - Features - Part 3: Common Query Language](http://docs.opengeospatial.org/DRAFTS/19-079.html#filter-queryables)."
		},
		"SCHEMA": {
			"_label": "Schema",
			"_description": "This module provides a sub-resource *Schema* for the resource *Feature Collection* that publishes the JSON Schema (Draft 07) of the features. The schema is automatically derived from the type definitions in the feature provider."
		},
		"FILTER": {
			"_label": "Filter (CQL)",
			"_description": "Adds support for CQL filter expressions in queries to select [Features](features-core.md) or [Vector Tiles](tiles.md)."
		},
		"CRS": {
			"_label": "Coordinate Reference Systems",
			"_description": "Provides support for additional coordinate reference systems apart from the default [CRS84](http://www.opengis.net/def/crs/OGC/1.3/CRS84) (WGS 84). Implements all requirements of conformance class *Coordinate Reference System by Reference* of [OGC API - Features - Part 2: Coordinate Reference System by Reference 1.0.0-draft.1](http://docs.opengeospatial.org/DRAFTS/18-058.html).<br/>All transformations between two coordinate reference systems are handled by *Geotools*. If multiple transformations are available, *Geotools* decides which one to use. Transformations are currently not configurable.",
			"additionalCrs": {
				"_label": "Additional coordinate reference systems",
				"_description": "Add additional coordinate reference systems to an API or a collection."
			}
		},
		"TILES": {
			"_label": "Vector Tiles",
			"_description": "Adds support for vector tiles for the whole dataset and/or single collections. Implements requirements of the conformance classes from the draft specification [OGC API - Tiles - Part 1: Core](https://github.com/opengeospatial/OGC-API-Tiles) and from the standard [OGC Two Dimensional Tile Matrix Set](http://docs.opengeospatial.org/is/17-083r2/17-083r2.html). The implementation is subject to change in the course of the development and approval process of the draft.",
			"singleCollectionEnabled": {
				"_label": "Single collection enabled",
				"_description": "Enable vector tiles for each *Feature Collection*. Every tile contains a layer with the feature from the collection."
			},
			"multiCollectionEnabled": {
				"_label": "Multi collection enabled",
				"_description": "Enable vector tiles for the whole dataset. Every tile contains one layer per collection with the features of that collection."
			},
			"center": {
				"_label": "Center {{part}}",
				"_description": "Longitude and latitude that a map with the tiles should be centered on by default.",
				"longitude": "longitude",
				"latitude": "latitude"
			},
			"zoomLevels": {
				"_label": "{{part}} zoom level",
				"_description": "Available zoom levels and default zoom level for enabled tile encodings.",
				"min": "Minimum",
				"max": "Maximum"
			},
			"seeding": {
				"_label": "{{part}} seeding level",
				"_description": "Zoom levels per enabled tile encoding for which the tile cache should be seeded on startup."
			}
		},
		"STYLES": {
			"_label": "Styles",
			"_description": "Adds support for publishing and managing styles (*Mapbox Style* or *SLD*) and related resources (symbols and sprites). Implements requirements of the conformance classes *Core*, *Manage Styles*, *Validation of styles*, *Resources*, *Manage resources*, *Mapbox Style*, *OGC SLD 1.0*, *OGC SLD 1.1*, *HTML* and *Style information* from the draft specification [OGC API - Styles](http://docs.opengeospatial.org/DRAFTS/20-009.html). The implementation is subject to change in the course of the development and approval process of the draft.",
			"resourcesEnabled": {
				"_label": "File resources enabled",
				"_description": "Option to support generic file resources, e.g. for symbols or sprites. For details see conformance class *Resources*."
			}
		}
	},
	"de": {
		"FOUNDATION": {
			"_label": "Foundation",
			"_description": "Stellt einen API Katalog mit allen veröffentlichten APIs bereit. <br/>Stellt Basis-Funktionalität für alle anderen Module bereit und kann daher nicht deaktiviert werden.",
			"includeLinkHeader": {
				"_label": "'link'-Header zurückgeben",
				"_description": "Steuert, ob die in Antworten der API enthaltenen Links auch als HTTP-Header zurückgegeben werden."
		    },
			"useLangParameter": {
				"_label": "'lang'-Parameter erlauben",
				"_description": "Steuert, ob die Sprache der Antwort bei allen GET-Operationen nur über den `Accept-Lang`-Header oder auch über einen Parameter `lang` ausgewählt werden kann."
		    },
			"apiCatalogLabel": {
				"_label": "API Katalog Titel",
				"_description": "Titel für die API-Catalog-Ressource."
		    },
			"apiCatalogDescription": {
				"_label": "API Katalog Beschreibung",
				"_description": "Beschreibung für die API-Catalog-Ressource. Darf HTML-Elemente enthalten."
		    }
		},
		"COMMON": {
			"_label": "Common Core",
			"_description": "Das Modul *Common Core* ist für jede über ldproxy bereitgestellte API aktiv. Es stellt die Ressourcen *Landing Page*, *Conformance Declaration* und *API Definition* bereit.<br/>*Common Core* implementiert alle Vorgaben der Konformitätsklasse *Core* von [OGC API - Features - Part 1: Core 1.0](http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#rc_core) für die drei genannten Ressourcen."
		},
		"JSON": {
			"_label": "JSON",
			"_description": "Stellt das Ausgabeformat *JSON* für alle unterstützten Ressource bereit, die keine speziellen Regelungen für Ausgabeformate haben (wie z.B. [Features](geojson.md))."
		},
		"HTML": {
			"_label": "HTML",
			"_description": "Stellt das HTML Ausgabeformat für jede unterstützte Ressource bereit, für die keine speziellen Regelungen gelten (wie z.B. [Features](features-html.md)).",
			"noIndexEnabled": {
				"_label": "Indexierung durch Suchmaschinen aktivieren",
				"_description": "Steuert, ob für alle Seiten `noIndex` gesetzt wird und damit Suchmaschinen angezeigt wird, dass sie die Seiten nicht indizieren sollen."
		    },
			"schemaOrgEnabled": {
				"_label": "schema.org Annotationen aktivieren",
				"_description": "Steuert, ob in die HTML-Ausgabe schema.org-Annotationen, z.B. für Suchmaschinen, eingebettet sein sollen, sofern . Die Annotationen werden im Format JSON-LD eingebettet."
		    },
			"collectionDescriptionsInOverview": {
				"_label": "Beschreibung in Collection-Übersicht anzeigen",
				"_description": "Steuert, ob in der HTML-Ausgabe der Feature-Collections-Ressource für jede Collection die Beschreibung ausgegeben werden soll."
		    },
			"legalName": {
				"_label": "Impressum Link-Text",
				"_description": "Auf jeder HTML-Seite kann ein ggf. rechtlich erforderlicher Link zu einem Impressum angezeigt werden. Diese Eigenschaft spezfiziert den anzuzeigenden Text."
		    },
			"legalUrl": {
				"_label": "Impressum Link-URL",
				"_description": "Auf jeder HTML-Seite kann ein ggf. rechtlich erforderlicher Link zu einem Impressum angezeigt werden. Diese Eigenschaft spezfiziert die URL des Links."
		    },
			"privacyName": {
				"_label": "Datenschutzerklärung Link-Text",
				"_description": "Auf jeder HTML-Seite kann ein ggf. rechtlich erforderlicher Link zu einer Datenschutzerklärung angezeigt werden. Diese Eigenschaft spezfiziert den anzuzeigenden Text."
		    },
			"privacyUrl": {
				"_label": "Datenschutzerklärung Link-URL",
				"_description": "Auf jeder HTML-Seite kann ein ggf. rechtlich erforderlicher Link zu einer Datenschutzerklärung angezeigt werden. Diese Eigenschaft spezfiziert die URL des Links."
		    },
			"leafletUrl": {
				"_label": "Leaflet Hintergrundkarte URL-Template",
				"_description": "Das URL-Template für die Kacheln einer Hintergrundkarte in Leaflet-Karten."
		    },
			"leafletAttribution": {
				"_label": "Leaflet Hintergrundkarte Quellenangabe",
				"_description": "Der Quellenangabe in Leaflet für die Hintergrundkarte."
		    },
			"openLayersUrl": {
				"_label": "OpenLayers Hintergrundkarte URL-Template",
				"_description": "Das URL-Template für die Kacheln einer Hintergrundkarte in OpenLayers-Karten."
		    },
			"openLayersAttribution": {
				"_label": "OpenLayers Hintergrundkarte Quellenangabe",
				"_description": "Der Quellenangabe in OpenLayers für die Hintergrundkarte."
		    },
			"footerText": {
				"_label": "Footer Text",
				"_description": "Zusätzlicher Text, der auf jeder HTML-Seite im Footer angezeigt wird."
		    }
		},
		"OAS30": {
			"_label": "OpenAPI 3.0",
			"_description": "Dieses Modul stellt die Ressource *API Definition* bereit.<br/> Es implementiert alle Vorgaben der gleichnamigen Konformatitätsklasse von [OGC API - Features - Part 1: Core 1.0](http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#rc_oas30)."
		},
		"COLLECTIONS": {
			"_label": "Feature Collections",
			"_description": "Stellt die Ressourcen *Feature Collections* und *Feature Collection* bereit."
		},
		"FEATURES_CORE": {
			"_label": "Features Core",
			"_description": "Stellt die Ressourcen *Features* und *Feature* bereit. Implementiert alle Vorgaben der Konformatitätsklasse *Core* von [OGC API - Features - Part 1: Core 1.0](http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#rc_core) für die zwei genannten Ressourcen.",
			"minimumPageSize": {
				"_label": "Minimale Seitengröße page size",
				"_description": "Setzt den Minimalwert für den Parameter `limit`."
			},
			"defaultPageSize": {
				"_label": "Standard Seitengröße",
				"_description": "Setzt den Detaultwert für den Parameter `limit`."
			},
			"maximumPageSize": {
				"_label": "Maximale Seitengröße",
				"_description": "Setzt den Maximalwert für den Parameter `limit`."
			}
		},
		"GEO_JSON": {
			"_label": "Features GeoJSON",
			"_description": "Stellt die Ressourcen *Features* und *Feature* als GeoJSON bereit. Das Modul implementiert alle Vorgaben der Konformatitätsklasse *GeoJSON* von [OGC API - Features - Part 1: Core 1.0](http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#rc_geojson) für die genannten Ressourcen.",
			"nestedObjectStrategy": {
				"_label": "Strategie für Objektstrukturen",
				"_description": "Steuert, ob im Schema des Feature-Providers ggf. definierte Objektstrukturen in der GeoJSON-Ausgabe abgeflacht werden (`FLATTEN`) oder nicht (`NESTED`). Bei der Angabe von `FLATTEN` muss der Wert von `multiplicityStrategy` gleich `SUFFIX` sein, bei `NESTED` muss er gleich `ARRAY` sein."
			},
			"multiplicityStrategy": {
				"_label": "Strategie für Multiplizität",
				"_description": "Steuert, ob im Schema des Feature-Providers ggf. definierte Arraystrukturen in der GeoJSON-Ausgabe abgeflacht werden (`SUFFIX`) oder nicht (`ARRAY`). Bei der Angabe von `SUFFIX` muss der Wert von `nestedObjectStrategy` gleich `FLATTEN` sein, bei `ARRAY` muss er gleich `NESTED` sein."
			}
		},
		"FEATURES_HTML": {
			"_label": "Features HTML",
			"_description": "Stellt die Ressourcen *Features* und *Feature* als HTML bereit. Implementiert alle Vorgaben der Konformatitätsklasse *HTML* von [OGC API - Features - Part 1: Core 1.0](http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#rc_html) für die genannten Ressourcen.",
			"layout": {
				"_label": "Layout",
				"_description": "Steuert, welches HTML-Template für die Ausgabe der Features- und Feature-Ressourcen verwendet werden soll. Verfügbar sind `CLASSIC` (vor allem für einfache Objekte mit einfachen Werten) und `COMPLEX_OBJECTS` (unterstützt auch komplexere Objektstrukturen und längere Werte)."
			}
		},
		"QUERYABLES": {
			"_label": "Queryables",
			"_description": "Dieses Modul ergänzt eine Ressource als Sub-Ressource zu jeder Feature Collection, die die Objekteigenschaften, die zur Selektion in Queries verwendet werden können, in der API veröffentlicht.<br/>Das Modul basiert auf den Vorgaben der Konformatitätsklasse *Queryables* aus dem [Entwurf von OGC API - Styles](http://docs.opengeospatial.org/DRAFTS/20-009.html#rc_queryables). Die Ressource wird sich zukünftig im Zuge der Harmonisierung mit den Vorgaben zu *Queryables* aus dem [Entwurf von OGC API - Features - Part 3: Common Query Language](http://docs.opengeospatial.org/DRAFTS/19-079.html#filter-queryables) noch ändern."
		},
		"SCHEMA": {
			"_label": "Schema",
			"_description": "Dieses Modul ergänzt eine Ressource als Sub-Ressource zu jeder Feature Collection, die das Schema der Features, in der API veröffentlicht. Das Schema wird aus den Schemainformationen im Feature-Provider abgeleitet. Aktuell wird JSON Schema (Draft 07) für die GeoJSON-Ausgabe unterstützt."
		},
		"FILTER": {
			"_label": "Filter (CQL)",
			"_description": "Dieses Modul stellt Unterstützung für CQL Filter-Ausdrücke in Queries bereit, um [Features](features-core.md) oder [Vector Tiles](tiles.md) zu selektieren."
		},
		"CRS": {
			"_label": "Coordinate Reference Systems",
			"_description": "Unterstützung für weitere Koordinatenreferenzsysteme neben dem Standard-Koordinatenreferenzsystem [CRS84](http://www.opengis.net/def/crs/OGC/1.3/CRS84) (WGS 84). implementiert alle Vorgaben der Konformatitätsklasse *Coordinate Reference System by Reference* von [OGC API - Features - Part 2: Coordinate Reference System by Reference 1.0.0-draft.1](http://docs.opengeospatial.org/DRAFTS/18-058.html).<br/>Alle Koordinatentransformationen zwischen zwei Koordinatenreferenzsystemen erfolgen mit Geotools. Geotools entscheidet, welche Transformation verwendet wird, sofern mehrere verfügbar sind. Eine Konfigurationsmöglichkeit in ldproxy besteht nicht.",
			"additionalCrs": {
				"_label": "Zusätzliche Koordinatenreferenzsysteme",
				"_description": "Steuert, welche weitere Koordinatenreferenzsysteme in einer API oder für eine Feature Collection unterstützt werden sollen."
			}
		},
		"TILES": {
			"_label": "Vector Tiles",
			"_description": "Stellt die Ressourcen *Tilesets*, *Tileset*, *Vector Tile*, *Tile Matrix Sets* und *Tile Matrix Set* bereit. Das Modul basiert auf dem Entwurf von [OGC API - Tiles - Part 1: Core](https://github.com/opengeospatial/OGC-API-Tiles) und dem Standard [OGC Two Dimensional Tile Matrix Set](http://docs.opengeospatial.org/is/17-083r2/17-083r2.html). Die Implementierung wird sich im Zuge der weiteren Standardisierung des Entwurfs noch ändern.",
			"singleCollectionEnabled": {
				"_label": "Für einzelne Collections aktivieren",
				"_description": "Steuert, ob Vector Tiles für jede Feature Collection aktiviert werden sollen. Jede Kachel hat einen Layer mit den Features aus der Collection."
			},
			"multiCollectionEnabled": {
				"_label": "Für den ganzen Datensatz aktivieren",
				"_description": "Steuert, ob Vector Tiles für den Datensatz aktiviert werden sollen. Jede Kachel hat einen Layer pro Collection mit den Features aus der Collection."
			},
			"center": {
				"_label": "Zentrierung {{part}}",
				"_description": "Legt Länge und Breite fest, auf die standardmäßig eine Karte mit den Kacheln zentriert werden sollte.",
				"longitude": "Länge",
				"latitude": "Breite"
			},
			"zoomLevels": {
				"_label": "{{part}} Zoom Level",
				"_description": "Steuert die Zoomstufen, die für jedes aktive Kachelschema verfügbar sind sowie welche Zoomstufe als Default bei verwendet werden soll.",
				"min": "Minimaler",
				"max": "Maximaler"
			},
			"seeding": {
				"_label": "{{part}} Seeding Level",
				"_description": "Steuert die Zoomstufen, die für jedes aktive Kachelschema beim Start vorberechnet werden."
			}
		},
		"STYLES": {
			"_label": "Styles",
			"_description": "Ergänzt verschiedene Ressourcen für die Bereitstellung und Verwaltung von Styles (Mapbox Style oder SLD) und zugehöriger Ressourcen (Synmbole, Sprites) in der API. Das Modul basiert auf den Vorgaben der Konformatitätsklassen *Core*, *Manage styles*, *Validation of styles*, *Resources*, *Manage resources*, *Mapbox Style*, *OGC SLD 1.0*, *OGC SLD 1.1*, *HTML* und *Style information* aus dem [Entwurf von OGC API - Styles](http://docs.opengeospatial.org/DRAFTS/20-009.html#rc_queryables). Die Implementierung wird sich im Zuge der weiteren Standardisierung des Entwurfs noch ändern.",
			"resourcesEnabled": {
				"_label": "Datei-Ressourcen aktivieren",
				"_description": "Steuert, ob die API auch beliebige File-Ressourcen, z.B. für Symbole oder Sprites, unterstützen soll."
			}
		}
	}
}