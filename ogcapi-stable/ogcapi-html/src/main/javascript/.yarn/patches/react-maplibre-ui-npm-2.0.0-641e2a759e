diff --git a/dist/react-maplibre-ui.cjs.development.js b/dist/react-maplibre-ui.cjs.development.js
index 55936421ff91fbdfb04c8e6fb73ac88ce63ee3db..8c2abe6741c2b38d12a40146e55b22c7fce69aba 100644
--- a/dist/react-maplibre-ui.cjs.development.js
+++ b/dist/react-maplibre-ui.cjs.development.js
@@ -141,7 +141,8 @@ var Map = function Map(props) {
       style = props.style,
       className = props.className,
       id = props.id,
-      rest = _objectWithoutPropertiesLoose(props, ["mapStyle", "children", "defaultCenter", "defaultZoom", "style", "className", "id"]);
+      customParameters = props.customParameters,
+      rest = _objectWithoutPropertiesLoose(props, ["mapStyle", "children", "defaultCenter", "defaultZoom", "style", "className", "id", "customParameters"]);
 
   var mapContainer = React.useRef(null);
 
@@ -161,13 +162,13 @@ var Map = function Map(props) {
 
   React.useEffect(function () {
     if (!mapContainer.current) return;
-    var map = new MaplibreGL.Map({
+    var map = new MaplibreGL.Map(_extends({
       // accessToken,
       container: mapContainer.current,
       style: mapStyle,
       center: defaultCenter,
       zoom: defaultZoom
-    });
+    }, customParameters));
 
     var onLoad = function onLoad() {
       return setIsLoaded(true);
diff --git a/dist/react-maplibre-ui.cjs.development.js.map b/dist/react-maplibre-ui.cjs.development.js.map
index 73ab189ccc98f8c7a6a1c9ddb302622808b10d52..0430a61a24f7269e394ac861c6883cb5b304f1b6 100644
--- a/dist/react-maplibre-ui.cjs.development.js.map
+++ b/dist/react-maplibre-ui.cjs.development.js.map
@@ -1 +1 @@
-{"version":3,"file":"react-maplibre-ui.cjs.development.js","sources":["../src/util/pickHandlers.ts","../src/util/createListeners.ts","../src/components/Map.tsx","../src/hooks.ts","../src/components/MapSource.tsx","../src/components/MapLayer.tsx","../src/components/MapMarker.tsx"],"sourcesContent":["import { OnEventListener } from \"../types\";\n\nconst onType = \"on\";\nconst onceType = \"once\";\nexport function pickHandlers<T>(props: T) {\n  const onHandlers = {} as OnEventListener<T>;\n  const onceHandlers = {} as OnEventListener<T>;\n  const rest = {};\n  for (const key in props) {\n    if (key.includes(onceType)) {\n      // @ts-ignore\n      onceHandlers[key] = props[key];\n    } else if (key.includes(onType)) {\n      // @ts-ignore\n      onHandlers[key] = props[key];\n    } else {\n      // @ts-ignore\n      rest[key] = props[key];\n    }\n  }\n\n  return [onHandlers, onceHandlers, rest] as [\n    OnEventListener<T>,\n    OnEventListener<T>,\n    T\n  ];\n}\n","import {\n  OnEventListener,\n  LayerEvents,\n  OnEventHandlerRaw,\n  OnEventHandler,\n  EventHandlerContext,\n} from \"../types\";\nimport { Map, Marker } from \"maplibre-gl\";\n\ninterface ListenerOptions {\n  listenType: \"on\" | \"once\";\n  layerId?: string;\n}\n\nexport function createListeners<P>(\n  onHandlers: OnEventListener<P>,\n  target: Map | Marker,\n  ctx: EventHandlerContext<P>,\n  opts: ListenerOptions = { listenType: \"on\" }\n) {\n  const handlers = [] as [LayerEvents, OnEventHandlerRaw][];\n\n  const { listenType, layerId } = opts;\n\n  for (const handlerType in onHandlers) {\n    const type = handlerType\n      .replace(listenType, \"\")\n      .toLowerCase() as LayerEvents;\n\n    const handler: OnEventHandlerRaw = ev => {\n      // @ts-ignore\n      const customHandler = onHandlers[handlerType] as OnEventHandler<any>;\n\n      return customHandler(ctx, ev);\n    };\n\n    handlers.push([type, handler]);\n  }\n\n  const addListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (opts.layerId) {\n        return (target as Map)[listenType](type, opts.layerId, handler);\n      }\n      return target[listenType](type, handler);\n    });\n  };\n\n  const removeListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (layerId) {\n        return (target as Map).off(type, layerId, handler);\n      }\n      return target.off(type, handler);\n    });\n  };\n\n  return { addListeners, removeListeners };\n}\n","import React, { useEffect, useRef, useState, useMemo } from \"react\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { MaplibreUICtx, OnMapEventHandlers } from \"../types\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\n\nexport const MapCtx = React.createContext<MaplibreUICtx>({\n  map: null,\n  maplibre: MaplibreGL,\n});\n\ntype BaseMaplibreUIProps = {\n  /**\n   * accessToken from maplibre, see https://docs.maplibre.com/help/how-maplibre-works/access-tokens/\n   */\n  accessToken?: string;\n  /**\n   * defaultCenter as [longitude, latitude]\n   */\n  defaultCenter: LngLatLike;\n  /**\n   * maplibre styleUrl, see https://docs.maplibre.com/help/glossary/style-url/\n   */\n  mapStyle?: string;\n  defaultZoom?: number;\n  /**\n   * container style css properties\n   */\n  style?: React.CSSProperties;\n  /**\n   * container css className\n   */\n  className?: string;\n  /**\n   * container div#id tag\n   */\n  id?: string;\n};\n\nexport type MaplibreUIProps = Partial<OnMapEventHandlers<BaseMaplibreUIProps>> &\n  BaseMaplibreUIProps;\n\nexport const DEFAULT_MAP_STYLE = \"maplibre://styles/maplibre/light-v10\";\nexport const DEFAULT_MAP_ZOOM = 10;\n\nexport const Map: React.FC<MaplibreUIProps> = props => {\n  const {\n    // accessToken,\n    mapStyle = DEFAULT_MAP_STYLE,\n    children,\n    defaultCenter,\n    defaultZoom = DEFAULT_MAP_ZOOM,\n    style,\n    className,\n    id,\n    ...rest\n  } = props;\n\n  const mapContainer = useRef<HTMLDivElement | null>(null);\n  const [mapInstance, setMapInstance] = useState<MaplibreGL.Map | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useEffect(() => {\n    if (!mapContainer.current) return;\n    const map = new MaplibreGL.Map({\n      // accessToken,\n      container: mapContainer.current,\n      style: mapStyle,\n      center: defaultCenter,\n      zoom: defaultZoom,\n    });\n\n    const onLoad = () => setIsLoaded(true);\n    map.on(\"load\", onLoad);\n    setMapInstance(map);\n    return () => {\n      map.off(\"load\", onLoad);\n    };\n    // eslint-disable-next-line\n  }, [mapContainer.current]);\n\n  useEffect(() => {\n    const map = mapInstance;\n    if (!map) return;\n\n    const listenerCtx = {\n      props,\n      map,\n      maplibre: MaplibreGL,\n    };\n\n    const onListeners = createListeners(onHandlers, map, listenerCtx, {\n      listenType: \"on\",\n    });\n\n    const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n      listenType: \"once\",\n    });\n\n    onListeners.addListeners();\n    onceListeners.addListeners();\n    return () => {\n      onListeners.removeListeners();\n      onceListeners.removeListeners();\n    };\n    // eslint-disable-next-line\n  }, [mapInstance, onHandlers, onceHandlers]);\n\n  const ctxValue = useMemo(() => {\n    return { map: mapInstance, maplibre: MaplibreGL };\n  }, [mapInstance]);\n\n  return (\n    <React.Fragment>\n      <MapCtx.Provider value={ctxValue}>\n        <div\n          id={id}\n          className={className}\n          style={style}\n          ref={ref => (mapContainer.current = ref)}\n        />\n        {isLoaded && children}\n      </MapCtx.Provider>\n    </React.Fragment>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { MapCtx } from \"./components/Map\";\nimport { NonNullMaplibreUICtx } from \"./types\";\n\n/**\n * useMaplibreUI is a simple wrapper around `useContext(MapCtx)`\n * it provides the Map instance and maplibre module\n * this hook does not ensure the context proivde was mounted\n * @example\n * ```\n * const { map,maplibre } = useMaplibreUI()\n * ```\n */\nexport const useMaplibreUI = () => useContext(MapCtx);\n\ntype MaplibreUIEffectCallback = (\n  mapCtx: NonNullMaplibreUICtx\n) => void | (() => void);\n\n/**\n * useMaplibreUIEffect wraps useMaplibreUI in a useEffect\n * this hook ensures the map instance is created\n * and the context provider was mounted\n * @example\n * ```\n * useMaplibreUIEffect(\n *  ({ map, maplibre }) => {\n *     const marker = new maplibre.Marker().setLngLat(coordinates).addTo(map);\n *\n *     return () => {\n *       marker.remove();\n *     };\n *   },\n *   [coordinates]\n * );\n * ```\n */\nexport const useMaplibreUIEffect = (\n  effect: MaplibreUIEffectCallback,\n  deps: any[]\n) => {\n  const { map, maplibre } = useMaplibreUI();\n  useEffect(() => {\n    if (!map || !maplibre) return;\n    const rt = effect({ map: map, maplibre: maplibre });\n    return rt;\n    // eslint-disable-next-line\n  }, [map, maplibre, ...deps]);\n};\n","import { AnySourceData, GeoJSONSource } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { MaplibreLayerEventHandler } from \"../types\";\n\nexport type SourceProps = AnySourceData & {\n  id: string;\n  onLoad?: MaplibreLayerEventHandler<SourceProps, any>;\n};\n\nexport const MapSource: React.FC<SourceProps> = props => {\n  const { id, onLoad, children = null, ...source } = props;\n\n  // possible source attributes we need to track\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/sources/\n  const { data } = source as { data: any };\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      map.addSource(id, source);\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n\n      return () => {\n        map.getStyle().layers?.forEach(l => {\n          // @ts-ignore\n          if (l.source === id) {\n            map.removeLayer(l.id);\n          }\n        });\n        map.removeSource(id);\n      };\n    },\n    [id, onLoad]\n  );\n\n  useMaplibreUIEffect(\n    ({ map }) => {\n      const src = map.getSource(id) as GeoJSONSource;\n      // @ts-ignore\n      if (!src?.setData) return;\n      src.setData(data);\n    },\n    [id, data]\n  );\n\n  if (!children) return null;\n\n  return <>{children}</>;\n};\n","import { AnyLayer } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\nimport { OnLayerEventHandlers, MaplibreLayerEventHandler } from \"../types\";\n\nexport type MapLayerProps = AnyLayer &\n  Partial<OnLayerEventHandlers<AnyLayer>> & {\n    onLoad?: MaplibreLayerEventHandler<AnyLayer, any>;\n  };\n\nexport const MapLayer: React.FC<MapLayerProps> = props => {\n  const { id, onLoad, children, ...rest } = props;\n\n  const [onHandlers, onceHandlers, layer] = useMemo(() => pickHandlers(rest), [\n    rest,\n  ]);\n  // layer properties to trigger an effect\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/layers/\n  // @ts-ignore\n  const { type, paint } = layer;\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const exists = map.getLayer(id);\n      if (exists) return;\n      map.addLayer({\n        id,\n        ...layer,\n      });\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n    },\n    [id, onLoad, type, paint]\n  );\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, map, listenerCtx, {\n        listenType: \"on\",\n        layerId: id,\n      });\n\n      const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n        listenType: \"once\",\n        layerId: id,\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n      };\n    },\n    [id, onHandlers, onceHandlers]\n  );\n\n  if (!children) return null;\n  return <>{children}</>;\n};\n","import React, { useRef, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { OnMapEventHandlers } from \"../types\";\nimport { createListeners } from \"../util/createListeners\";\nimport { pickHandlers } from \"../util/pickHandlers\";\n\ntype BaseMapMarkerProps = {\n  lngLat: LngLatLike;\n} & MaplibreGL.MarkerOptions;\n\nexport type MapMarkerProps = Partial<OnMapEventHandlers<BaseMapMarkerProps>> &\n  BaseMapMarkerProps;\n\nexport const MapMarker: React.FC<MapMarkerProps> = props => {\n  const { lngLat, children, ...rest } = props;\n\n  const el = useRef<HTMLDivElement | null>(null);\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const markerOptions = { ...rest };\n\n      if (children) {\n        el.current = document.createElement(\"div\");\n        markerOptions.element = el.current;\n        ReactDOM.render(\n          <React.Fragment>{children}</React.Fragment>,\n          el.current\n        );\n      }\n      const marker = new maplibre.Marker(markerOptions)\n        .setLngLat(lngLat)\n        .addTo(map);\n\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, marker, listenerCtx, {\n        listenType: \"on\",\n      });\n\n      const onceListeners = createListeners(onceHandlers, marker, listenerCtx, {\n        listenType: \"once\",\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        ReactDOM.unmountComponentAtNode(marker.getElement());\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n        marker.remove();\n      };\n    },\n    [lngLat, children]\n  );\n\n  return null;\n};\n"],"names":["onType","onceType","pickHandlers","props","onHandlers","onceHandlers","rest","key","includes","createListeners","target","ctx","opts","listenType","handlers","layerId","handlerType","type","replace","toLowerCase","handler","ev","customHandler","push","addListeners","forEach","removeListeners","off","MapCtx","React","createContext","map","maplibre","MaplibreGL","DEFAULT_MAP_STYLE","DEFAULT_MAP_ZOOM","Map","mapStyle","children","defaultCenter","defaultZoom","style","className","id","mapContainer","useRef","useState","mapInstance","setMapInstance","isLoaded","setIsLoaded","useMemo","useEffect","current","container","center","zoom","onLoad","on","listenerCtx","onListeners","onceListeners","ctxValue","Fragment","Provider","value","ref","useMaplibreUI","useContext","useMaplibreUIEffect","effect","deps","rt","MapSource","source","data","addSource","getStyle","layers","l","removeLayer","removeSource","src","getSource","setData","MapLayer","layer","paint","exists","getLayer","addLayer","MapMarker","lngLat","el","markerOptions","document","createElement","element","ReactDOM","render","marker","Marker","setLngLat","addTo","unmountComponentAtNode","getElement","remove"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG,IAAf;AACA,IAAMC,QAAQ,GAAG,MAAjB;SACgBC,aAAgBC;AAC9B,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAMC,GAAX,IAAkBJ,KAAlB,EAAyB;AACvB,QAAII,GAAG,CAACC,QAAJ,CAAaP,QAAb,CAAJ,EAA4B;AAC1B;AACAI,MAAAA,YAAY,CAACE,GAAD,CAAZ,GAAoBJ,KAAK,CAACI,GAAD,CAAzB;AACD,KAHD,MAGO,IAAIA,GAAG,CAACC,QAAJ,CAAaR,MAAb,CAAJ,EAA0B;AAC/B;AACAI,MAAAA,UAAU,CAACG,GAAD,CAAV,GAAkBJ,KAAK,CAACI,GAAD,CAAvB;AACD,KAHM,MAGA;AACL;AACAD,MAAAA,IAAI,CAACC,GAAD,CAAJ,GAAYJ,KAAK,CAACI,GAAD,CAAjB;AACD;AACF;;AAED,SAAO,CAACH,UAAD,EAAaC,YAAb,EAA2BC,IAA3B,CAAP;AAKD;;SCZeG,gBACdL,YACAM,QACAC,KACAC;MAAAA;AAAAA,IAAAA,OAAwB;AAAEC,MAAAA,UAAU,EAAE;AAAd;;;AAExB,MAAMC,QAAQ,GAAG,EAAjB;cAEgCF;MAAxBC,mBAAAA;MAAYE,gBAAAA;;6BAETC;AACT,QAAMC,IAAI,GAAGD,WAAW,CACrBE,OADU,CACFL,UADE,EACU,EADV,EAEVM,WAFU,EAAb;;AAIA,QAAMC,OAAO,GAAsB,SAA7BA,OAA6B,CAAAC,EAAE;AACnC;AACA,UAAMC,aAAa,GAAGlB,UAAU,CAACY,WAAD,CAAhC;AAEA,aAAOM,aAAa,CAACX,GAAD,EAAMU,EAAN,CAApB;AACD,KALD;;AAOAP,IAAAA,QAAQ,CAACS,IAAT,CAAc,CAACN,IAAD,EAAOG,OAAP,CAAd;;;AAZF,OAAK,IAAMJ,WAAX,IAA0BZ,UAA1B,EAAsC;AAAA,UAA3BY,WAA2B;AAarC;;AAED,MAAMQ,YAAY,GAAG,SAAfA,YAAe;AACnBV,IAAAA,QAAQ,CAACW,OAAT,CAAiB;UAAER;UAAMG;;AACvB,UAAIR,IAAI,CAACG,OAAT,EAAkB;AAChB,eAAQL,MAAc,CAACG,UAAD,CAAd,CAA2BI,IAA3B,EAAiCL,IAAI,CAACG,OAAtC,EAA+CK,OAA/C,CAAR;AACD;;AACD,aAAOV,MAAM,CAACG,UAAD,CAAN,CAAmBI,IAAnB,EAAyBG,OAAzB,CAAP;AACD,KALD;AAMD,GAPD;;AASA,MAAMM,eAAe,GAAG,SAAlBA,eAAkB;AACtBZ,IAAAA,QAAQ,CAACW,OAAT,CAAiB;UAAER;UAAMG;;AACvB,UAAIL,OAAJ,EAAa;AACX,eAAQL,MAAc,CAACiB,GAAf,CAAmBV,IAAnB,EAAyBF,OAAzB,EAAkCK,OAAlC,CAAR;AACD;;AACD,aAAOV,MAAM,CAACiB,GAAP,CAAWV,IAAX,EAAiBG,OAAjB,CAAP;AACD,KALD;AAMD,GAPD;;AASA,SAAO;AAAEI,IAAAA,YAAY,EAAZA,YAAF;AAAgBE,IAAAA,eAAe,EAAfA;AAAhB,GAAP;AACD;;ICpDYE,MAAM,gBAAGC,cAAK,CAACC,aAAN,CAAmC;AACvDC,EAAAA,GAAG,EAAE,IADkD;AAEvDC,EAAAA,QAAQ,EAAEC;AAF6C,CAAnC,CAAf;AAoCP,IAAaC,iBAAiB,GAAG,sCAA1B;AACP,IAAaC,gBAAgB,GAAG,EAAzB;AAEP,IAAaC,GAAG,GAA8B,SAAjCA,GAAiC,CAAAjC,KAAK;wBAW7CA,MARFkC;MAAAA,wCAAWH;MACXI,WAOEnC,MAPFmC;MACAC,gBAMEpC,MANFoC;2BAMEpC,MALFqC;MAAAA,8CAAcL;MACdM,QAIEtC,MAJFsC;MACAC,YAGEvC,MAHFuC;MACAC,KAEExC,MAFFwC;MACGrC,qCACDH;;AAEJ,MAAMyC,YAAY,GAAGC,YAAM,CAAwB,IAAxB,CAA3B;;kBACsCC,cAAQ,CAAwB,IAAxB;MAAvCC;MAAaC;;mBACYF,cAAQ,CAAC,KAAD;MAAjCG;MAAUC;;iBAEkBC,aAAO,CAAC;AAAA,WAAMjD,YAAY,CAACI,IAAD,CAAlB;AAAA,GAAD,EAA2B,CAACA,IAAD,CAA3B;MAAnCF;MAAYC;;AAEnB+C,EAAAA,eAAS,CAAC;AACR,QAAI,CAACR,YAAY,CAACS,OAAlB,EAA2B;AAC3B,QAAMtB,GAAG,GAAG,IAAIE,UAAU,CAACG,GAAf,CAAmB;AAC7B;AACAkB,MAAAA,SAAS,EAAEV,YAAY,CAACS,OAFK;AAG7BZ,MAAAA,KAAK,EAAEJ,QAHsB;AAI7BkB,MAAAA,MAAM,EAAEhB,aAJqB;AAK7BiB,MAAAA,IAAI,EAAEhB;AALuB,KAAnB,CAAZ;;AAQA,QAAMiB,MAAM,GAAG,SAATA,MAAS;AAAA,aAAMP,WAAW,CAAC,IAAD,CAAjB;AAAA,KAAf;;AACAnB,IAAAA,GAAG,CAAC2B,EAAJ,CAAO,MAAP,EAAeD,MAAf;AACAT,IAAAA,cAAc,CAACjB,GAAD,CAAd;AACA,WAAO;AACLA,MAAAA,GAAG,CAACJ,GAAJ,CAAQ,MAAR,EAAgB8B,MAAhB;AACD,KAFD;AAID,GAjBQ,EAiBN,CAACb,YAAY,CAACS,OAAd,CAjBM,CAAT;AAmBAD,EAAAA,eAAS,CAAC;AACR,QAAMrB,GAAG,GAAGgB,WAAZ;AACA,QAAI,CAAChB,GAAL,EAAU;AAEV,QAAM4B,WAAW,GAAG;AAClBxD,MAAAA,KAAK,EAALA,KADkB;AAElB4B,MAAAA,GAAG,EAAHA,GAFkB;AAGlBC,MAAAA,QAAQ,EAAEC;AAHQ,KAApB;AAMA,QAAM2B,WAAW,GAAGnD,eAAe,CAACL,UAAD,EAAa2B,GAAb,EAAkB4B,WAAlB,EAA+B;AAChE9C,MAAAA,UAAU,EAAE;AADoD,KAA/B,CAAnC;AAIA,QAAMgD,aAAa,GAAGpD,eAAe,CAACJ,YAAD,EAAe0B,GAAf,EAAoB4B,WAApB,EAAiC;AACpE9C,MAAAA,UAAU,EAAE;AADwD,KAAjC,CAArC;AAIA+C,IAAAA,WAAW,CAACpC,YAAZ;AACAqC,IAAAA,aAAa,CAACrC,YAAd;AACA,WAAO;AACLoC,MAAAA,WAAW,CAAClC,eAAZ;AACAmC,MAAAA,aAAa,CAACnC,eAAd;AACD,KAHD;AAKD,GAzBQ,EAyBN,CAACqB,WAAD,EAAc3C,UAAd,EAA0BC,YAA1B,CAzBM,CAAT;AA2BA,MAAMyD,QAAQ,GAAGX,aAAO,CAAC;AACvB,WAAO;AAAEpB,MAAAA,GAAG,EAAEgB,WAAP;AAAoBf,MAAAA,QAAQ,EAAEC;AAA9B,KAAP;AACD,GAFuB,EAErB,CAACc,WAAD,CAFqB,CAAxB;AAIA,SACElB,4BAAA,CAACA,cAAK,CAACkC,QAAP,MAAA,EACElC,4BAAA,CAACD,MAAM,CAACoC,QAAR;AAAiBC,IAAAA,KAAK,EAAEH;GAAxB,EACEjC,4BAAA,MAAA;AACEc,IAAAA,EAAE,EAAEA;AACJD,IAAAA,SAAS,EAAEA;AACXD,IAAAA,KAAK,EAAEA;AACPyB,IAAAA,GAAG,EAAE,aAAAA,IAAG;AAAA,aAAKtB,YAAY,CAACS,OAAb,GAAuBa,IAA5B;AAAA;GAJV,CADF,EAOGjB,QAAQ,IAAIX,QAPf,CADF,CADF;AAaD,CAlFM;;ACzCP;;;;;;;;;;AASA,IAAa6B,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAMC,gBAAU,CAACxC,MAAD,CAAhB;AAAA,CAAtB;AAMP;;;;;;;;;;;;;;;;;;;AAkBA,IAAayC,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCC,MADiC,EAEjCC,IAFiC;uBAIPJ,aAAa;MAA/BpC,qBAAAA;MAAKC,0BAAAA;;AACboB,EAAAA,eAAS,CAAC;AACR,QAAI,CAACrB,GAAD,IAAQ,CAACC,QAAb,EAAuB;AACvB,QAAMwC,EAAE,GAAGF,MAAM,CAAC;AAAEvC,MAAAA,GAAG,EAAEA,GAAP;AAAYC,MAAAA,QAAQ,EAAEA;AAAtB,KAAD,CAAjB;AACA,WAAOwC,EAAP;AAED,GALQ,GAKLzC,GALK,EAKAC,QALA,SAKauC,IALb,EAAT;AAMD,CAXM;;IC3BME,SAAS,GAA0B,SAAnCA,SAAmC,CAAAtE,KAAK;MAC3CwC,KAA2CxC,MAA3CwC;MAAIc,SAAuCtD,MAAvCsD;wBAAuCtD,MAA/BmC;MAAAA,wCAAW;MAASoC,uCAAWvE;AAGnD;;;MACQwE,OAASD,OAATC;AAERN,EAAAA,mBAAmB,CACjB;QAAGtC,WAAAA;QAAKC,gBAAAA;AACND,IAAAA,GAAG,CAAC6C,SAAJ,CAAcjC,EAAd,EAAkB+B,MAAlB;;AAEA,QAAIjB,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAAC;AAAE1B,QAAAA,GAAG,EAAHA,GAAF;AAAOC,QAAAA,QAAQ,EAARA,QAAP;AAAiB7B,QAAAA,KAAK,EAALA;AAAjB,OAAD,CAAN;AACD;;AAED,WAAO;;;AACL,8BAAA4B,GAAG,CAAC8C,QAAJ,GAAeC,MAAf,0CAAuBrD,OAAvB,CAA+B,UAAAsD,CAAC;AAC9B;AACA,YAAIA,CAAC,CAACL,MAAF,KAAa/B,EAAjB,EAAqB;AACnBZ,UAAAA,GAAG,CAACiD,WAAJ,CAAgBD,CAAC,CAACpC,EAAlB;AACD;AACF,OALD;AAMAZ,MAAAA,GAAG,CAACkD,YAAJ,CAAiBtC,EAAjB;AACD,KARD;AASD,GAjBgB,EAkBjB,CAACA,EAAD,EAAKc,MAAL,CAlBiB,CAAnB;AAqBAY,EAAAA,mBAAmB,CACjB;QAAGtC,YAAAA;AACD,QAAMmD,GAAG,GAAGnD,GAAG,CAACoD,SAAJ,CAAcxC,EAAd,CAAZ;;AAEA,QAAI,EAACuC,GAAD,YAACA,GAAG,CAAEE,OAAN,CAAJ,EAAmB;AACnBF,IAAAA,GAAG,CAACE,OAAJ,CAAYT,IAAZ;AACD,GANgB,EAOjB,CAAChC,EAAD,EAAKgC,IAAL,CAPiB,CAAnB;AAUA,MAAI,CAACrC,QAAL,EAAe,OAAO,IAAP;AAEf,SAAOT,4BAAA,wBAAA,MAAA,EAAGS,QAAH,CAAP;AACD,CAzCM;;ICGM+C,QAAQ,GAA4B,SAApCA,QAAoC,CAAAlF,KAAK;MAC5CwC,KAAkCxC,MAAlCwC;MAAIc,SAA8BtD,MAA9BsD;MAAQnB,WAAsBnC,MAAtBmC;MAAahC,qCAASH;;iBAEAgD,aAAO,CAAC;AAAA,WAAMjD,YAAY,CAACI,IAAD,CAAlB;AAAA,GAAD,EAA2B,CAC1EA,IAD0E,CAA3B;MAA1CF;MAAYC;MAAciF;AAIjC;AACA;;;MACQrE,OAAgBqE,MAAhBrE;MAAMsE,QAAUD,MAAVC;AAEdlB,EAAAA,mBAAmB,CACjB;QAAGtC,WAAAA;QAAKC,gBAAAA;AACN,QAAMwD,MAAM,GAAGzD,GAAG,CAAC0D,QAAJ,CAAa9C,EAAb,CAAf;AACA,QAAI6C,MAAJ,EAAY;AACZzD,IAAAA,GAAG,CAAC2D,QAAJ;AACE/C,MAAAA,EAAE,EAAFA;AADF,OAEK2C,KAFL;;AAKA,QAAI7B,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAAC;AAAE1B,QAAAA,GAAG,EAAHA,GAAF;AAAOC,QAAAA,QAAQ,EAARA,QAAP;AAAiB7B,QAAAA,KAAK,EAALA;AAAjB,OAAD,CAAN;AACD;AACF,GAZgB,EAajB,CAACwC,EAAD,EAAKc,MAAL,EAAaxC,IAAb,EAAmBsE,KAAnB,CAbiB,CAAnB;AAgBAlB,EAAAA,mBAAmB,CACjB;QAAGtC,YAAAA;QAAKC,iBAAAA;AACN,QAAM2B,WAAW,GAAG;AAClBxD,MAAAA,KAAK,EAALA,KADkB;AAElB4B,MAAAA,GAAG,EAAHA,GAFkB;AAGlBC,MAAAA,QAAQ,EAARA;AAHkB,KAApB;AAKA,QAAM4B,WAAW,GAAGnD,eAAe,CAACL,UAAD,EAAa2B,GAAb,EAAkB4B,WAAlB,EAA+B;AAChE9C,MAAAA,UAAU,EAAE,IADoD;AAEhEE,MAAAA,OAAO,EAAE4B;AAFuD,KAA/B,CAAnC;AAKA,QAAMkB,aAAa,GAAGpD,eAAe,CAACJ,YAAD,EAAe0B,GAAf,EAAoB4B,WAApB,EAAiC;AACpE9C,MAAAA,UAAU,EAAE,MADwD;AAEpEE,MAAAA,OAAO,EAAE4B;AAF2D,KAAjC,CAArC;AAKAiB,IAAAA,WAAW,CAACpC,YAAZ;AACAqC,IAAAA,aAAa,CAACrC,YAAd;AACA,WAAO;AACLoC,MAAAA,WAAW,CAAClC,eAAZ;AACAmC,MAAAA,aAAa,CAACnC,eAAd;AACD,KAHD;AAID,GAvBgB,EAwBjB,CAACiB,EAAD,EAAKvC,UAAL,EAAiBC,YAAjB,CAxBiB,CAAnB;AA2BA,MAAI,CAACiC,QAAL,EAAe,OAAO,IAAP;AACf,SAAOT,4BAAA,wBAAA,MAAA,EAAGS,QAAH,CAAP;AACD,CAxDM;;ICEMqD,SAAS,GAA6B,SAAtCA,SAAsC,CAAAxF,KAAK;MAC9CyF,SAA8BzF,MAA9ByF;MAAQtD,WAAsBnC,MAAtBmC;MAAahC,qCAASH;;AAEtC,MAAM0F,EAAE,GAAGhD,YAAM,CAAwB,IAAxB,CAAjB;;iBACmCM,aAAO,CAAC;AAAA,WAAMjD,YAAY,CAACI,IAAD,CAAlB;AAAA,GAAD,EAA2B,CAACA,IAAD,CAA3B;MAAnCF;MAAYC;;AAEnBgE,EAAAA,mBAAmB,CACjB;QAAGtC,WAAAA;QAAKC,gBAAAA;;AACN,QAAM8D,aAAa,gBAAQxF,IAAR,CAAnB;;AAEA,QAAIgC,QAAJ,EAAc;AACZuD,MAAAA,EAAE,CAACxC,OAAH,GAAa0C,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAb;AACAF,MAAAA,aAAa,CAACG,OAAd,GAAwBJ,EAAE,CAACxC,OAA3B;AACA6C,MAAAA,QAAQ,CAACC,MAAT,CACEtE,4BAAA,CAACA,cAAK,CAACkC,QAAP,MAAA,EAAiBzB,QAAjB,CADF,EAEEuD,EAAE,CAACxC,OAFL;AAID;;AACD,QAAM+C,MAAM,GAAG,IAAIpE,QAAQ,CAACqE,MAAb,CAAoBP,aAApB,EACZQ,SADY,CACFV,MADE,EAEZW,KAFY,CAENxE,GAFM,CAAf;AAIA,QAAM4B,WAAW,GAAG;AAClBxD,MAAAA,KAAK,EAALA,KADkB;AAElB4B,MAAAA,GAAG,EAAHA,GAFkB;AAGlBC,MAAAA,QAAQ,EAARA;AAHkB,KAApB;AAKA,QAAM4B,WAAW,GAAGnD,eAAe,CAACL,UAAD,EAAagG,MAAb,EAAqBzC,WAArB,EAAkC;AACnE9C,MAAAA,UAAU,EAAE;AADuD,KAAlC,CAAnC;AAIA,QAAMgD,aAAa,GAAGpD,eAAe,CAACJ,YAAD,EAAe+F,MAAf,EAAuBzC,WAAvB,EAAoC;AACvE9C,MAAAA,UAAU,EAAE;AAD2D,KAApC,CAArC;AAIA+C,IAAAA,WAAW,CAACpC,YAAZ;AACAqC,IAAAA,aAAa,CAACrC,YAAd;AACA,WAAO;AACL0E,MAAAA,QAAQ,CAACM,sBAAT,CAAgCJ,MAAM,CAACK,UAAP,EAAhC;AACA7C,MAAAA,WAAW,CAAClC,eAAZ;AACAmC,MAAAA,aAAa,CAACnC,eAAd;AACA0E,MAAAA,MAAM,CAACM,MAAP;AACD,KALD;AAMD,GArCgB,EAsCjB,CAACd,MAAD,EAAStD,QAAT,CAtCiB,CAAnB;AAyCA,SAAO,IAAP;AACD,CAhDM;;;;;;;;;;;;"}
\ No newline at end of file
+{"version":3,"file":"react-maplibre-ui.cjs.development.js","sources":["../src/util/pickHandlers.ts","../src/util/createListeners.ts","../src/components/Map.tsx","../src/hooks.ts","../src/components/MapSource.tsx","../src/components/MapLayer.tsx","../src/components/MapMarker.tsx"],"sourcesContent":["import { OnEventListener } from \"../types\";\n\nconst onType = \"on\";\nconst onceType = \"once\";\nexport function pickHandlers<T>(props: T) {\n  const onHandlers = {} as OnEventListener<T>;\n  const onceHandlers = {} as OnEventListener<T>;\n  const rest = {};\n  for (const key in props) {\n    if (key.includes(onceType)) {\n      // @ts-ignore\n      onceHandlers[key] = props[key];\n    } else if (key.includes(onType)) {\n      // @ts-ignore\n      onHandlers[key] = props[key];\n    } else {\n      // @ts-ignore\n      rest[key] = props[key];\n    }\n  }\n\n  return [onHandlers, onceHandlers, rest] as [\n    OnEventListener<T>,\n    OnEventListener<T>,\n    T\n  ];\n}\n","import {\n  OnEventListener,\n  LayerEvents,\n  OnEventHandlerRaw,\n  OnEventHandler,\n  EventHandlerContext,\n} from \"../types\";\nimport { Map, Marker } from \"maplibre-gl\";\n\ninterface ListenerOptions {\n  listenType: \"on\" | \"once\";\n  layerId?: string;\n}\n\nexport function createListeners<P>(\n  onHandlers: OnEventListener<P>,\n  target: Map | Marker,\n  ctx: EventHandlerContext<P>,\n  opts: ListenerOptions = { listenType: \"on\" }\n) {\n  const handlers = [] as [LayerEvents, OnEventHandlerRaw][];\n\n  const { listenType, layerId } = opts;\n\n  for (const handlerType in onHandlers) {\n    const type = handlerType\n      .replace(listenType, \"\")\n      .toLowerCase() as LayerEvents;\n\n    const handler: OnEventHandlerRaw = ev => {\n      // @ts-ignore\n      const customHandler = onHandlers[handlerType] as OnEventHandler<any>;\n\n      return customHandler(ctx, ev);\n    };\n\n    handlers.push([type, handler]);\n  }\n\n  const addListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (opts.layerId) {\n        return (target as Map)[listenType](type, opts.layerId, handler);\n      }\n      return target[listenType](type, handler);\n    });\n  };\n\n  const removeListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (layerId) {\n        return (target as Map).off(type, layerId, handler);\n      }\n      return target.off(type, handler);\n    });\n  };\n\n  return { addListeners, removeListeners };\n}\n","import React, { useEffect, useRef, useState, useMemo } from \"react\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { MaplibreUICtx, OnMapEventHandlers } from \"../types\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\n\nexport const MapCtx = React.createContext<MaplibreUICtx>({\n  map: null,\n  maplibre: MaplibreGL,\n});\n\ntype BaseMaplibreUIProps = {\n  /**\n   * accessToken from maplibre, see https://docs.maplibre.com/help/how-maplibre-works/access-tokens/\n   */\n  accessToken?: string;\n  /**\n   * defaultCenter as [longitude, latitude]\n   */\n  defaultCenter: LngLatLike;\n  /**\n   * maplibre styleUrl, see https://docs.maplibre.com/help/glossary/style-url/\n   */\n  mapStyle?: string;\n  defaultZoom?: number;\n  /**\n   * container style css properties\n   */\n  style?: React.CSSProperties;\n  /**\n   * container css className\n   */\n  className?: string;\n  /**\n   * container div#id tag\n   */\n  id?: string;\n  /**\n   * custom parameters\n   */\n  customParameters?: object;\n};\n\nexport type MaplibreUIProps = Partial<OnMapEventHandlers<BaseMaplibreUIProps>> &\n  BaseMaplibreUIProps;\n\nexport const DEFAULT_MAP_STYLE = \"maplibre://styles/maplibre/light-v10\";\nexport const DEFAULT_MAP_ZOOM = 10;\n\nexport const Map: React.FC<MaplibreUIProps> = props => {\n  const {\n    // accessToken,\n    mapStyle = DEFAULT_MAP_STYLE,\n    children,\n    defaultCenter,\n    defaultZoom = DEFAULT_MAP_ZOOM,\n    style,\n    className,\n    id,\n    customParameters,\n    ...rest\n  } = props;\n\n  const mapContainer = useRef<HTMLDivElement | null>(null);\n  const [mapInstance, setMapInstance] = useState<MaplibreGL.Map | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useEffect(() => {\n    if (!mapContainer.current) return;\n    const map = new MaplibreGL.Map({\n      // accessToken,\n      container: mapContainer.current,\n      style: mapStyle,\n      center: defaultCenter,\n      zoom: defaultZoom,\n      ...customParameters,\n    });\n    const onLoad = () => setIsLoaded(true);\n    map.on(\"load\", onLoad);\n    setMapInstance(map);\n    return () => {\n      map.off(\"load\", onLoad);\n    };\n    // eslint-disable-next-line\n  }, [mapContainer.current]);\n\n  useEffect(() => {\n    const map = mapInstance;\n    if (!map) return;\n\n    const listenerCtx = {\n      props,\n      map,\n      maplibre: MaplibreGL,\n    };\n\n    const onListeners = createListeners(onHandlers, map, listenerCtx, {\n      listenType: \"on\",\n    });\n\n    const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n      listenType: \"once\",\n    });\n\n    onListeners.addListeners();\n    onceListeners.addListeners();\n    return () => {\n      onListeners.removeListeners();\n      onceListeners.removeListeners();\n    };\n    // eslint-disable-next-line\n  }, [mapInstance, onHandlers, onceHandlers]);\n\n  const ctxValue = useMemo(() => {\n    return { map: mapInstance, maplibre: MaplibreGL };\n  }, [mapInstance]);\n\n  return (\n    <React.Fragment>\n      <MapCtx.Provider value={ctxValue}>\n        <div\n          id={id}\n          className={className}\n          style={style}\n          ref={ref => (mapContainer.current = ref)}\n        />\n        {isLoaded && children}\n      </MapCtx.Provider>\n    </React.Fragment>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { MapCtx } from \"./components/Map\";\nimport { NonNullMaplibreUICtx } from \"./types\";\n\n/**\n * useMaplibreUI is a simple wrapper around `useContext(MapCtx)`\n * it provides the Map instance and maplibre module\n * this hook does not ensure the context proivde was mounted\n * @example\n * ```\n * const { map,maplibre } = useMaplibreUI()\n * ```\n */\nexport const useMaplibreUI = () => useContext(MapCtx);\n\ntype MaplibreUIEffectCallback = (\n  mapCtx: NonNullMaplibreUICtx\n) => void | (() => void);\n\n/**\n * useMaplibreUIEffect wraps useMaplibreUI in a useEffect\n * this hook ensures the map instance is created\n * and the context provider was mounted\n * @example\n * ```\n * useMaplibreUIEffect(\n *  ({ map, maplibre }) => {\n *     const marker = new maplibre.Marker().setLngLat(coordinates).addTo(map);\n *\n *     return () => {\n *       marker.remove();\n *     };\n *   },\n *   [coordinates]\n * );\n * ```\n */\nexport const useMaplibreUIEffect = (\n  effect: MaplibreUIEffectCallback,\n  deps: any[]\n) => {\n  const { map, maplibre } = useMaplibreUI();\n  useEffect(() => {\n    if (!map || !maplibre) return;\n    const rt = effect({ map: map, maplibre: maplibre });\n    return rt;\n    // eslint-disable-next-line\n  }, [map, maplibre, ...deps]);\n};\n","import { AnySourceData, GeoJSONSource } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { MaplibreLayerEventHandler } from \"../types\";\n\nexport type SourceProps = AnySourceData & {\n  id: string;\n  onLoad?: MaplibreLayerEventHandler<SourceProps, any>;\n};\n\nexport const MapSource: React.FC<SourceProps> = props => {\n  const { id, onLoad, children = null, ...source } = props;\n\n  // possible source attributes we need to track\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/sources/\n  const { data } = source as { data: any };\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      map.addSource(id, source);\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n\n      return () => {\n        map.getStyle().layers?.forEach(l => {\n          // @ts-ignore\n          if (l.source === id) {\n            map.removeLayer(l.id);\n          }\n        });\n        map.removeSource(id);\n      };\n    },\n    [id, onLoad]\n  );\n\n  useMaplibreUIEffect(\n    ({ map }) => {\n      const src = map.getSource(id) as GeoJSONSource;\n      // @ts-ignore\n      if (!src?.setData) return;\n      src.setData(data);\n    },\n    [id, data]\n  );\n\n  if (!children) return null;\n\n  return <>{children}</>;\n};\n","import { AnyLayer } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\nimport { OnLayerEventHandlers, MaplibreLayerEventHandler } from \"../types\";\n\nexport type MapLayerProps = AnyLayer &\n  Partial<OnLayerEventHandlers<AnyLayer>> & {\n    onLoad?: MaplibreLayerEventHandler<AnyLayer, any>;\n  };\n\nexport const MapLayer: React.FC<MapLayerProps> = props => {\n  const { id, onLoad, children, ...rest } = props;\n\n  const [onHandlers, onceHandlers, layer] = useMemo(() => pickHandlers(rest), [\n    rest,\n  ]);\n  // layer properties to trigger an effect\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/layers/\n  // @ts-ignore\n  const { type, paint } = layer;\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const exists = map.getLayer(id);\n      if (exists) return;\n      map.addLayer({\n        id,\n        ...layer,\n      });\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n    },\n    [id, onLoad, type, paint]\n  );\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, map, listenerCtx, {\n        listenType: \"on\",\n        layerId: id,\n      });\n\n      const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n        listenType: \"once\",\n        layerId: id,\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n      };\n    },\n    [id, onHandlers, onceHandlers]\n  );\n\n  if (!children) return null;\n  return <>{children}</>;\n};\n","import React, { useRef, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { OnMapEventHandlers } from \"../types\";\nimport { createListeners } from \"../util/createListeners\";\nimport { pickHandlers } from \"../util/pickHandlers\";\n\ntype BaseMapMarkerProps = {\n  lngLat: LngLatLike;\n} & MaplibreGL.MarkerOptions;\n\nexport type MapMarkerProps = Partial<OnMapEventHandlers<BaseMapMarkerProps>> &\n  BaseMapMarkerProps;\n\nexport const MapMarker: React.FC<MapMarkerProps> = props => {\n  const { lngLat, children, ...rest } = props;\n\n  const el = useRef<HTMLDivElement | null>(null);\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const markerOptions = { ...rest };\n\n      if (children) {\n        el.current = document.createElement(\"div\");\n        markerOptions.element = el.current;\n        ReactDOM.render(\n          <React.Fragment>{children}</React.Fragment>,\n          el.current\n        );\n      }\n      const marker = new maplibre.Marker(markerOptions)\n        .setLngLat(lngLat)\n        .addTo(map);\n\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, marker, listenerCtx, {\n        listenType: \"on\",\n      });\n\n      const onceListeners = createListeners(onceHandlers, marker, listenerCtx, {\n        listenType: \"once\",\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        ReactDOM.unmountComponentAtNode(marker.getElement());\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n        marker.remove();\n      };\n    },\n    [lngLat, children]\n  );\n\n  return null;\n};\n"],"names":["onType","onceType","pickHandlers","props","onHandlers","onceHandlers","rest","key","includes","createListeners","target","ctx","opts","listenType","handlers","layerId","handlerType","type","replace","toLowerCase","handler","ev","customHandler","push","addListeners","forEach","removeListeners","off","MapCtx","React","createContext","map","maplibre","MaplibreGL","DEFAULT_MAP_STYLE","DEFAULT_MAP_ZOOM","Map","mapStyle","children","defaultCenter","defaultZoom","style","className","id","customParameters","mapContainer","useRef","useState","mapInstance","setMapInstance","isLoaded","setIsLoaded","useMemo","useEffect","current","container","center","zoom","onLoad","on","listenerCtx","onListeners","onceListeners","ctxValue","Fragment","Provider","value","ref","useMaplibreUI","useContext","useMaplibreUIEffect","effect","deps","rt","MapSource","source","data","addSource","getStyle","layers","l","removeLayer","removeSource","src","getSource","setData","MapLayer","layer","paint","exists","getLayer","addLayer","MapMarker","lngLat","el","markerOptions","document","createElement","element","ReactDOM","render","marker","Marker","setLngLat","addTo","unmountComponentAtNode","getElement","remove"],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/react-maplibre-ui.cjs.production.min.js b/dist/react-maplibre-ui.cjs.production.min.js
index 6daf9b356f2cb3ef7d28838daf56cc5fcf1e9ba5..02264ff4ca3b240ccd44d152177ee55990e1d82a 100644
--- a/dist/react-maplibre-ui.cjs.production.min.js
+++ b/dist/react-maplibre-ui.cjs.production.min.js
@@ -1,2 +1,2 @@
-"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var r=require("react"),n=e(r),t=e(require("maplibre-gl")),a=e(require("react-dom"));function o(){return(o=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var n=arguments[r];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}function i(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r.indexOf(n=o[t])>=0||(a[n]=e[n]);return a}function u(e){var r={},n={},t={};for(var a in e)a.includes("once")?n[a]=e[a]:a.includes("on")?r[a]=e[a]:t[a]=e[a];return[r,n,t]}function l(e,r,n,t){void 0===t&&(t={listenType:"on"});var a=[],o=t.listenType,i=t.layerId,u=function(r){var t=r.replace(o,"").toLowerCase();a.push([t,function(t){return(0,e[r])(n,t)}])};for(var l in e)u(l);return{addListeners:function(){a.forEach((function(e){var n=e[0],a=e[1];return t.layerId?r[o](n,t.layerId,a):r[o](n,a)}))},removeListeners:function(){a.forEach((function(e){var n=e[0],t=e[1];return i?r.off(n,i,t):r.off(n,t)}))}}}var c=n.createContext({map:null,maplibre:t}),s=function(){return r.useContext(c)},p=function(e,n){var t=s(),a=t.map,o=t.maplibre;r.useEffect((function(){if(a&&o)return e({map:a,maplibre:o})}),[a,o].concat(n))};exports.DEFAULT_MAP_STYLE="maplibre://styles/maplibre/light-v10",exports.DEFAULT_MAP_ZOOM=10,exports.Map=function(e){var a=e.mapStyle,o=void 0===a?"maplibre://styles/maplibre/light-v10":a,s=e.children,p=e.defaultCenter,f=e.defaultZoom,d=void 0===f?10:f,m=e.style,v=e.className,y=e.id,L=i(e,["mapStyle","children","defaultCenter","defaultZoom","style","className","id"]),b=r.useRef(null),h=r.useState(null),E=h[0],M=h[1],g=r.useState(!1),x=g[0],T=g[1],S=r.useMemo((function(){return u(L)}),[L]),O=S[0],C=S[1];r.useEffect((function(){if(b.current){var e=new t.Map({container:b.current,style:o,center:p,zoom:d}),r=function(){return T(!0)};return e.on("load",r),M(e),function(){e.off("load",r)}}}),[b.current]),r.useEffect((function(){var r=E;if(r){var n={props:e,map:r,maplibre:t},a=l(O,r,n,{listenType:"on"}),o=l(C,r,n,{listenType:"once"});return a.addListeners(),o.addListeners(),function(){a.removeListeners(),o.removeListeners()}}}),[E,O,C]);var I=r.useMemo((function(){return{map:E,maplibre:t}}),[E]);return n.createElement(n.Fragment,null,n.createElement(c.Provider,{value:I},n.createElement("div",{id:y,className:v,style:m,ref:function(e){return b.current=e}}),x&&s))},exports.MapCtx=c,exports.MapLayer=function(e){var t=e.id,a=e.onLoad,c=e.children,s=i(e,["id","onLoad","children"]),f=r.useMemo((function(){return u(s)}),[s]),d=f[0],m=f[1],v=f[2];return p((function(r){var n=r.map,i=r.maplibre;n.getLayer(t)||(n.addLayer(o({id:t},v)),a&&a({map:n,maplibre:i,props:e}))}),[t,a,v.type,v.paint]),p((function(r){var n=r.map,a={props:e,map:n,maplibre:r.maplibre},o=l(d,n,a,{listenType:"on",layerId:t}),i=l(m,n,a,{listenType:"once",layerId:t});return o.addListeners(),i.addListeners(),function(){o.removeListeners(),i.removeListeners()}}),[t,d,m]),c?n.createElement(n.Fragment,null,c):null},exports.MapMarker=function(e){var t=e.lngLat,c=e.children,s=i(e,["lngLat","children"]),f=r.useRef(null),d=r.useMemo((function(){return u(s)}),[s]),m=d[0],v=d[1];return p((function(r){var i=r.map,u=r.maplibre,p=o({},s);c&&(f.current=document.createElement("div"),p.element=f.current,a.render(n.createElement(n.Fragment,null,c),f.current));var d=new u.Marker(p).setLngLat(t).addTo(i),y={props:e,map:i,maplibre:u},L=l(m,d,y,{listenType:"on"}),b=l(v,d,y,{listenType:"once"});return L.addListeners(),b.addListeners(),function(){a.unmountComponentAtNode(d.getElement()),L.removeListeners(),b.removeListeners(),d.remove()}}),[t,c]),null},exports.MapSource=function(e){var r=e.id,t=e.onLoad,a=e.children,o=void 0===a?null:a,u=i(e,["id","onLoad","children"]),l=u.data;return p((function(n){var a=n.map,o=n.maplibre;return a.addSource(r,u),t&&t({map:a,maplibre:o,props:e}),function(){var e;null==(e=a.getStyle().layers)||e.forEach((function(e){e.source===r&&a.removeLayer(e.id)})),a.removeSource(r)}}),[r,t]),p((function(e){var n=e.map.getSource(r);null!=n&&n.setData&&n.setData(l)}),[r,l]),o?n.createElement(n.Fragment,null,o):null},exports.useMaplibreUI=s,exports.useMaplibreUIEffect=p;
+"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var r=require("react"),n=e(r),t=e(require("maplibre-gl")),a=e(require("react-dom"));function o(){return(o=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var n=arguments[r];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}function u(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r.indexOf(n=o[t])>=0||(a[n]=e[n]);return a}function i(e){var r={},n={},t={};for(var a in e)a.includes("once")?n[a]=e[a]:a.includes("on")?r[a]=e[a]:t[a]=e[a];return[r,n,t]}function l(e,r,n,t){void 0===t&&(t={listenType:"on"});var a=[],o=t.listenType,u=t.layerId,i=function(r){var t=r.replace(o,"").toLowerCase();a.push([t,function(t){return(0,e[r])(n,t)}])};for(var l in e)i(l);return{addListeners:function(){a.forEach((function(e){var n=e[0],a=e[1];return t.layerId?r[o](n,t.layerId,a):r[o](n,a)}))},removeListeners:function(){a.forEach((function(e){var n=e[0],t=e[1];return u?r.off(n,u,t):r.off(n,t)}))}}}var s=n.createContext({map:null,maplibre:t}),c=function(){return r.useContext(s)},p=function(e,n){var t=c(),a=t.map,o=t.maplibre;r.useEffect((function(){if(a&&o)return e({map:a,maplibre:o})}),[a,o].concat(n))};exports.DEFAULT_MAP_STYLE="maplibre://styles/maplibre/light-v10",exports.DEFAULT_MAP_ZOOM=10,exports.Map=function(e){var a=e.mapStyle,c=void 0===a?"maplibre://styles/maplibre/light-v10":a,p=e.children,f=e.defaultCenter,m=e.defaultZoom,d=void 0===m?10:m,v=e.style,y=e.className,L=e.id,b=e.customParameters,h=u(e,["mapStyle","children","defaultCenter","defaultZoom","style","className","id","customParameters"]),E=r.useRef(null),M=r.useState(null),g=M[0],x=M[1],T=r.useState(!1),S=T[0],O=T[1],C=r.useMemo((function(){return i(h)}),[h]),I=C[0],P=C[1];r.useEffect((function(){if(E.current){var e=new t.Map(o({container:E.current,style:c,center:f,zoom:d},b)),r=function(){return O(!0)};return e.on("load",r),x(e),function(){e.off("load",r)}}}),[E.current]),r.useEffect((function(){var r=g;if(r){var n={props:e,map:r,maplibre:t},a=l(I,r,n,{listenType:"on"}),o=l(P,r,n,{listenType:"once"});return a.addListeners(),o.addListeners(),function(){a.removeListeners(),o.removeListeners()}}}),[g,I,P]);var F=r.useMemo((function(){return{map:g,maplibre:t}}),[g]);return n.createElement(n.Fragment,null,n.createElement(s.Provider,{value:F},n.createElement("div",{id:L,className:y,style:v,ref:function(e){return E.current=e}}),S&&p))},exports.MapCtx=s,exports.MapLayer=function(e){var t=e.id,a=e.onLoad,s=e.children,c=u(e,["id","onLoad","children"]),f=r.useMemo((function(){return i(c)}),[c]),m=f[0],d=f[1],v=f[2];return p((function(r){var n=r.map,u=r.maplibre;n.getLayer(t)||(n.addLayer(o({id:t},v)),a&&a({map:n,maplibre:u,props:e}))}),[t,a,v.type,v.paint]),p((function(r){var n=r.map,a={props:e,map:n,maplibre:r.maplibre},o=l(m,n,a,{listenType:"on",layerId:t}),u=l(d,n,a,{listenType:"once",layerId:t});return o.addListeners(),u.addListeners(),function(){o.removeListeners(),u.removeListeners()}}),[t,m,d]),s?n.createElement(n.Fragment,null,s):null},exports.MapMarker=function(e){var t=e.lngLat,s=e.children,c=u(e,["lngLat","children"]),f=r.useRef(null),m=r.useMemo((function(){return i(c)}),[c]),d=m[0],v=m[1];return p((function(r){var u=r.map,i=r.maplibre,p=o({},c);s&&(f.current=document.createElement("div"),p.element=f.current,a.render(n.createElement(n.Fragment,null,s),f.current));var m=new i.Marker(p).setLngLat(t).addTo(u),y={props:e,map:u,maplibre:i},L=l(d,m,y,{listenType:"on"}),b=l(v,m,y,{listenType:"once"});return L.addListeners(),b.addListeners(),function(){a.unmountComponentAtNode(m.getElement()),L.removeListeners(),b.removeListeners(),m.remove()}}),[t,s]),null},exports.MapSource=function(e){var r=e.id,t=e.onLoad,a=e.children,o=void 0===a?null:a,i=u(e,["id","onLoad","children"]),l=i.data;return p((function(n){var a=n.map,o=n.maplibre;return a.addSource(r,i),t&&t({map:a,maplibre:o,props:e}),function(){var e;null==(e=a.getStyle().layers)||e.forEach((function(e){e.source===r&&a.removeLayer(e.id)})),a.removeSource(r)}}),[r,t]),p((function(e){var n=e.map.getSource(r);null!=n&&n.setData&&n.setData(l)}),[r,l]),o?n.createElement(n.Fragment,null,o):null},exports.useMaplibreUI=c,exports.useMaplibreUIEffect=p;
 //# sourceMappingURL=react-maplibre-ui.cjs.production.min.js.map
diff --git a/dist/react-maplibre-ui.cjs.production.min.js.map b/dist/react-maplibre-ui.cjs.production.min.js.map
index a28076404d0ffe8be5df72517ec40c95af7973b9..5ea2168a8a99ed109082999f7fb49dffa473af8d 100644
--- a/dist/react-maplibre-ui.cjs.production.min.js.map
+++ b/dist/react-maplibre-ui.cjs.production.min.js.map
@@ -1 +1 @@
-{"version":3,"file":"react-maplibre-ui.cjs.production.min.js","sources":["../src/util/pickHandlers.ts","../src/util/createListeners.ts","../src/components/Map.tsx","../src/hooks.ts","../src/components/MapLayer.tsx","../src/components/MapMarker.tsx","../src/components/MapSource.tsx"],"sourcesContent":["import { OnEventListener } from \"../types\";\n\nconst onType = \"on\";\nconst onceType = \"once\";\nexport function pickHandlers<T>(props: T) {\n  const onHandlers = {} as OnEventListener<T>;\n  const onceHandlers = {} as OnEventListener<T>;\n  const rest = {};\n  for (const key in props) {\n    if (key.includes(onceType)) {\n      // @ts-ignore\n      onceHandlers[key] = props[key];\n    } else if (key.includes(onType)) {\n      // @ts-ignore\n      onHandlers[key] = props[key];\n    } else {\n      // @ts-ignore\n      rest[key] = props[key];\n    }\n  }\n\n  return [onHandlers, onceHandlers, rest] as [\n    OnEventListener<T>,\n    OnEventListener<T>,\n    T\n  ];\n}\n","import {\n  OnEventListener,\n  LayerEvents,\n  OnEventHandlerRaw,\n  OnEventHandler,\n  EventHandlerContext,\n} from \"../types\";\nimport { Map, Marker } from \"maplibre-gl\";\n\ninterface ListenerOptions {\n  listenType: \"on\" | \"once\";\n  layerId?: string;\n}\n\nexport function createListeners<P>(\n  onHandlers: OnEventListener<P>,\n  target: Map | Marker,\n  ctx: EventHandlerContext<P>,\n  opts: ListenerOptions = { listenType: \"on\" }\n) {\n  const handlers = [] as [LayerEvents, OnEventHandlerRaw][];\n\n  const { listenType, layerId } = opts;\n\n  for (const handlerType in onHandlers) {\n    const type = handlerType\n      .replace(listenType, \"\")\n      .toLowerCase() as LayerEvents;\n\n    const handler: OnEventHandlerRaw = ev => {\n      // @ts-ignore\n      const customHandler = onHandlers[handlerType] as OnEventHandler<any>;\n\n      return customHandler(ctx, ev);\n    };\n\n    handlers.push([type, handler]);\n  }\n\n  const addListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (opts.layerId) {\n        return (target as Map)[listenType](type, opts.layerId, handler);\n      }\n      return target[listenType](type, handler);\n    });\n  };\n\n  const removeListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (layerId) {\n        return (target as Map).off(type, layerId, handler);\n      }\n      return target.off(type, handler);\n    });\n  };\n\n  return { addListeners, removeListeners };\n}\n","import React, { useEffect, useRef, useState, useMemo } from \"react\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { MaplibreUICtx, OnMapEventHandlers } from \"../types\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\n\nexport const MapCtx = React.createContext<MaplibreUICtx>({\n  map: null,\n  maplibre: MaplibreGL,\n});\n\ntype BaseMaplibreUIProps = {\n  /**\n   * accessToken from maplibre, see https://docs.maplibre.com/help/how-maplibre-works/access-tokens/\n   */\n  accessToken?: string;\n  /**\n   * defaultCenter as [longitude, latitude]\n   */\n  defaultCenter: LngLatLike;\n  /**\n   * maplibre styleUrl, see https://docs.maplibre.com/help/glossary/style-url/\n   */\n  mapStyle?: string;\n  defaultZoom?: number;\n  /**\n   * container style css properties\n   */\n  style?: React.CSSProperties;\n  /**\n   * container css className\n   */\n  className?: string;\n  /**\n   * container div#id tag\n   */\n  id?: string;\n};\n\nexport type MaplibreUIProps = Partial<OnMapEventHandlers<BaseMaplibreUIProps>> &\n  BaseMaplibreUIProps;\n\nexport const DEFAULT_MAP_STYLE = \"maplibre://styles/maplibre/light-v10\";\nexport const DEFAULT_MAP_ZOOM = 10;\n\nexport const Map: React.FC<MaplibreUIProps> = props => {\n  const {\n    // accessToken,\n    mapStyle = DEFAULT_MAP_STYLE,\n    children,\n    defaultCenter,\n    defaultZoom = DEFAULT_MAP_ZOOM,\n    style,\n    className,\n    id,\n    ...rest\n  } = props;\n\n  const mapContainer = useRef<HTMLDivElement | null>(null);\n  const [mapInstance, setMapInstance] = useState<MaplibreGL.Map | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useEffect(() => {\n    if (!mapContainer.current) return;\n    const map = new MaplibreGL.Map({\n      // accessToken,\n      container: mapContainer.current,\n      style: mapStyle,\n      center: defaultCenter,\n      zoom: defaultZoom,\n    });\n\n    const onLoad = () => setIsLoaded(true);\n    map.on(\"load\", onLoad);\n    setMapInstance(map);\n    return () => {\n      map.off(\"load\", onLoad);\n    };\n    // eslint-disable-next-line\n  }, [mapContainer.current]);\n\n  useEffect(() => {\n    const map = mapInstance;\n    if (!map) return;\n\n    const listenerCtx = {\n      props,\n      map,\n      maplibre: MaplibreGL,\n    };\n\n    const onListeners = createListeners(onHandlers, map, listenerCtx, {\n      listenType: \"on\",\n    });\n\n    const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n      listenType: \"once\",\n    });\n\n    onListeners.addListeners();\n    onceListeners.addListeners();\n    return () => {\n      onListeners.removeListeners();\n      onceListeners.removeListeners();\n    };\n    // eslint-disable-next-line\n  }, [mapInstance, onHandlers, onceHandlers]);\n\n  const ctxValue = useMemo(() => {\n    return { map: mapInstance, maplibre: MaplibreGL };\n  }, [mapInstance]);\n\n  return (\n    <React.Fragment>\n      <MapCtx.Provider value={ctxValue}>\n        <div\n          id={id}\n          className={className}\n          style={style}\n          ref={ref => (mapContainer.current = ref)}\n        />\n        {isLoaded && children}\n      </MapCtx.Provider>\n    </React.Fragment>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { MapCtx } from \"./components/Map\";\nimport { NonNullMaplibreUICtx } from \"./types\";\n\n/**\n * useMaplibreUI is a simple wrapper around `useContext(MapCtx)`\n * it provides the Map instance and maplibre module\n * this hook does not ensure the context proivde was mounted\n * @example\n * ```\n * const { map,maplibre } = useMaplibreUI()\n * ```\n */\nexport const useMaplibreUI = () => useContext(MapCtx);\n\ntype MaplibreUIEffectCallback = (\n  mapCtx: NonNullMaplibreUICtx\n) => void | (() => void);\n\n/**\n * useMaplibreUIEffect wraps useMaplibreUI in a useEffect\n * this hook ensures the map instance is created\n * and the context provider was mounted\n * @example\n * ```\n * useMaplibreUIEffect(\n *  ({ map, maplibre }) => {\n *     const marker = new maplibre.Marker().setLngLat(coordinates).addTo(map);\n *\n *     return () => {\n *       marker.remove();\n *     };\n *   },\n *   [coordinates]\n * );\n * ```\n */\nexport const useMaplibreUIEffect = (\n  effect: MaplibreUIEffectCallback,\n  deps: any[]\n) => {\n  const { map, maplibre } = useMaplibreUI();\n  useEffect(() => {\n    if (!map || !maplibre) return;\n    const rt = effect({ map: map, maplibre: maplibre });\n    return rt;\n    // eslint-disable-next-line\n  }, [map, maplibre, ...deps]);\n};\n","import { AnyLayer } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\nimport { OnLayerEventHandlers, MaplibreLayerEventHandler } from \"../types\";\n\nexport type MapLayerProps = AnyLayer &\n  Partial<OnLayerEventHandlers<AnyLayer>> & {\n    onLoad?: MaplibreLayerEventHandler<AnyLayer, any>;\n  };\n\nexport const MapLayer: React.FC<MapLayerProps> = props => {\n  const { id, onLoad, children, ...rest } = props;\n\n  const [onHandlers, onceHandlers, layer] = useMemo(() => pickHandlers(rest), [\n    rest,\n  ]);\n  // layer properties to trigger an effect\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/layers/\n  // @ts-ignore\n  const { type, paint } = layer;\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const exists = map.getLayer(id);\n      if (exists) return;\n      map.addLayer({\n        id,\n        ...layer,\n      });\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n    },\n    [id, onLoad, type, paint]\n  );\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, map, listenerCtx, {\n        listenType: \"on\",\n        layerId: id,\n      });\n\n      const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n        listenType: \"once\",\n        layerId: id,\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n      };\n    },\n    [id, onHandlers, onceHandlers]\n  );\n\n  if (!children) return null;\n  return <>{children}</>;\n};\n","import React, { useRef, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { OnMapEventHandlers } from \"../types\";\nimport { createListeners } from \"../util/createListeners\";\nimport { pickHandlers } from \"../util/pickHandlers\";\n\ntype BaseMapMarkerProps = {\n  lngLat: LngLatLike;\n} & MaplibreGL.MarkerOptions;\n\nexport type MapMarkerProps = Partial<OnMapEventHandlers<BaseMapMarkerProps>> &\n  BaseMapMarkerProps;\n\nexport const MapMarker: React.FC<MapMarkerProps> = props => {\n  const { lngLat, children, ...rest } = props;\n\n  const el = useRef<HTMLDivElement | null>(null);\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const markerOptions = { ...rest };\n\n      if (children) {\n        el.current = document.createElement(\"div\");\n        markerOptions.element = el.current;\n        ReactDOM.render(\n          <React.Fragment>{children}</React.Fragment>,\n          el.current\n        );\n      }\n      const marker = new maplibre.Marker(markerOptions)\n        .setLngLat(lngLat)\n        .addTo(map);\n\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, marker, listenerCtx, {\n        listenType: \"on\",\n      });\n\n      const onceListeners = createListeners(onceHandlers, marker, listenerCtx, {\n        listenType: \"once\",\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        ReactDOM.unmountComponentAtNode(marker.getElement());\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n        marker.remove();\n      };\n    },\n    [lngLat, children]\n  );\n\n  return null;\n};\n","import { AnySourceData, GeoJSONSource } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { MaplibreLayerEventHandler } from \"../types\";\n\nexport type SourceProps = AnySourceData & {\n  id: string;\n  onLoad?: MaplibreLayerEventHandler<SourceProps, any>;\n};\n\nexport const MapSource: React.FC<SourceProps> = props => {\n  const { id, onLoad, children = null, ...source } = props;\n\n  // possible source attributes we need to track\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/sources/\n  const { data } = source as { data: any };\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      map.addSource(id, source);\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n\n      return () => {\n        map.getStyle().layers?.forEach(l => {\n          // @ts-ignore\n          if (l.source === id) {\n            map.removeLayer(l.id);\n          }\n        });\n        map.removeSource(id);\n      };\n    },\n    [id, onLoad]\n  );\n\n  useMaplibreUIEffect(\n    ({ map }) => {\n      const src = map.getSource(id) as GeoJSONSource;\n      // @ts-ignore\n      if (!src?.setData) return;\n      src.setData(data);\n    },\n    [id, data]\n  );\n\n  if (!children) return null;\n\n  return <>{children}</>;\n};\n"],"names":["pickHandlers","props","onHandlers","onceHandlers","rest","key","includes","createListeners","target","ctx","opts","listenType","handlers","layerId","handlerType","type","replace","toLowerCase","push","ev","customHandler","addListeners","forEach","handler","removeListeners","off","MapCtx","React","createContext","map","maplibre","MaplibreGL","useMaplibreUI","useContext","useMaplibreUIEffect","effect","deps","useEffect","mapStyle","children","defaultCenter","defaultZoom","style","className","id","mapContainer","useRef","useState","mapInstance","setMapInstance","isLoaded","setIsLoaded","useMemo","current","Map","container","center","zoom","onLoad","on","listenerCtx","onListeners","onceListeners","ctxValue","Fragment","Provider","value","ref","layer","getLayer","addLayer","paint","lngLat","el","markerOptions","document","createElement","element","ReactDOM","render","marker","Marker","setLngLat","addTo","unmountComponentAtNode","getElement","remove","source","data","addSource","getStyle","layers","l","removeLayer","removeSource","src","getSource","setData"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"react-maplibre-ui.cjs.production.min.js","sources":["../src/util/pickHandlers.ts","../src/util/createListeners.ts","../src/components/Map.tsx","../src/hooks.ts","../src/components/MapLayer.tsx","../src/components/MapMarker.tsx","../src/components/MapSource.tsx"],"sourcesContent":["import { OnEventListener } from \"../types\";\n\nconst onType = \"on\";\nconst onceType = \"once\";\nexport function pickHandlers<T>(props: T) {\n  const onHandlers = {} as OnEventListener<T>;\n  const onceHandlers = {} as OnEventListener<T>;\n  const rest = {};\n  for (const key in props) {\n    if (key.includes(onceType)) {\n      // @ts-ignore\n      onceHandlers[key] = props[key];\n    } else if (key.includes(onType)) {\n      // @ts-ignore\n      onHandlers[key] = props[key];\n    } else {\n      // @ts-ignore\n      rest[key] = props[key];\n    }\n  }\n\n  return [onHandlers, onceHandlers, rest] as [\n    OnEventListener<T>,\n    OnEventListener<T>,\n    T\n  ];\n}\n","import {\n  OnEventListener,\n  LayerEvents,\n  OnEventHandlerRaw,\n  OnEventHandler,\n  EventHandlerContext,\n} from \"../types\";\nimport { Map, Marker } from \"maplibre-gl\";\n\ninterface ListenerOptions {\n  listenType: \"on\" | \"once\";\n  layerId?: string;\n}\n\nexport function createListeners<P>(\n  onHandlers: OnEventListener<P>,\n  target: Map | Marker,\n  ctx: EventHandlerContext<P>,\n  opts: ListenerOptions = { listenType: \"on\" }\n) {\n  const handlers = [] as [LayerEvents, OnEventHandlerRaw][];\n\n  const { listenType, layerId } = opts;\n\n  for (const handlerType in onHandlers) {\n    const type = handlerType\n      .replace(listenType, \"\")\n      .toLowerCase() as LayerEvents;\n\n    const handler: OnEventHandlerRaw = ev => {\n      // @ts-ignore\n      const customHandler = onHandlers[handlerType] as OnEventHandler<any>;\n\n      return customHandler(ctx, ev);\n    };\n\n    handlers.push([type, handler]);\n  }\n\n  const addListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (opts.layerId) {\n        return (target as Map)[listenType](type, opts.layerId, handler);\n      }\n      return target[listenType](type, handler);\n    });\n  };\n\n  const removeListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (layerId) {\n        return (target as Map).off(type, layerId, handler);\n      }\n      return target.off(type, handler);\n    });\n  };\n\n  return { addListeners, removeListeners };\n}\n","import React, { useEffect, useRef, useState, useMemo } from \"react\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { MaplibreUICtx, OnMapEventHandlers } from \"../types\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\n\nexport const MapCtx = React.createContext<MaplibreUICtx>({\n  map: null,\n  maplibre: MaplibreGL,\n});\n\ntype BaseMaplibreUIProps = {\n  /**\n   * accessToken from maplibre, see https://docs.maplibre.com/help/how-maplibre-works/access-tokens/\n   */\n  accessToken?: string;\n  /**\n   * defaultCenter as [longitude, latitude]\n   */\n  defaultCenter: LngLatLike;\n  /**\n   * maplibre styleUrl, see https://docs.maplibre.com/help/glossary/style-url/\n   */\n  mapStyle?: string;\n  defaultZoom?: number;\n  /**\n   * container style css properties\n   */\n  style?: React.CSSProperties;\n  /**\n   * container css className\n   */\n  className?: string;\n  /**\n   * container div#id tag\n   */\n  id?: string;\n  /**\n   * custom parameters\n   */\n  customParameters?: object;\n};\n\nexport type MaplibreUIProps = Partial<OnMapEventHandlers<BaseMaplibreUIProps>> &\n  BaseMaplibreUIProps;\n\nexport const DEFAULT_MAP_STYLE = \"maplibre://styles/maplibre/light-v10\";\nexport const DEFAULT_MAP_ZOOM = 10;\n\nexport const Map: React.FC<MaplibreUIProps> = props => {\n  const {\n    // accessToken,\n    mapStyle = DEFAULT_MAP_STYLE,\n    children,\n    defaultCenter,\n    defaultZoom = DEFAULT_MAP_ZOOM,\n    style,\n    className,\n    id,\n    customParameters,\n    ...rest\n  } = props;\n\n  const mapContainer = useRef<HTMLDivElement | null>(null);\n  const [mapInstance, setMapInstance] = useState<MaplibreGL.Map | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useEffect(() => {\n    if (!mapContainer.current) return;\n    const map = new MaplibreGL.Map({\n      // accessToken,\n      container: mapContainer.current,\n      style: mapStyle,\n      center: defaultCenter,\n      zoom: defaultZoom,\n      ...customParameters,\n    });\n    const onLoad = () => setIsLoaded(true);\n    map.on(\"load\", onLoad);\n    setMapInstance(map);\n    return () => {\n      map.off(\"load\", onLoad);\n    };\n    // eslint-disable-next-line\n  }, [mapContainer.current]);\n\n  useEffect(() => {\n    const map = mapInstance;\n    if (!map) return;\n\n    const listenerCtx = {\n      props,\n      map,\n      maplibre: MaplibreGL,\n    };\n\n    const onListeners = createListeners(onHandlers, map, listenerCtx, {\n      listenType: \"on\",\n    });\n\n    const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n      listenType: \"once\",\n    });\n\n    onListeners.addListeners();\n    onceListeners.addListeners();\n    return () => {\n      onListeners.removeListeners();\n      onceListeners.removeListeners();\n    };\n    // eslint-disable-next-line\n  }, [mapInstance, onHandlers, onceHandlers]);\n\n  const ctxValue = useMemo(() => {\n    return { map: mapInstance, maplibre: MaplibreGL };\n  }, [mapInstance]);\n\n  return (\n    <React.Fragment>\n      <MapCtx.Provider value={ctxValue}>\n        <div\n          id={id}\n          className={className}\n          style={style}\n          ref={ref => (mapContainer.current = ref)}\n        />\n        {isLoaded && children}\n      </MapCtx.Provider>\n    </React.Fragment>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { MapCtx } from \"./components/Map\";\nimport { NonNullMaplibreUICtx } from \"./types\";\n\n/**\n * useMaplibreUI is a simple wrapper around `useContext(MapCtx)`\n * it provides the Map instance and maplibre module\n * this hook does not ensure the context proivde was mounted\n * @example\n * ```\n * const { map,maplibre } = useMaplibreUI()\n * ```\n */\nexport const useMaplibreUI = () => useContext(MapCtx);\n\ntype MaplibreUIEffectCallback = (\n  mapCtx: NonNullMaplibreUICtx\n) => void | (() => void);\n\n/**\n * useMaplibreUIEffect wraps useMaplibreUI in a useEffect\n * this hook ensures the map instance is created\n * and the context provider was mounted\n * @example\n * ```\n * useMaplibreUIEffect(\n *  ({ map, maplibre }) => {\n *     const marker = new maplibre.Marker().setLngLat(coordinates).addTo(map);\n *\n *     return () => {\n *       marker.remove();\n *     };\n *   },\n *   [coordinates]\n * );\n * ```\n */\nexport const useMaplibreUIEffect = (\n  effect: MaplibreUIEffectCallback,\n  deps: any[]\n) => {\n  const { map, maplibre } = useMaplibreUI();\n  useEffect(() => {\n    if (!map || !maplibre) return;\n    const rt = effect({ map: map, maplibre: maplibre });\n    return rt;\n    // eslint-disable-next-line\n  }, [map, maplibre, ...deps]);\n};\n","import { AnyLayer } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\nimport { OnLayerEventHandlers, MaplibreLayerEventHandler } from \"../types\";\n\nexport type MapLayerProps = AnyLayer &\n  Partial<OnLayerEventHandlers<AnyLayer>> & {\n    onLoad?: MaplibreLayerEventHandler<AnyLayer, any>;\n  };\n\nexport const MapLayer: React.FC<MapLayerProps> = props => {\n  const { id, onLoad, children, ...rest } = props;\n\n  const [onHandlers, onceHandlers, layer] = useMemo(() => pickHandlers(rest), [\n    rest,\n  ]);\n  // layer properties to trigger an effect\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/layers/\n  // @ts-ignore\n  const { type, paint } = layer;\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const exists = map.getLayer(id);\n      if (exists) return;\n      map.addLayer({\n        id,\n        ...layer,\n      });\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n    },\n    [id, onLoad, type, paint]\n  );\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, map, listenerCtx, {\n        listenType: \"on\",\n        layerId: id,\n      });\n\n      const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n        listenType: \"once\",\n        layerId: id,\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n      };\n    },\n    [id, onHandlers, onceHandlers]\n  );\n\n  if (!children) return null;\n  return <>{children}</>;\n};\n","import React, { useRef, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { OnMapEventHandlers } from \"../types\";\nimport { createListeners } from \"../util/createListeners\";\nimport { pickHandlers } from \"../util/pickHandlers\";\n\ntype BaseMapMarkerProps = {\n  lngLat: LngLatLike;\n} & MaplibreGL.MarkerOptions;\n\nexport type MapMarkerProps = Partial<OnMapEventHandlers<BaseMapMarkerProps>> &\n  BaseMapMarkerProps;\n\nexport const MapMarker: React.FC<MapMarkerProps> = props => {\n  const { lngLat, children, ...rest } = props;\n\n  const el = useRef<HTMLDivElement | null>(null);\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const markerOptions = { ...rest };\n\n      if (children) {\n        el.current = document.createElement(\"div\");\n        markerOptions.element = el.current;\n        ReactDOM.render(\n          <React.Fragment>{children}</React.Fragment>,\n          el.current\n        );\n      }\n      const marker = new maplibre.Marker(markerOptions)\n        .setLngLat(lngLat)\n        .addTo(map);\n\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, marker, listenerCtx, {\n        listenType: \"on\",\n      });\n\n      const onceListeners = createListeners(onceHandlers, marker, listenerCtx, {\n        listenType: \"once\",\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        ReactDOM.unmountComponentAtNode(marker.getElement());\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n        marker.remove();\n      };\n    },\n    [lngLat, children]\n  );\n\n  return null;\n};\n","import { AnySourceData, GeoJSONSource } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { MaplibreLayerEventHandler } from \"../types\";\n\nexport type SourceProps = AnySourceData & {\n  id: string;\n  onLoad?: MaplibreLayerEventHandler<SourceProps, any>;\n};\n\nexport const MapSource: React.FC<SourceProps> = props => {\n  const { id, onLoad, children = null, ...source } = props;\n\n  // possible source attributes we need to track\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/sources/\n  const { data } = source as { data: any };\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      map.addSource(id, source);\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n\n      return () => {\n        map.getStyle().layers?.forEach(l => {\n          // @ts-ignore\n          if (l.source === id) {\n            map.removeLayer(l.id);\n          }\n        });\n        map.removeSource(id);\n      };\n    },\n    [id, onLoad]\n  );\n\n  useMaplibreUIEffect(\n    ({ map }) => {\n      const src = map.getSource(id) as GeoJSONSource;\n      // @ts-ignore\n      if (!src?.setData) return;\n      src.setData(data);\n    },\n    [id, data]\n  );\n\n  if (!children) return null;\n\n  return <>{children}</>;\n};\n"],"names":["pickHandlers","props","onHandlers","onceHandlers","rest","key","includes","createListeners","target","ctx","opts","listenType","handlers","layerId","handlerType","type","replace","toLowerCase","push","ev","customHandler","addListeners","forEach","handler","removeListeners","off","MapCtx","React","createContext","map","maplibre","MaplibreGL","useMaplibreUI","useContext","useMaplibreUIEffect","effect","deps","useEffect","mapStyle","children","defaultCenter","defaultZoom","style","className","id","customParameters","mapContainer","useRef","useState","mapInstance","setMapInstance","isLoaded","setIsLoaded","useMemo","current","Map","container","center","zoom","onLoad","on","listenerCtx","onListeners","onceListeners","ctxValue","Fragment","Provider","value","ref","layer","getLayer","addLayer","paint","lngLat","el","markerOptions","document","createElement","element","ReactDOM","render","marker","Marker","setLngLat","addTo","unmountComponentAtNode","getElement","remove","source","data","addSource","getStyle","layers","l","removeLayer","removeSource","src","getSource","setData"],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/react-maplibre-ui.esm.js b/dist/react-maplibre-ui.esm.js
index f2c516a02133d801822ae6d5a5a6d6b6bae050ae..522c27b9cb8aca8cea4b73eb6bc671807cf75d15 100644
--- a/dist/react-maplibre-ui.esm.js
+++ b/dist/react-maplibre-ui.esm.js
@@ -134,7 +134,8 @@ var Map = function Map(props) {
       style = props.style,
       className = props.className,
       id = props.id,
-      rest = _objectWithoutPropertiesLoose(props, ["mapStyle", "children", "defaultCenter", "defaultZoom", "style", "className", "id"]);
+      customParameters = props.customParameters,
+      rest = _objectWithoutPropertiesLoose(props, ["mapStyle", "children", "defaultCenter", "defaultZoom", "style", "className", "id", "customParameters"]);
 
   var mapContainer = useRef(null);
 
@@ -154,13 +155,13 @@ var Map = function Map(props) {
 
   useEffect(function () {
     if (!mapContainer.current) return;
-    var map = new MaplibreGL.Map({
+    var map = new MaplibreGL.Map(_extends({
       // accessToken,
       container: mapContainer.current,
       style: mapStyle,
       center: defaultCenter,
       zoom: defaultZoom
-    });
+    }, customParameters));
 
     var onLoad = function onLoad() {
       return setIsLoaded(true);
diff --git a/dist/react-maplibre-ui.esm.js.map b/dist/react-maplibre-ui.esm.js.map
index fa483a33952d6992bf6a53ebe2a75ceb6630b042..8b888e3ea2aa431a8bb3cbd54606049ff7c33b5e 100644
--- a/dist/react-maplibre-ui.esm.js.map
+++ b/dist/react-maplibre-ui.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"react-maplibre-ui.esm.js","sources":["../src/util/pickHandlers.ts","../src/util/createListeners.ts","../src/components/Map.tsx","../src/hooks.ts","../src/components/MapSource.tsx","../src/components/MapLayer.tsx","../src/components/MapMarker.tsx"],"sourcesContent":["import { OnEventListener } from \"../types\";\n\nconst onType = \"on\";\nconst onceType = \"once\";\nexport function pickHandlers<T>(props: T) {\n  const onHandlers = {} as OnEventListener<T>;\n  const onceHandlers = {} as OnEventListener<T>;\n  const rest = {};\n  for (const key in props) {\n    if (key.includes(onceType)) {\n      // @ts-ignore\n      onceHandlers[key] = props[key];\n    } else if (key.includes(onType)) {\n      // @ts-ignore\n      onHandlers[key] = props[key];\n    } else {\n      // @ts-ignore\n      rest[key] = props[key];\n    }\n  }\n\n  return [onHandlers, onceHandlers, rest] as [\n    OnEventListener<T>,\n    OnEventListener<T>,\n    T\n  ];\n}\n","import {\n  OnEventListener,\n  LayerEvents,\n  OnEventHandlerRaw,\n  OnEventHandler,\n  EventHandlerContext,\n} from \"../types\";\nimport { Map, Marker } from \"maplibre-gl\";\n\ninterface ListenerOptions {\n  listenType: \"on\" | \"once\";\n  layerId?: string;\n}\n\nexport function createListeners<P>(\n  onHandlers: OnEventListener<P>,\n  target: Map | Marker,\n  ctx: EventHandlerContext<P>,\n  opts: ListenerOptions = { listenType: \"on\" }\n) {\n  const handlers = [] as [LayerEvents, OnEventHandlerRaw][];\n\n  const { listenType, layerId } = opts;\n\n  for (const handlerType in onHandlers) {\n    const type = handlerType\n      .replace(listenType, \"\")\n      .toLowerCase() as LayerEvents;\n\n    const handler: OnEventHandlerRaw = ev => {\n      // @ts-ignore\n      const customHandler = onHandlers[handlerType] as OnEventHandler<any>;\n\n      return customHandler(ctx, ev);\n    };\n\n    handlers.push([type, handler]);\n  }\n\n  const addListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (opts.layerId) {\n        return (target as Map)[listenType](type, opts.layerId, handler);\n      }\n      return target[listenType](type, handler);\n    });\n  };\n\n  const removeListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (layerId) {\n        return (target as Map).off(type, layerId, handler);\n      }\n      return target.off(type, handler);\n    });\n  };\n\n  return { addListeners, removeListeners };\n}\n","import React, { useEffect, useRef, useState, useMemo } from \"react\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { MaplibreUICtx, OnMapEventHandlers } from \"../types\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\n\nexport const MapCtx = React.createContext<MaplibreUICtx>({\n  map: null,\n  maplibre: MaplibreGL,\n});\n\ntype BaseMaplibreUIProps = {\n  /**\n   * accessToken from maplibre, see https://docs.maplibre.com/help/how-maplibre-works/access-tokens/\n   */\n  accessToken?: string;\n  /**\n   * defaultCenter as [longitude, latitude]\n   */\n  defaultCenter: LngLatLike;\n  /**\n   * maplibre styleUrl, see https://docs.maplibre.com/help/glossary/style-url/\n   */\n  mapStyle?: string;\n  defaultZoom?: number;\n  /**\n   * container style css properties\n   */\n  style?: React.CSSProperties;\n  /**\n   * container css className\n   */\n  className?: string;\n  /**\n   * container div#id tag\n   */\n  id?: string;\n};\n\nexport type MaplibreUIProps = Partial<OnMapEventHandlers<BaseMaplibreUIProps>> &\n  BaseMaplibreUIProps;\n\nexport const DEFAULT_MAP_STYLE = \"maplibre://styles/maplibre/light-v10\";\nexport const DEFAULT_MAP_ZOOM = 10;\n\nexport const Map: React.FC<MaplibreUIProps> = props => {\n  const {\n    // accessToken,\n    mapStyle = DEFAULT_MAP_STYLE,\n    children,\n    defaultCenter,\n    defaultZoom = DEFAULT_MAP_ZOOM,\n    style,\n    className,\n    id,\n    ...rest\n  } = props;\n\n  const mapContainer = useRef<HTMLDivElement | null>(null);\n  const [mapInstance, setMapInstance] = useState<MaplibreGL.Map | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useEffect(() => {\n    if (!mapContainer.current) return;\n    const map = new MaplibreGL.Map({\n      // accessToken,\n      container: mapContainer.current,\n      style: mapStyle,\n      center: defaultCenter,\n      zoom: defaultZoom,\n    });\n\n    const onLoad = () => setIsLoaded(true);\n    map.on(\"load\", onLoad);\n    setMapInstance(map);\n    return () => {\n      map.off(\"load\", onLoad);\n    };\n    // eslint-disable-next-line\n  }, [mapContainer.current]);\n\n  useEffect(() => {\n    const map = mapInstance;\n    if (!map) return;\n\n    const listenerCtx = {\n      props,\n      map,\n      maplibre: MaplibreGL,\n    };\n\n    const onListeners = createListeners(onHandlers, map, listenerCtx, {\n      listenType: \"on\",\n    });\n\n    const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n      listenType: \"once\",\n    });\n\n    onListeners.addListeners();\n    onceListeners.addListeners();\n    return () => {\n      onListeners.removeListeners();\n      onceListeners.removeListeners();\n    };\n    // eslint-disable-next-line\n  }, [mapInstance, onHandlers, onceHandlers]);\n\n  const ctxValue = useMemo(() => {\n    return { map: mapInstance, maplibre: MaplibreGL };\n  }, [mapInstance]);\n\n  return (\n    <React.Fragment>\n      <MapCtx.Provider value={ctxValue}>\n        <div\n          id={id}\n          className={className}\n          style={style}\n          ref={ref => (mapContainer.current = ref)}\n        />\n        {isLoaded && children}\n      </MapCtx.Provider>\n    </React.Fragment>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { MapCtx } from \"./components/Map\";\nimport { NonNullMaplibreUICtx } from \"./types\";\n\n/**\n * useMaplibreUI is a simple wrapper around `useContext(MapCtx)`\n * it provides the Map instance and maplibre module\n * this hook does not ensure the context proivde was mounted\n * @example\n * ```\n * const { map,maplibre } = useMaplibreUI()\n * ```\n */\nexport const useMaplibreUI = () => useContext(MapCtx);\n\ntype MaplibreUIEffectCallback = (\n  mapCtx: NonNullMaplibreUICtx\n) => void | (() => void);\n\n/**\n * useMaplibreUIEffect wraps useMaplibreUI in a useEffect\n * this hook ensures the map instance is created\n * and the context provider was mounted\n * @example\n * ```\n * useMaplibreUIEffect(\n *  ({ map, maplibre }) => {\n *     const marker = new maplibre.Marker().setLngLat(coordinates).addTo(map);\n *\n *     return () => {\n *       marker.remove();\n *     };\n *   },\n *   [coordinates]\n * );\n * ```\n */\nexport const useMaplibreUIEffect = (\n  effect: MaplibreUIEffectCallback,\n  deps: any[]\n) => {\n  const { map, maplibre } = useMaplibreUI();\n  useEffect(() => {\n    if (!map || !maplibre) return;\n    const rt = effect({ map: map, maplibre: maplibre });\n    return rt;\n    // eslint-disable-next-line\n  }, [map, maplibre, ...deps]);\n};\n","import { AnySourceData, GeoJSONSource } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { MaplibreLayerEventHandler } from \"../types\";\n\nexport type SourceProps = AnySourceData & {\n  id: string;\n  onLoad?: MaplibreLayerEventHandler<SourceProps, any>;\n};\n\nexport const MapSource: React.FC<SourceProps> = props => {\n  const { id, onLoad, children = null, ...source } = props;\n\n  // possible source attributes we need to track\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/sources/\n  const { data } = source as { data: any };\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      map.addSource(id, source);\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n\n      return () => {\n        map.getStyle().layers?.forEach(l => {\n          // @ts-ignore\n          if (l.source === id) {\n            map.removeLayer(l.id);\n          }\n        });\n        map.removeSource(id);\n      };\n    },\n    [id, onLoad]\n  );\n\n  useMaplibreUIEffect(\n    ({ map }) => {\n      const src = map.getSource(id) as GeoJSONSource;\n      // @ts-ignore\n      if (!src?.setData) return;\n      src.setData(data);\n    },\n    [id, data]\n  );\n\n  if (!children) return null;\n\n  return <>{children}</>;\n};\n","import { AnyLayer } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\nimport { OnLayerEventHandlers, MaplibreLayerEventHandler } from \"../types\";\n\nexport type MapLayerProps = AnyLayer &\n  Partial<OnLayerEventHandlers<AnyLayer>> & {\n    onLoad?: MaplibreLayerEventHandler<AnyLayer, any>;\n  };\n\nexport const MapLayer: React.FC<MapLayerProps> = props => {\n  const { id, onLoad, children, ...rest } = props;\n\n  const [onHandlers, onceHandlers, layer] = useMemo(() => pickHandlers(rest), [\n    rest,\n  ]);\n  // layer properties to trigger an effect\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/layers/\n  // @ts-ignore\n  const { type, paint } = layer;\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const exists = map.getLayer(id);\n      if (exists) return;\n      map.addLayer({\n        id,\n        ...layer,\n      });\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n    },\n    [id, onLoad, type, paint]\n  );\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, map, listenerCtx, {\n        listenType: \"on\",\n        layerId: id,\n      });\n\n      const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n        listenType: \"once\",\n        layerId: id,\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n      };\n    },\n    [id, onHandlers, onceHandlers]\n  );\n\n  if (!children) return null;\n  return <>{children}</>;\n};\n","import React, { useRef, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { OnMapEventHandlers } from \"../types\";\nimport { createListeners } from \"../util/createListeners\";\nimport { pickHandlers } from \"../util/pickHandlers\";\n\ntype BaseMapMarkerProps = {\n  lngLat: LngLatLike;\n} & MaplibreGL.MarkerOptions;\n\nexport type MapMarkerProps = Partial<OnMapEventHandlers<BaseMapMarkerProps>> &\n  BaseMapMarkerProps;\n\nexport const MapMarker: React.FC<MapMarkerProps> = props => {\n  const { lngLat, children, ...rest } = props;\n\n  const el = useRef<HTMLDivElement | null>(null);\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const markerOptions = { ...rest };\n\n      if (children) {\n        el.current = document.createElement(\"div\");\n        markerOptions.element = el.current;\n        ReactDOM.render(\n          <React.Fragment>{children}</React.Fragment>,\n          el.current\n        );\n      }\n      const marker = new maplibre.Marker(markerOptions)\n        .setLngLat(lngLat)\n        .addTo(map);\n\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, marker, listenerCtx, {\n        listenType: \"on\",\n      });\n\n      const onceListeners = createListeners(onceHandlers, marker, listenerCtx, {\n        listenType: \"once\",\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        ReactDOM.unmountComponentAtNode(marker.getElement());\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n        marker.remove();\n      };\n    },\n    [lngLat, children]\n  );\n\n  return null;\n};\n"],"names":["onType","onceType","pickHandlers","props","onHandlers","onceHandlers","rest","key","includes","createListeners","target","ctx","opts","listenType","handlers","layerId","handlerType","type","replace","toLowerCase","handler","ev","customHandler","push","addListeners","forEach","removeListeners","off","MapCtx","React","createContext","map","maplibre","MaplibreGL","DEFAULT_MAP_STYLE","DEFAULT_MAP_ZOOM","Map","mapStyle","children","defaultCenter","defaultZoom","style","className","id","mapContainer","useRef","useState","mapInstance","setMapInstance","isLoaded","setIsLoaded","useMemo","useEffect","current","container","center","zoom","onLoad","on","listenerCtx","onListeners","onceListeners","ctxValue","Fragment","Provider","value","ref","useMaplibreUI","useContext","useMaplibreUIEffect","effect","deps","rt","MapSource","source","data","addSource","getStyle","layers","l","removeLayer","removeSource","src","getSource","setData","MapLayer","layer","paint","exists","getLayer","addLayer","MapMarker","lngLat","el","markerOptions","document","createElement","element","ReactDOM","render","marker","Marker","setLngLat","addTo","unmountComponentAtNode","getElement","remove"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"react-maplibre-ui.esm.js","sources":["../src/util/pickHandlers.ts","../src/util/createListeners.ts","../src/components/Map.tsx","../src/hooks.ts","../src/components/MapSource.tsx","../src/components/MapLayer.tsx","../src/components/MapMarker.tsx"],"sourcesContent":["import { OnEventListener } from \"../types\";\n\nconst onType = \"on\";\nconst onceType = \"once\";\nexport function pickHandlers<T>(props: T) {\n  const onHandlers = {} as OnEventListener<T>;\n  const onceHandlers = {} as OnEventListener<T>;\n  const rest = {};\n  for (const key in props) {\n    if (key.includes(onceType)) {\n      // @ts-ignore\n      onceHandlers[key] = props[key];\n    } else if (key.includes(onType)) {\n      // @ts-ignore\n      onHandlers[key] = props[key];\n    } else {\n      // @ts-ignore\n      rest[key] = props[key];\n    }\n  }\n\n  return [onHandlers, onceHandlers, rest] as [\n    OnEventListener<T>,\n    OnEventListener<T>,\n    T\n  ];\n}\n","import {\n  OnEventListener,\n  LayerEvents,\n  OnEventHandlerRaw,\n  OnEventHandler,\n  EventHandlerContext,\n} from \"../types\";\nimport { Map, Marker } from \"maplibre-gl\";\n\ninterface ListenerOptions {\n  listenType: \"on\" | \"once\";\n  layerId?: string;\n}\n\nexport function createListeners<P>(\n  onHandlers: OnEventListener<P>,\n  target: Map | Marker,\n  ctx: EventHandlerContext<P>,\n  opts: ListenerOptions = { listenType: \"on\" }\n) {\n  const handlers = [] as [LayerEvents, OnEventHandlerRaw][];\n\n  const { listenType, layerId } = opts;\n\n  for (const handlerType in onHandlers) {\n    const type = handlerType\n      .replace(listenType, \"\")\n      .toLowerCase() as LayerEvents;\n\n    const handler: OnEventHandlerRaw = ev => {\n      // @ts-ignore\n      const customHandler = onHandlers[handlerType] as OnEventHandler<any>;\n\n      return customHandler(ctx, ev);\n    };\n\n    handlers.push([type, handler]);\n  }\n\n  const addListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (opts.layerId) {\n        return (target as Map)[listenType](type, opts.layerId, handler);\n      }\n      return target[listenType](type, handler);\n    });\n  };\n\n  const removeListeners = () => {\n    handlers.forEach(([type, handler]) => {\n      if (layerId) {\n        return (target as Map).off(type, layerId, handler);\n      }\n      return target.off(type, handler);\n    });\n  };\n\n  return { addListeners, removeListeners };\n}\n","import React, { useEffect, useRef, useState, useMemo } from \"react\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { MaplibreUICtx, OnMapEventHandlers } from \"../types\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\n\nexport const MapCtx = React.createContext<MaplibreUICtx>({\n  map: null,\n  maplibre: MaplibreGL,\n});\n\ntype BaseMaplibreUIProps = {\n  /**\n   * accessToken from maplibre, see https://docs.maplibre.com/help/how-maplibre-works/access-tokens/\n   */\n  accessToken?: string;\n  /**\n   * defaultCenter as [longitude, latitude]\n   */\n  defaultCenter: LngLatLike;\n  /**\n   * maplibre styleUrl, see https://docs.maplibre.com/help/glossary/style-url/\n   */\n  mapStyle?: string;\n  defaultZoom?: number;\n  /**\n   * container style css properties\n   */\n  style?: React.CSSProperties;\n  /**\n   * container css className\n   */\n  className?: string;\n  /**\n   * container div#id tag\n   */\n  id?: string;\n  /**\n   * custom parameters\n   */\n  customParameters?: object;\n};\n\nexport type MaplibreUIProps = Partial<OnMapEventHandlers<BaseMaplibreUIProps>> &\n  BaseMaplibreUIProps;\n\nexport const DEFAULT_MAP_STYLE = \"maplibre://styles/maplibre/light-v10\";\nexport const DEFAULT_MAP_ZOOM = 10;\n\nexport const Map: React.FC<MaplibreUIProps> = props => {\n  const {\n    // accessToken,\n    mapStyle = DEFAULT_MAP_STYLE,\n    children,\n    defaultCenter,\n    defaultZoom = DEFAULT_MAP_ZOOM,\n    style,\n    className,\n    id,\n    customParameters,\n    ...rest\n  } = props;\n\n  const mapContainer = useRef<HTMLDivElement | null>(null);\n  const [mapInstance, setMapInstance] = useState<MaplibreGL.Map | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useEffect(() => {\n    if (!mapContainer.current) return;\n    const map = new MaplibreGL.Map({\n      // accessToken,\n      container: mapContainer.current,\n      style: mapStyle,\n      center: defaultCenter,\n      zoom: defaultZoom,\n      ...customParameters,\n    });\n    const onLoad = () => setIsLoaded(true);\n    map.on(\"load\", onLoad);\n    setMapInstance(map);\n    return () => {\n      map.off(\"load\", onLoad);\n    };\n    // eslint-disable-next-line\n  }, [mapContainer.current]);\n\n  useEffect(() => {\n    const map = mapInstance;\n    if (!map) return;\n\n    const listenerCtx = {\n      props,\n      map,\n      maplibre: MaplibreGL,\n    };\n\n    const onListeners = createListeners(onHandlers, map, listenerCtx, {\n      listenType: \"on\",\n    });\n\n    const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n      listenType: \"once\",\n    });\n\n    onListeners.addListeners();\n    onceListeners.addListeners();\n    return () => {\n      onListeners.removeListeners();\n      onceListeners.removeListeners();\n    };\n    // eslint-disable-next-line\n  }, [mapInstance, onHandlers, onceHandlers]);\n\n  const ctxValue = useMemo(() => {\n    return { map: mapInstance, maplibre: MaplibreGL };\n  }, [mapInstance]);\n\n  return (\n    <React.Fragment>\n      <MapCtx.Provider value={ctxValue}>\n        <div\n          id={id}\n          className={className}\n          style={style}\n          ref={ref => (mapContainer.current = ref)}\n        />\n        {isLoaded && children}\n      </MapCtx.Provider>\n    </React.Fragment>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { MapCtx } from \"./components/Map\";\nimport { NonNullMaplibreUICtx } from \"./types\";\n\n/**\n * useMaplibreUI is a simple wrapper around `useContext(MapCtx)`\n * it provides the Map instance and maplibre module\n * this hook does not ensure the context proivde was mounted\n * @example\n * ```\n * const { map,maplibre } = useMaplibreUI()\n * ```\n */\nexport const useMaplibreUI = () => useContext(MapCtx);\n\ntype MaplibreUIEffectCallback = (\n  mapCtx: NonNullMaplibreUICtx\n) => void | (() => void);\n\n/**\n * useMaplibreUIEffect wraps useMaplibreUI in a useEffect\n * this hook ensures the map instance is created\n * and the context provider was mounted\n * @example\n * ```\n * useMaplibreUIEffect(\n *  ({ map, maplibre }) => {\n *     const marker = new maplibre.Marker().setLngLat(coordinates).addTo(map);\n *\n *     return () => {\n *       marker.remove();\n *     };\n *   },\n *   [coordinates]\n * );\n * ```\n */\nexport const useMaplibreUIEffect = (\n  effect: MaplibreUIEffectCallback,\n  deps: any[]\n) => {\n  const { map, maplibre } = useMaplibreUI();\n  useEffect(() => {\n    if (!map || !maplibre) return;\n    const rt = effect({ map: map, maplibre: maplibre });\n    return rt;\n    // eslint-disable-next-line\n  }, [map, maplibre, ...deps]);\n};\n","import { AnySourceData, GeoJSONSource } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { MaplibreLayerEventHandler } from \"../types\";\n\nexport type SourceProps = AnySourceData & {\n  id: string;\n  onLoad?: MaplibreLayerEventHandler<SourceProps, any>;\n};\n\nexport const MapSource: React.FC<SourceProps> = props => {\n  const { id, onLoad, children = null, ...source } = props;\n\n  // possible source attributes we need to track\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/sources/\n  const { data } = source as { data: any };\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      map.addSource(id, source);\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n\n      return () => {\n        map.getStyle().layers?.forEach(l => {\n          // @ts-ignore\n          if (l.source === id) {\n            map.removeLayer(l.id);\n          }\n        });\n        map.removeSource(id);\n      };\n    },\n    [id, onLoad]\n  );\n\n  useMaplibreUIEffect(\n    ({ map }) => {\n      const src = map.getSource(id) as GeoJSONSource;\n      // @ts-ignore\n      if (!src?.setData) return;\n      src.setData(data);\n    },\n    [id, data]\n  );\n\n  if (!children) return null;\n\n  return <>{children}</>;\n};\n","import { AnyLayer } from \"maplibre-gl\";\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { pickHandlers } from \"../util/pickHandlers\";\nimport { createListeners } from \"../util/createListeners\";\nimport { OnLayerEventHandlers, MaplibreLayerEventHandler } from \"../types\";\n\nexport type MapLayerProps = AnyLayer &\n  Partial<OnLayerEventHandlers<AnyLayer>> & {\n    onLoad?: MaplibreLayerEventHandler<AnyLayer, any>;\n  };\n\nexport const MapLayer: React.FC<MapLayerProps> = props => {\n  const { id, onLoad, children, ...rest } = props;\n\n  const [onHandlers, onceHandlers, layer] = useMemo(() => pickHandlers(rest), [\n    rest,\n  ]);\n  // layer properties to trigger an effect\n  // https://docs.maplibre.com/maplibre-gl-js/style-spec/layers/\n  // @ts-ignore\n  const { type, paint } = layer;\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const exists = map.getLayer(id);\n      if (exists) return;\n      map.addLayer({\n        id,\n        ...layer,\n      });\n\n      if (onLoad) {\n        onLoad({ map, maplibre, props });\n      }\n    },\n    [id, onLoad, type, paint]\n  );\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, map, listenerCtx, {\n        listenType: \"on\",\n        layerId: id,\n      });\n\n      const onceListeners = createListeners(onceHandlers, map, listenerCtx, {\n        listenType: \"once\",\n        layerId: id,\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n      };\n    },\n    [id, onHandlers, onceHandlers]\n  );\n\n  if (!children) return null;\n  return <>{children}</>;\n};\n","import React, { useRef, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaplibreGL, { LngLatLike } from \"maplibre-gl\";\nimport { useMaplibreUIEffect } from \"../hooks\";\nimport { OnMapEventHandlers } from \"../types\";\nimport { createListeners } from \"../util/createListeners\";\nimport { pickHandlers } from \"../util/pickHandlers\";\n\ntype BaseMapMarkerProps = {\n  lngLat: LngLatLike;\n} & MaplibreGL.MarkerOptions;\n\nexport type MapMarkerProps = Partial<OnMapEventHandlers<BaseMapMarkerProps>> &\n  BaseMapMarkerProps;\n\nexport const MapMarker: React.FC<MapMarkerProps> = props => {\n  const { lngLat, children, ...rest } = props;\n\n  const el = useRef<HTMLDivElement | null>(null);\n  const [onHandlers, onceHandlers] = useMemo(() => pickHandlers(rest), [rest]);\n\n  useMaplibreUIEffect(\n    ({ map, maplibre }) => {\n      const markerOptions = { ...rest };\n\n      if (children) {\n        el.current = document.createElement(\"div\");\n        markerOptions.element = el.current;\n        ReactDOM.render(\n          <React.Fragment>{children}</React.Fragment>,\n          el.current\n        );\n      }\n      const marker = new maplibre.Marker(markerOptions)\n        .setLngLat(lngLat)\n        .addTo(map);\n\n      const listenerCtx = {\n        props,\n        map,\n        maplibre,\n      };\n      const onListeners = createListeners(onHandlers, marker, listenerCtx, {\n        listenType: \"on\",\n      });\n\n      const onceListeners = createListeners(onceHandlers, marker, listenerCtx, {\n        listenType: \"once\",\n      });\n\n      onListeners.addListeners();\n      onceListeners.addListeners();\n      return () => {\n        ReactDOM.unmountComponentAtNode(marker.getElement());\n        onListeners.removeListeners();\n        onceListeners.removeListeners();\n        marker.remove();\n      };\n    },\n    [lngLat, children]\n  );\n\n  return null;\n};\n"],"names":["onType","onceType","pickHandlers","props","onHandlers","onceHandlers","rest","key","includes","createListeners","target","ctx","opts","listenType","handlers","layerId","handlerType","type","replace","toLowerCase","handler","ev","customHandler","push","addListeners","forEach","removeListeners","off","MapCtx","React","createContext","map","maplibre","MaplibreGL","DEFAULT_MAP_STYLE","DEFAULT_MAP_ZOOM","Map","mapStyle","children","defaultCenter","defaultZoom","style","className","id","customParameters","mapContainer","useRef","useState","mapInstance","setMapInstance","isLoaded","setIsLoaded","useMemo","useEffect","current","container","center","zoom","onLoad","on","listenerCtx","onListeners","onceListeners","ctxValue","Fragment","Provider","value","ref","useMaplibreUI","useContext","useMaplibreUIEffect","effect","deps","rt","MapSource","source","data","addSource","getStyle","layers","l","removeLayer","removeSource","src","getSource","setData","MapLayer","layer","paint","exists","getLayer","addLayer","MapMarker","lngLat","el","markerOptions","document","createElement","element","ReactDOM","render","marker","Marker","setLngLat","addTo","unmountComponentAtNode","getElement","remove"],"mappings":"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"}
\ No newline at end of file
