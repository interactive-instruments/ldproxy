{{#mapClient}}
<script type="text/javascript">
  globalThis._map = {
      container: 'map',
      interactive: {{interactive}},
    {{#savePosition}}
      savePosition: {{.}},
    {{/savePosition}}
    {{#styleUrl}}
      styleUrl: '{{{.}}}',
      {{#removeZoomLevelConstraints}}
        removeZoomLevelConstraints: {{.}},
      {{/removeZoomLevelConstraints}}
    {{/styleUrl}}
    {{^styleUrl}}
      {{#backgroundUrl}}
        backgroundUrl: '{{{.}}}',
      {{/backgroundUrl}}
      {{#attribution}}
        attribution: '{{{.}}}',
      {{/attribution}}
      //center: [{{centerLon}},{{centerLat}}],
      //zoom: {{zoom}},
    {{/styleUrl}}
    {{#bounds}}
      bounds: [[{{minLng}},{{minLat}}],[{{maxLng}},{{maxLat}}]],
      drawBounds: {{drawBounds}},
    {{/bounds}}
    {{#data}}
      dataUrl: '{{{url}}}',
      dataType: '{{type}}',
      dataLayers: {
        {{#layers.entries}}
        '{{key}}': [{{#value}}'{{.}}',{{/value}}],
        {{/layers.entries}}
      },
    {{/data}}
    {{#defaultStyle}}
      defaultStyle: {
          color: '{{color}}',
          opacity: {{opacity}},
          circleRadius: {{circleRadius}},
          lineWidth: {{lineWidth}},
          fillOpacity: {{fillOpacity}},
          outlineWidth: {{outlineWidth}},
      },
    {{/defaultStyle}}
    {{#popup}}
      popup: '{{.}}',
    {{/popup}}
      tileMatrixSets: [
      {{#tileCollections}}
        {
        {{#.}}
          {{key}}: '{{value}}',
        {{/.}}
        },
      {{/tileCollections}}
      ],
      setCurrentTileMatrixSet: () => {},
  }
</script>

  {{#isMapLibre}}
    {{> app-maplibre}}
  {{/isMapLibre}}
  {{#isOpenLayers}}
    {{> app-openlayers}}
  {{/isOpenLayers}}
  {{#isCesium}}
    {{> app-maplibre}}
  {{/isCesium}}

<!-- TODO temporary hack -->
{{#isCesium}}
<script>
Cesium.Ion.defaultAccessToken = null;
Cesium.Camera.DEFAULT_VIEW_RECTANGLE = {{{featureExtent}}};
Cesium.Camera.DEFAULT_VIEW_FACTOR = 0;
var viewer = new Cesium.Viewer("map", {
    {{#backgroundUrl}}
    imageryProvider : new Cesium.WebMapTileServiceImageryProvider({ url : '{{{.}}}' }),
    {{/backgroundUrl}}
    animation : false,
    baseLayerPicker : false,
    homeButton : true,
    geocoder : false,
    timeline : false,
    scene3DOnly : true,
    fullscreenButton : false,
    navigationInstructionsInitiallyVisible : false
});
{{#attribution}}
var credit = new Cesium.Credit('{{{.}}}');
viewer.scene.frameState.creditDisplay.addDefaultCredit(credit);
{{/attribution}}
{{#mapEntities}}{{{.}}}{{/mapEntities}}
viewer.zoomTo(viewer.entities);
</script>
{{/isCesium}}

{{/mapClient}}

