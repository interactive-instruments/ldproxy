

pipeline:

  load-cache:
    image: drillster/drone-volume-cache
    volumes: [/var/lib/docker/tmp:/cache]
    restore: true
    mount:
      - .gradle/caches
      - .gradle/wrapper
      - ldproxy-manager/.gradle
      - ldproxy-manager/src/main/javascript/.yarn/cache
      - ldproxy-manager/src/main/javascript/.yarn/install-state.gz
      - ldproxy-manager/src/main/javascript/.yarn/unplugged
      - ogcapi-stable/ogcapi-html/.gradle
      - ogcapi-stable/ogcapi-html/src/main/javascript/.yarn/build-state.yml
      - ogcapi-stable/ogcapi-html/src/main/javascript/.yarn/cache
      - ogcapi-stable/ogcapi-html/src/main/javascript/.yarn/install-state.gz
      - ogcapi-stable/ogcapi-html/src/main/javascript/.yarn/unplugged

  check-snapshot:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew check -Pbranch=$DRONE_COMMIT_BRANCH -PdeployUser=$SNAPSHOT_USER -PdeployPassword=$SNAPSHOT_PASS
    secrets: [ snapshot_user, snapshot_pass]
    when:
      event: [push]

  check-release:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew check -Prelease=true -PdeployUser=$SNAPSHOT_USER -PdeployPassword=$SNAPSHOT_PASS
    secrets: [ snapshot_user, snapshot_pass]
    when:
      event: [tag]

  build-snapshot:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew assemble dockerDistTar docsVuepress -Pbranch=$DRONE_COMMIT_BRANCH -PdeployUser=$SNAPSHOT_USER -PdeployPassword=$SNAPSHOT_PASS
    secrets: [ snapshot_user, snapshot_pass]
    when:
      event: [push]

  build-release:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew assemble dockerDistTar docsVuepress -Prelease=true -PdeployUser=$SNAPSHOT_USER -PdeployPassword=$SNAPSHOT_PASS
    secrets: [ snapshot_user, snapshot_pass]
    when:
      event: [tag]

  libs-snapshot:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew publish -Pbranch=$DRONE_COMMIT_BRANCH -PdeployUser=$SNAPSHOT_USER -PdeployPassword=$SNAPSHOT_PASS
    secrets: [ snapshot_user, snapshot_pass]
    when:
      event: push

  libs-release:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew publish -Prelease=true -PdeployUser=$SNAPSHOT_USER -PdeployPassword=$SNAPSHOT_PASS
    secrets: [ snapshot_user, snapshot_pass]
    when:
      event: tag

  docker-snapshot:
    image: plugins/docker
    registry: docker.ci.interactive-instruments.de
    repo: docker.ci.interactive-instruments.de/iide/ldproxy
    tags: ${DRONE_COMMIT_BRANCH}
    force_tag: true
    dockerfile: build/docker/Dockerfile
    context: build/docker
    when:
      event: push

#  docker-master:
#    image: plugins/docker
#    repo: iide/ldproxy
#    tags: ${DRONE_COMMIT_BRANCH}
#    force_tag: true
#    dockerfile: build/docker/Dockerfile
#    context: build/docker
#    secrets: [ docker_username, docker_password]
#    when:
#      event: push
#      branch: master

#  docker-release:
#    image: plugins/docker
#    repo: iide/ldproxy
#    auto_tag: true
#    dockerfile: build/docker/Dockerfile
#    context: build/docker
#    secrets: [ docker_username, docker_password]
#    when:
#      event: tag

  docs-preview:
    image: woodpeckerci/plugin-surge-preview
    settings:
      path: build/markdown/docs/.vuepress/dist/
      forge_type: github
      forge_url: https://github.com
      forge_repo_token: $GITHUB_TOKEN
    secrets: [ github_token, surge_token ]
    when:
      event: pull_request

  github-release:
    image: node:12-alpine
    commands:
      - export HOME=$${DRONE_WORKSPACE}
      - apk --no-cache add git libc6-compat
      - wget -O - https://github.com/cli/cli/releases/download/v1.2.0/gh_1.2.0_linux_amd64.tar.gz | tar xzvf -
      - chmod +x gh_1.2.0_linux_amd64/bin/gh
      - npx github-release-notes@0.17.1 release --override --token=$GITHUB_TOKEN
      - npx github-release-notes@0.17.1 changelog --override --token=$GITHUB_TOKEN
      - git config user.name $DRONE_COMMIT_AUTHOR
      - git config user.email $DRONE_COMMIT_AUTHOR_EMAIL
      - git checkout -B changelog-$DRONE_TAG
      - git add CHANGELOG.md
      - git commit -m "add changelog for $DRONE_TAG"
      - git push -u https://$GITHUB_USER:$GITHUB_TOKEN@github.com/$DRONE_REPO_OWNER/$DRONE_REPO_NAME.git changelog-$DRONE_TAG > /dev/null 2>&1
      - GITHUB_TOKEN=$GITHUB_TOKEN ./gh_1.2.0_linux_amd64/bin/gh pr create --base master --head changelog-$DRONE_TAG --reviewer $DRONE_COMMIT_AUTHOR --title " add changelog for $DRONE_TAG" --body ""
    secrets: [ github_token, github_user ]
    when:
      event: [tag]

#  build-community:
#    image: openjdk:11-slim
#    commands:
#      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
#      - ./gradlew assemble dockerDistTar -Psnapshot=true -Pcommunity
#    when:
#      event: [push]
#      branch: master

#  docker-community:
#    image: plugins/docker
#    registry: docker.ci.interactive-instruments.de
#    repo: docker.ci.interactive-instruments.de/iide/ldproxy
#    tags: _community
#    force_tag: true
#    dockerfile: build/docker/Dockerfile
#    context: build/docker
#    when:
#      event: push
#      branch: master

  save-cache:
    image: drillster/drone-volume-cache
    volumes: [/var/lib/docker/tmp:/cache]
    rebuild: true
    mount:
      - .gradle/caches
      - .gradle/wrapper
      - ldproxy-manager/.gradle
      - ldproxy-manager/src/main/javascript/.yarn/build-state.yml
      - ldproxy-manager/src/main/javascript/.yarn/cache
      - ldproxy-manager/src/main/javascript/.yarn/install-state.gz
      - ldproxy-manager/src/main/javascript/.yarn/unplugged
      - ogcapi-stable/ogcapi-html/.gradle
      - ogcapi-stable/ogcapi-html/src/main/javascript/.yarn/build-state.yml
      - ogcapi-stable/ogcapi-html/src/main/javascript/.yarn/cache
      - ogcapi-stable/ogcapi-html/src/main/javascript/.yarn/install-state.gz
      - ogcapi-stable/ogcapi-html/src/main/javascript/.yarn/unplugged

#  notify:
#    image: plugins/slack:1.3.0
#    webhook: ${SLACK_WEBHOOK}
#    secrets: [ slack_webhook ]
#    link_names: true
#    template: >
#      {{#if build.pull }}
#        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}*: {{ repo.owner }}/{{ repo.name }} - <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>
#      {{else}}
#        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: {{ repo.owner }}/{{ repo.name }} - Build #{{ build.number }}* (type: `{{ build.event }}`)
#      {{/if}}
#
#      Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
#
#      Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
#
#      Author: {{ build.author }} <@{{ build.author }}>
#
#      Duration: {{ since build.created }}
#
#      <{{ build.link }}|Visit build page ↗>
#    when:
#      status:  [ failure, success ]
