when:
  event: tag

steps:

  libs:
    image: eclipse-temurin:11
    environment:
      - DOCS_VERSION=v4.x
    commands:
      - ./gradlew publish dockerContext docsVuepress -Prelease=true -PdeployUser=$SNAPSHOT_USER -PdeployPassword=$SNAPSHOT_PASS
    secrets: [ snapshot_user, snapshot_pass]

  docs:
    image: williamjackson/netlify-cli
    environment:
      - XDG_CONFIG_HOME=/home/node
    commands:
      - netlify deploy --prod --auth $NETLIFY_TOKEN --site ef612b19-fbf8-469d-8c08-f98f0271806a --message "$CI_COMMIT_MESSAGE" --dir $CI_WORKSPACE/build/markdown/docs/.vuepress/dist/
    secrets: [ netlify_token]
# TODO: does not work, only tags from master should trigger this
# check https://woodpecker-ci.org/docs/usage/workflow-syntax#evaluate, does any of the CI_ vars contain the branch?
    when:
      branch: master

  dist-arm64:
    image: eclipse-temurin:11
    commands:
      - ./gradlew dockerContext -Pplatform=linux-arm64 -Prelease=true -PdeployUser=$SNAPSHOT_USER -PdeployPassword=$SNAPSHOT_PASS
    secrets: [ snapshot_user, snapshot_pass]

  docker:
    image: docker.ci.interactive-instruments.de/cicd/drone-docker-buildx
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    settings: 
      repo: iide/ldproxy
      auto_tag: true
      force_tag: true
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      dockerfile: build/docker/Dockerfile
      context: build/docker
      platforms:
        - linux/amd64
        - linux/arm64

  github:
    image: node:18
    commands:
      - export HOME=$${CI_WORKSPACE}
      - npx --yes @cjbarth/github-release-notes@3.0.0 release -d --head $CI_COMMIT_BRANCH --token=$GITHUB_TOKEN
## TODO: the automatic changelog PR does not work anymore because a draft release is created above, reevaluate when woodpecker supports a github_release event
#      - npx --yes @cjbarth/github-release-notes@3.0.0 changelog --override -f NEW.md --token=$GITHUB_TOKEN
#      - sed -i -e "/# Changelog/r NEW.md" -e "/# Changelog/a ---" -e '/# Changelog/d' CHANGELOG.md
#      - wget -O - https://github.com/cli/cli/releases/download/v1.2.0/gh_1.2.0_linux_amd64.tar.gz | tar xzvf -
#      - chmod +x gh_1.2.0_linux_amd64/bin/gh
#      - git config user.name $CI_COMMIT_AUTHOR
#      - git config user.email $CI_COMMIT_AUTHOR_EMAIL
#      - git checkout -B changelog-$CI_COMMIT_TAG
#      - git add CHANGELOG.md
#      - git commit -m "add changelog for $CI_COMMIT_TAG" -n
#      - git push -u https://$GITHUB_USER:$GITHUB_TOKEN@github.com/$CI_REPO_NAME.git changelog-$CI_COMMIT_TAG #> /dev/null 2>&1
#      - GITHUB_TOKEN=$GITHUB_TOKEN ./gh_1.2.0_linux_amd64/bin/gh pr create --base $CI_COMMIT_BRANCH --head changelog-$CI_COMMIT_TAG --reviewer $CI_COMMIT_AUTHOR --title "add changelog for $CI_COMMIT_TAG" --body ""
    secrets: [ github_token ]
