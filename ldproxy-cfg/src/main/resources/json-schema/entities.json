{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "oneOf": [
    {
      "$ref": "#/$defs/UserData"
    },
    {
      "$ref": "#/$defs/CodelistData"
    },
    {
      "$ref": "#/$defs/FeatureProviderWfsData"
    },
    {
      "$ref": "#/$defs/FeatureProviderSqlData"
    },
    {
      "$ref": "#/$defs/TileProviderMbtilesData"
    },
    {
      "$ref": "#/$defs/TileProviderFeaturesData"
    },
    {
      "$ref": "#/$defs/TileProviderHttpData"
    },
    {
      "$ref": "#/$defs/OgcApiDataV2"
    }
  ],
  "additionalProperties": false,
  "$defs": {
    "UserData": {
      "title": "UserData",
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "Unique identifier of the entity, has to match the filename. Allowed characters are     (A-Z, a-z), numbers (0-9), underscore and hyphen.",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "description": "",
          "type": "number"
        },
        "lastModified": {
          "title": "lastModified",
          "description": "",
          "type": "number"
        },
        "entityStorageVersion": {
          "title": "entityStorageVersion",
          "description": "",
          "type": "number"
        },
        "password": {
          "title": "password",
          "description": "",
          "type": "string"
        },
        "role": {
          "title": "role",
          "description": "",
          "type": "string"
        },
        "passwordExpiresAt": {
          "title": "passwordExpiresAt",
          "description": "",
          "type": "number"
        }
      }
    },
    "CodelistData": {
      "title": "CodelistData",
      "description": "# Codelists       Codelists allow to map property values to a different value. This is useful especially for     HTML representations.  ## Configuration       The following table describes the structure of the code list files.       {@docTable:properties }       For the target values in `entries` and for `fallback` also     [stringFormat](../providers/details/transformations.md) transformations can be used. If the     transformed value is intended for HTML output, then Markdown markup can also be used, this     will be formatted in the HTML output.  ### Example       Based on the INSPIRE codelist     [EnvironmentalDomain](https://inspire.ec.europa.eu/codeList/EnvironmentalDomain), maps values     like `soil` to the German label of the entry in the INSPIRE codelist registry.    ```yaml  --- id: environmental-domain label: Umweltbereich, für den Umweltziele festgelegt werden können. sourceType: TEMPLATES entries:   air: Luft   climateAndClimateChange: Klima und Klimawandel   healthProtection: Gesundheitsschutz   landUse: Bodennutzung   naturalResources: natürliche Ressourcen   natureAndBiodiversity: Natur und biologische Vielfalt   noise: Lärm   soil: Boden   sustainableDevelopment: nachhaltige Entwicklung   waste: Abfall   water: Wasser  ```    ## Storage       Codelists reside under the relative path `store/entities/codelists/{codelistId}.yml` in     the data directory.",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "Unique identifier of the entity, has to match the filename. Allowed characters are     (A-Z, a-z), numbers (0-9), underscore and hyphen.",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "description": "",
          "type": "number"
        },
        "lastModified": {
          "title": "lastModified",
          "description": "",
          "type": "number"
        },
        "entityStorageVersion": {
          "title": "entityStorageVersion",
          "description": "",
          "type": "number"
        },
        "label": {
          "title": "label",
          "description": "Human readable label.",
          "type": "string"
        },
        "entries": {
          "title": "entries",
          "description": "Map with the original value as key and the new value as value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sourceType": {
          "title": "sourceType",
          "description": "Always `TEMPLATES`.",
          "type": "string"
        },
        "sourceUrl": {
          "title": "sourceUrl",
          "description": "",
          "type": "string"
        },
        "fallback": {
          "title": "fallback",
          "description": "Optional default value.",
          "type": "string"
        }
      }
    },
    "FeatureProviderWfsData": {
      "title": "FeatureProviderWfsData",
      "description": "# WFS  The specifics of the WFS feature provider.  ## Connection Info  The connection info object for OGC Web Feature Services has the following properties:  {@docTable:connectionInfo }  ### Example  {@docVar:example }  ## Path Syntax       The paths for WFS feature providers are generated by ldproxy when analyzing the WFS und     should not be changed.",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "Unique identifier of the entity, has to match the filename. Allowed characters are     (A-Z, a-z), numbers (0-9), underscore and hyphen.",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "description": "",
          "type": "number"
        },
        "lastModified": {
          "title": "lastModified",
          "description": "",
          "type": "number"
        },
        "entityStorageVersion": {
          "title": "entityStorageVersion",
          "description": "",
          "type": "number"
        },
        "providerType": {
          "title": "providerType",
          "description": "Always `FEATURE`.",
          "type": "string"
        },
        "providerSubType": {
          "title": "providerSubType",
          "description": "`SQL` for SQL DBMS as data source, `WFS` for *OGC Web Feature Service* as data source.",
          "type": "string"
        },
        "featureProviderType": {
          "title": "featureProviderType",
          "description": "*Deprecated* See `providerSubType`.",
          "type": "string",
          "deprecated": true
        },
        "nativeCrs": {
          "title": "nativeCrs",
          "description": "Coordinate reference system of geometries in the dataset. The EPSG code of the     coordinate reference system is given as integer in `code`. `forceAxisOrder` may be set to     use a non-default axis order: `LON_LAT` uses longitude/east as first value and     latitude/north as second value, `LAT_LON` uses the reverse. `NONE` uses the default axis     order and is the default value. Example: The default coordinate reference system `CRS84`     would look like this: `code: 4326` and `forceAxisOrder: LON_LAT`.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.crs.domain.EpsgCrs"
        },
        "nativeTimeZone": {
          "title": "nativeTimeZone",
          "description": "A timezone ID, such as `Europe/Berlin`. Is applied to temporal values without timezone     in the dataset.",
          "type": "string"
        },
        "defaultLanguage": {
          "title": "defaultLanguage",
          "description": "",
          "type": "string"
        },
        "typeValidation": {
          "title": "typeValidation",
          "description": "Optional type definition validation with regard to the data source (only for SQL).     `NONE` means no validation. With `LAX` the validation will fail and the provider will not     start, when issues are detected that would definitely lead to runtime errors. Issues that     might lead to runtime errors depending on the data will be logged as warning. With `STRICT`     the validation will fail for any detected issue. That means the provider will only start if     runtime errors with regard to the data source can be ruled out.",
          "type": "string"
        },
        "labelTemplate": {
          "title": "labelTemplate",
          "description": "",
          "type": "string"
        },
        "extensions": {
          "title": "extensions",
          "description": "",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.ExtensionConfiguration"
          }
        },
        "fragments": {
          "title": "fragments",
          "description": "Definition of reusable schema fragments that can be referenced using `schema` in     `types`. The entries are arbitrary [schema definitions](#schema-definitions).",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.FeatureSchema"
          }
        },
        "codelists": {
          "title": "codelists",
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "auto": {
          "title": "auto",
          "description": "Option to generate missing definitions automatically from the data source.",
          "type": "boolean"
        },
        "autoPersist": {
          "title": "autoPersist",
          "description": "Option to persist definitions generated with `auto` to the configuration file. The     [Store](/application/40-store.md) must not be `READ_ONLY` for this to take effect.",
          "type": "boolean"
        },
        "autoTypes": {
          "title": "autoTypes",
          "description": "List of source types to include in derived `types` definitions when `auto: true`.     Currently only works for [SQL](sql.md).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connectionInfo": {
          "title": "connectionInfo",
          "description": "",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.features.gml.domain.ConnectionInfoWfsHttp"
        },
        "types": {
          "title": "types",
          "description": "Definition of feature types. The entries have to be [schema     definitions](#schema-definitions) with `type: OBJECT` and at least one property with `role:     ID`.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.FeatureSchema"
          }
        }
      }
    },
    "FeatureProviderSqlData": {
      "title": "FeatureProviderSqlData",
      "description": "# SQL  The specifics of the SQL feature provider.  {@docTable:properties }  ## Connection Info  The connection info object for SQL databases has the following properties:  {@docTable:connectionInfo }  ### Pool  Settings for the connection pool.  {@docTable:pool }  ## Source Path Defaults       Defaults for the path expressions in `sourcePath`, also see [Source Path     Syntax](#path-syntax).  {@docTable:sourcePathDefaults }  ## Source Path Syntax       The fundamental elements of the path syntax are demonstrated in the example above. The     path to a property is formed by concatenating the relative paths (`sourcePath`) with \"/\". A     `sourcePath` has to be defined for the for object that represents the feature type and most     child objects.       On the first level the path is formed by a \"/\" followed by the table name for the feature     type. Every row in the table corresponds to a feature. Example: `/kita`       When defining a feature property on a deeper level using a column from the given table,     the path equals the column name, e.g. `name`. The full path will then be `/kita/name`.       A join is defined using the pattern `[id\u003dfk]tab`, where `id` is the primary key of the     table from the parent object, `fk` is the foreign key of the joining table and `tab` is the     name of the joining table. Example from above: `[oid\u003dkita_fk]plaetze`. When a junction table     should be used, two such joins are concatenated with \"/\", e.g. `[id\u003dfka]a_2_b/[fkb\u003did]tab_b`.       Rows for a table can be filtered by adding `{filter\u003dexpression}` after the table name,     where `expression` is a [CQL2 Text](https://docs.ogc.org/DRAFTS/21-065.html#cql2-text)     expression. For details see the module [Filter /     CQL](../../services/building-blocks/filter.md), which provides the implementation but does     not have to be enabled.       To select capacity information only when the value is not NULL and greater than zero in     the example above, the filter would look like this: `[oid\u003dkita_fk]plaetze{filter\u003danzahl IS     NOT NULL AND anzahl\u003e 0}`       A non-default sort key can be set by adding `{sortKey\u003dcolumnName}` after the table name.  ## Query Generation       Options for query generation.  {@docTable:queryGeneration }",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "Unique identifier of the entity, has to match the filename. Allowed characters are     (A-Z, a-z), numbers (0-9), underscore and hyphen.",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "description": "",
          "type": "number"
        },
        "lastModified": {
          "title": "lastModified",
          "description": "",
          "type": "number"
        },
        "entityStorageVersion": {
          "title": "entityStorageVersion",
          "description": "",
          "type": "number"
        },
        "providerType": {
          "title": "providerType",
          "description": "Always `FEATURE`.",
          "type": "string"
        },
        "providerSubType": {
          "title": "providerSubType",
          "description": "`SQL` for SQL DBMS as data source, `WFS` for *OGC Web Feature Service* as data source.",
          "type": "string"
        },
        "featureProviderType": {
          "title": "featureProviderType",
          "description": "*Deprecated* See `providerSubType`.",
          "type": "string",
          "deprecated": true
        },
        "nativeCrs": {
          "title": "nativeCrs",
          "description": "Coordinate reference system of geometries in the dataset. The EPSG code of the     coordinate reference system is given as integer in `code`. `forceAxisOrder` may be set to     use a non-default axis order: `LON_LAT` uses longitude/east as first value and     latitude/north as second value, `LAT_LON` uses the reverse. `NONE` uses the default axis     order and is the default value. Example: The default coordinate reference system `CRS84`     would look like this: `code: 4326` and `forceAxisOrder: LON_LAT`.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.crs.domain.EpsgCrs"
        },
        "nativeTimeZone": {
          "title": "nativeTimeZone",
          "description": "A timezone ID, such as `Europe/Berlin`. Is applied to temporal values without timezone     in the dataset.",
          "type": "string"
        },
        "defaultLanguage": {
          "title": "defaultLanguage",
          "description": "",
          "type": "string"
        },
        "typeValidation": {
          "title": "typeValidation",
          "description": "Optional type definition validation with regard to the data source (only for SQL).     `NONE` means no validation. With `LAX` the validation will fail and the provider will not     start, when issues are detected that would definitely lead to runtime errors. Issues that     might lead to runtime errors depending on the data will be logged as warning. With `STRICT`     the validation will fail for any detected issue. That means the provider will only start if     runtime errors with regard to the data source can be ruled out.",
          "type": "string"
        },
        "labelTemplate": {
          "title": "labelTemplate",
          "description": "",
          "type": "string"
        },
        "extensions": {
          "title": "extensions",
          "description": "",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.ExtensionConfiguration"
          }
        },
        "codelists": {
          "title": "codelists",
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "auto": {
          "title": "auto",
          "description": "Option to generate missing definitions automatically from the data source.",
          "type": "boolean"
        },
        "autoPersist": {
          "title": "autoPersist",
          "description": "Option to persist definitions generated with `auto` to the configuration file. The     [Store](/application/40-store.md) must not be `READ_ONLY` for this to take effect.",
          "type": "boolean"
        },
        "autoTypes": {
          "title": "autoTypes",
          "description": "List of source types to include in derived `types` definitions when `auto: true`.     Currently only works for [SQL](sql.md).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connectionInfo": {
          "title": "connectionInfo",
          "description": "See [Connection Info](#connection-info).",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.features.sql.domain.ConnectionInfoSql"
        },
        "sourcePathDefaults": {
          "title": "sourcePathDefaults",
          "description": "Defaults for the path expressions in `sourcePath`, for details see [Source Path     Defaults](#source-path-defaults) below.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.features.sql.domain.SqlPathDefaults"
        },
        "queryGeneration": {
          "title": "queryGeneration",
          "description": "Options for query generation, for details see [Query Generation](#query-generation)     below.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.features.sql.domain.QueryGeneratorSettings"
        },
        "types": {
          "title": "types",
          "description": "Definition of feature types. The entries have to be [schema     definitions](#schema-definitions) with `type: OBJECT` and at least one property with `role:     ID`.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.FeatureSchema"
          }
        },
        "fragments": {
          "title": "fragments",
          "description": "Definition of reusable schema fragments that can be referenced using `schema` in     `types`. The entries are arbitrary [schema definitions](#schema-definitions).",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.FeatureSchema"
          }
        }
      }
    },
    "TileProviderMbtilesData": {
      "title": "TileProviderMbtilesData",
      "description": "# MBTiles  With this tile provider, the tiles are provided via an [MBTiles     file](https://github.com/mapbox/mbtiles-spec). The tile format and all other properties of     the tileset are derived from the contents of the MBTiles file. Only the `WebMercatorQuad`     tiling scheme is supported.       ## Configuration       {@docTable:properties }       ### Tileset       {@docTable:tileset }       ## Example       {@docVar:examples }",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "Unique identifier of the entity, has to match the filename. Allowed characters are     (A-Z, a-z), numbers (0-9), underscore and hyphen.",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "description": "",
          "type": "number"
        },
        "lastModified": {
          "title": "lastModified",
          "description": "",
          "type": "number"
        },
        "entityStorageVersion": {
          "title": "entityStorageVersion",
          "description": "",
          "type": "number"
        },
        "providerType": {
          "title": "providerType",
          "description": "Always `TILE`.",
          "type": "string"
        },
        "providerSubType": {
          "title": "providerSubType",
          "description": "Always `MBTILES`.",
          "type": "string"
        },
        "tilesetDefaults": {
          "title": "tilesetDefaults",
          "description": "Defaults for all `tilesets`.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.TilesetMbTilesDefaults"
        },
        "tilesets": {
          "title": "tilesets",
          "description": "Definition of tilesets.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.TilesetMbTiles"
          }
        }
      }
    },
    "TileProviderFeaturesData": {
      "title": "TileProviderFeaturesData",
      "description": "# Features  In this tile provider, the tiles in Mapbox Vector Tiles format are derived from a     [Feature Provider](../feature/README.md).       ## Configuration       {@docTable:properties }       {@docVar:tilesetDefaults }       {@docTable:tilesetDefaults }       {@docVar:tileset }       {@docTable:tileset }       {@docVar:cache }       {@docTable:cache }       {@docVar:seeding }       {@docTable:seeding }       ## Example       {@docVar:examples }",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "Unique identifier of the entity, has to match the filename. Allowed characters are     (A-Z, a-z), numbers (0-9), underscore and hyphen.",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "description": "",
          "type": "number"
        },
        "lastModified": {
          "title": "lastModified",
          "description": "",
          "type": "number"
        },
        "entityStorageVersion": {
          "title": "entityStorageVersion",
          "description": "",
          "type": "number"
        },
        "providerType": {
          "title": "providerType",
          "description": "Always `TILE`.",
          "type": "string"
        },
        "providerSubType": {
          "title": "providerSubType",
          "description": "Always `FEATURES`.",
          "type": "string"
        },
        "auto": {
          "title": "auto",
          "description": "Option to generate missing definitions automatically from the data source.",
          "type": "boolean"
        },
        "autoPersist": {
          "title": "autoPersist",
          "description": "Option to persist definitions generated with `auto` to the configuration file. The     [Store](/application/40-store.md) must not be `READ_ONLY` for this to take effect.",
          "type": "boolean"
        },
        "tilesetDefaults": {
          "title": "tilesetDefaults",
          "description": "Defaults for all `tilesets`, see [Tileset Defaults](#tileset-defaults).",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.TilesetFeaturesDefaults"
        },
        "tilesets": {
          "title": "tilesets",
          "description": "Definition of tilesets, see [Tileset](#tileset).",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.TilesetFeatures"
          }
        },
        "caches": {
          "title": "caches",
          "description": "List of cache definitions, see [Cache](#cache).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.Cache"
          }
        },
        "seeding": {
          "title": "seeding",
          "description": "Controls how and when tiles are precomputed, see [Seeding](#seeding).",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.SeedingOptions"
        }
      }
    },
    "TileProviderHttpData": {
      "title": "TileProviderHttpData",
      "description": "# HTTP  With this tile provider, the tiles are obtained via HTTP, e.g. from a     [TileServer-GL](https://github.com/maptiler/tileserver-gl) instance.       ## Configuration       {@docTable:properties }       {@docVar:tilesetDefaults }       {@docTable:tilesetDefaults }       {@docVar:tileset }       {@docTable:tileset }       ## Example       {@docVar:examples }",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "Unique identifier of the entity, has to match the filename. Allowed characters are     (A-Z, a-z), numbers (0-9), underscore and hyphen.",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "description": "",
          "type": "number"
        },
        "lastModified": {
          "title": "lastModified",
          "description": "",
          "type": "number"
        },
        "entityStorageVersion": {
          "title": "entityStorageVersion",
          "description": "",
          "type": "number"
        },
        "providerType": {
          "title": "providerType",
          "description": "Always `TILE`.",
          "type": "string"
        },
        "providerSubType": {
          "title": "providerSubType",
          "description": "Always `HTTP`.",
          "type": "string"
        },
        "tilesetDefaults": {
          "title": "tilesetDefaults",
          "description": "Defaults for all `tilesets`, see [Tileset Defaults](#tileset-defaults).",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.TilesetHttpDefaults"
        },
        "tilesets": {
          "title": "tilesets",
          "description": "Definition of tilesets, see [Tileset](#tileset).",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.TilesetHttp"
          }
        }
      }
    },
    "OgcApiDataV2": {
      "title": "OgcApiDataV2",
      "description": "# OGC API       Each API represents a deployment of a single OGC Web API, i.e., an API that implements     conformance classes from OGC API standards.       ## General rules       ### Response encoding       For operations that return a response, the encoding is chosen using standard HTTP content     negotiation with `Accept` headers.       GET operations that support more than one encoding additionally support the query     parameter `f`, which allows to explicitly choose the encoding and override the result of the     content negotiation. The supported encodings depend on the affected resource and the     configuration.       ### Response language       For operations that return a response, the language for linguistic texts is chosen using     standard HTTP content negiotiation with `Accept-Language` headers.       If enabled in [Common Core](building-blocks/common_core.md), GET operations additionally     support the query parameter `lang`, which allows to explicitely choose the language and     override the result of the content negotiation. The supported languages depend on the     affected resource and the configuration. Support for multilingualism is currently limited.     There are four possible sources for linguistic texts:        - Static texts: For example link labels or static texts in HTML represenations. Currently the languages English (`en`) and German (`de`) are supported. - Texts contained in the data: Currently not supported. - Texts set in the configuration: Currently not supported. - Error messages: These are always in english, the messages are currently hard-coded.        ### Resource paths       All resource paths in this documentation are relative to the base URI of the API. For     example given the base URI `https://example.com/pfad/zu/apis/{apiId}` and the relative     resource path `collections`, the full path would be     `https://example.com/pfad/zu/apis/{apiId}/collections`.  ## Configuration       Details regarding the API modules can be found [here](building-blocks/README.md), see     `api` in the table below.       {@docTable:properties }  ### Collection       Every collection corresponds to a feature type defined in the feature provider (only     *Feature Collections* are currently supported).       {@docTable:collectionProperties }  ### Building Blocks       Building blocks might be configured for the API or for single collections. The final     configuration is formed by merging the following sources in this order:        - The building block defaults, see [Building Blocks](building-blocks/README.md). - Optional deployment defaults in the `defaults` directory. - API level configuration. - Collection level configuration. - Optional deployment overrides in the `overrides` directory.          ### Metadata       {@docVar:metadata }       {@docTable:metadataProperties }  ### External document       {@docVar:externalDocument }       {@docTable:externalDocumentProperties }  ### Default extent       {@docVar:extent }       {@docTable:extentProperties }  ### Caching       {@docVar:caching }       {@docTable:cachingProperties }  ### Access Control       {@docVar:security }       {@docTable:securityProperties }  ### Examples       See the [API     configuration](https://github.com/interactive-instruments/ldproxy/blob/master/demo/vineyards/store/entities/services/vineyards.yml)     of the API [Vineyards in Rhineland-Palatinate, Germany](https://demo.ldproxy.net/vineyards).  ## Storage       API configurations reside under the relative path `store/entities/services/{apiId}.yml` in     the data directory.",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "Unique identifier of the entity, has to match the filename. Allowed characters are     (A-Z, a-z), numbers (0-9), underscore and hyphen.",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "description": "",
          "type": "number"
        },
        "lastModified": {
          "title": "lastModified",
          "description": "",
          "type": "number"
        },
        "entityStorageVersion": {
          "title": "entityStorageVersion",
          "description": "",
          "type": "number"
        },
        "label": {
          "title": "label",
          "description": "Human readable label.",
          "type": "string"
        },
        "description": {
          "title": "description",
          "description": "Human readable description.",
          "type": "string"
        },
        "enabled": {
          "title": "enabled",
          "description": "Option to disable the service, which means its REST API will not be available and     background tasks will not be running.",
          "type": "boolean"
        },
        "shouldStart": {
          "title": "shouldStart",
          "description": "*Deprecated* See `enabled`.",
          "type": "boolean",
          "deprecated": true
        },
        "apiVersion": {
          "title": "apiVersion",
          "description": "Adds a version to the URL path, instead of `/{id}` it will be `/{id}/v{apiVersion}`.",
          "type": "number"
        },
        "auto": {
          "title": "auto",
          "description": "Option to generate missing definitions automatically from the data source.",
          "type": "boolean"
        },
        "autoPersist": {
          "title": "autoPersist",
          "description": "Option to persist definitions generated with `auto` to the configuration file. The     [Store](/application/40-store.md) must not be `READ_ONLY` for this to take effect.",
          "type": "boolean"
        },
        "serviceType": {
          "title": "serviceType",
          "description": "Always `OGC_API`.",
          "type": "string"
        },
        "metadata": {
          "title": "metadata",
          "description": "General [Metadata](#metadata) for the API.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.ApiMetadata"
        },
        "externalDocs": {
          "title": "externalDocs",
          "description": "Link to a [document or website](#external-document) with more information about this     API.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.ExternalDocumentation"
        },
        "defaultExtent": {
          "title": "defaultExtent",
          "description": "By default, the spatial and temporal extent of data is derived from the data when     starting the API, but the [Default Extent](#default-extent) can also be configured.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.CollectionExtent"
        },
        "defaultCaching": {
          "title": "defaultCaching",
          "description": "Sets fixed values for [HTTP Caching Headers](#caching) for the resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "accessControl": {
          "title": "accessControl",
          "description": "[Access Control](#access-control) configuration.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.ApiSecurity"
        },
        "apiValidation": {
          "title": "apiValidation",
          "description": "During startup of an API, the configuration can be validated. The supported values are     `NONE`, `LAX`, and `STRICT`. `STRICT` will block the start of an API with warnings, while     an API with warnings, but no errors will start with `LAX`. If the value is set to `NONE`,     no validation will occur. Warnings are issued for problems in the configuration that can     affect the use of the API while errors are issued for cases where the API cannot be used.     Typically, API validation during startup will only be used in development and testing     environments since the API validating results in a slower startup time and should not be     necessary in production environments.",
          "type": "string"
        },
        "tags": {
          "title": "tags",
          "description": "Tags for this API. Every tag is a string without white space. Tags are shown in the     *API Catalog* and can be used to filter the catalog response with the query parameter     `tags`, e.g. `tags\u003dINSPIRE`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "api": {
          "title": "api",
          "description": "[API Building Blocks](#building-blocks) configuration.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.ExtensionConfiguration"
          }
        },
        "collections": {
          "title": "collections",
          "description": "Collection configurations, the key is the collection id, for the value see     [Collection](#collection) below.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.FeatureTypeConfigurationOgcApi"
          }
        }
      }
    },
    "de.ii.xtraplatform.crs.domain.EpsgCrs": {
      "title": "EpsgCrs",
      "description": "",
      "type": "object",
      "properties": {
        "code": {
          "title": "code",
          "description": "",
          "type": "number"
        },
        "verticalCode": {
          "title": "verticalCode",
          "description": "",
          "type": "number"
        },
        "forceLongitudeFirst": {
          "title": "forceLongitudeFirst",
          "description": "",
          "type": "boolean",
          "deprecated": true
        },
        "forceAxisOrder": {
          "title": "forceAxisOrder",
          "description": "",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.feature.changes.sql.domain.FeatureChangesPgConfiguration": {
      "title": "FeatureChangesPgConfiguration",
      "description": "```yaml  - type: FEATURE_CHANGES_PG   enabled: true   listenForTypes: # optional, default is to listen for all types   - governmentalservice   pollingInterval: 30s # optional, default is 60s  ```",
      "type": "object",
      "properties": {
        "enabled": {
          "title": "enabled",
          "description": "Enable the extension?",
          "type": "boolean"
        },
        "listenForTypes": {
          "title": "listenForTypes",
          "description": "List of types that should be observed. An empty list means all types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pollingInterval": {
          "title": "pollingInterval",
          "description": "Since the JDBC driver for PostgreSQL does not support real reactivity, it has to be     polled for changes with the given interval.",
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.routes.sql.domain.Preference": {
      "title": "Preference",
      "description": "",
      "type": "object",
      "properties": {
        "label": {
          "title": "label",
          "description": "",
          "type": "string"
        },
        "costColumn": {
          "title": "costColumn",
          "description": "",
          "type": "string"
        },
        "reverseCostColumn": {
          "title": "reverseCostColumn",
          "description": "",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.routes.sql.domain.RoutesConfiguration": {
      "title": "RoutesConfiguration",
      "description": "```yaml  extensions:   - type: ROUTES     enabled: true     warmup: true     fromToQuery:       driving: \u0027SELECT id as oid, ST_Distance(${point},the_geom) AS distance FROM v_ways_vertices_pgr WHERE connected and ST_DWithin(${point},the_geom, 0.25) ORDER BY distance ASC LIMIT 1\u0027     edgesQuery:       driving: \u0027SELECT gid as id, source, target, x1, y1, x2, y2, ${cost_column} AS cost, ${reverse_cost_column} AS reverse_cost, maxheight, maxweight FROM v_ways WHERE tag_id NOT IN (113, 114, 115, 116, 117, 118, 119, 120, 122, 201, 202, 203, 204, 301, 302, 303, 304, 305)\u0027     routeQuery: \u0027SELECT * from pgr_aStar(${edgesQuery}, ${from_vid}, ${to_vid}, ${height}, ${weight}, \u0027\u0027SELECT gid FROM v_ways WHERE ST_Intersects(the_geom, ${obstacles})\u0027\u0027, false, 5, (1+8+16))\u0027     nativeCrs:       code: 4326       forceAxisOrder: LON_LAT     preferences:       fastest:         label: Fastest         costColumn: cost_s         reverseCostColumn: reverse_cost_s       shortest:         label: Shortest         costColumn: cost         reverseCostColumn: reverse_cost     modes:       driving: Driving types:   route:     type: OBJECT     sourcePath: /_route_     properties:       id:         sourcePath: id         type: INTEGER         role: ID       edge:         sourcePath: edge         type: INTEGER       node:         sourcePath: node         type: INTEGER       cost:         sourcePath: cost         type: FLOAT       agg_cost:         sourcePath: agg_cost         type: FLOAT       data:         type: OBJECT         sourcePath: \u0027[edge\u003dgid]v_ways{sortKey\u003dgid}\u0027         properties:           geometry:             sourcePath: the_geom             type: GEOMETRY             geometryType: LINE_STRING             role: PRIMARY_GEOMETRY             forcePolygonCCW: false           source:             sourcePath: source             type: INTEGER           target:             sourcePath: target             type: INTEGER           type:             sourcePath: tag_id             type: STRING             transformations:               codelist: wayTag           #osm_id:           #  sourcePath: osm_id           #  type: INTEGER           length_m:             sourcePath: length_m             type: FLOAT           duration_forward_s:             sourcePath: cost_s             type: FLOAT           duration_backward_s:             sourcePath: reverse_cost_s             type: FLOAT           roadName:             sourcePath: name             type: STRING           oneway:             sourcePath: oneway             type: STRING           maxspeed_forward:             sourcePath: maxspeed_forward             type: FLOAT           maxspeed_backward:             sourcePath: maxspeed_backward             type: FLOAT           maxHeight_m:             sourcePath: maxheight             type: FLOAT           maxWeight_t:             sourcePath: maxweight             type: FLOAT  ```",
      "type": "object",
      "properties": {
        "enabled": {
          "title": "enabled",
          "description": "Enable the extension?",
          "type": "boolean"
        },
        "fromToQuery": {
          "title": "fromToQuery",
          "description": "*Required* The SQL query to determine the start and end vertex of the route. `${point}`     will be replaced with the WKT POINT geometry of the waypoint to use as start/end.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "edgesQuery": {
          "title": "edgesQuery",
          "description": "*Required* The SQL query to determine the edges / route segments of the route.     `${cost_column}` and `${reverse_cost_column}` will be replaced with the column names to use     for optimizing the route. `${cost_column}` is the value in the direction of the edge,     `${reverse_cost_column}` in the opposite direction.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "routeQuery": {
          "title": "routeQuery",
          "description": "*Required* The SQL query to compute the route. Use `${edgesQuery}` as placeholder for     the `edgesQuery`, `${from_vid}` and `${to_vid}` as placeholders for the start/end vertex.     If supported, use `${height}`, `${weight}`, and `${obstacles}` as placeholders for the     height, weight and area constraints. `${flag_mask}`, if provided, is replaced by the sum of     all additional flags set for the routing request.",
          "type": "string"
        },
        "flags": {
          "title": "flags",
          "description": "Additional flags that can be set to consider during the computation of the route. The     integer value of a flag must be a unique bit value.",
          "type": "object",
          "additionalProperties": {
            "type": "number"
          }
        },
        "nativeCrs": {
          "title": "nativeCrs",
          "description": "Coordinate reference system of geometries in the routing dataset. The EPSG code of the     coordinate reference system is given as integer in `code`. `forceAxisOrder` may be set to     use a non-default axis order: `LON_LAT` uses longitude/east as first value and     latitude/north as second value, `LAT_LON` uses the reverse. `NONE` uses the default axis     order and is the default value. Example: The default coordinate reference system `CRS84`     would look like this: `code: 4326` and `forceAxisOrder: LON_LAT`.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.crs.domain.EpsgCrs"
        },
        "preferences": {
          "title": "preferences",
          "description": "*Required* Lists the available options for optimizing the route. The key is the     preference id, the value an object of key-value pairs with the following required keys:     \"label\", \"costColumn\" (name of the column in the table of network segment to minimize, if     the segment is traveled in positive direction), \"reverseCostColumn\" (same, but for     travelling in negative direction).",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.routes.sql.domain.Preference"
          }
        },
        "modes": {
          "title": "modes",
          "description": "Lists the available modes of transportation, the key is the mode id, the value a     descriptive label.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "weightDefault": {
          "title": "weightDefault",
          "description": "Sets a default value for the weight of a vehicle in tons. `0` means no weight.",
          "type": "string"
        },
        "heightDefault": {
          "title": "heightDefault",
          "description": "Sets a default value for the height of a vehicle in meters. `0` means no height.",
          "type": "string"
        },
        "obstaclesDefault": {
          "title": "obstaclesDefault",
          "description": "Sets a default value for an area to avoid.",
          "type": "string"
        },
        "warmup": {
          "title": "warmup",
          "description": "Enables a route calculation with the default values at provider startup. This can be     useful, if the routing algorithm caches certain information.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.schemas.ext.domain.JsonSchemaConfiguration": {
      "title": "JsonSchemaConfiguration",
      "description": "```yaml  - type: JSON_SCHEMA   enabled: true   objectTypeRefs:     \u0027#/$defs/Link\u0027: Link  ```",
      "type": "object",
      "properties": {
        "enabled": {
          "title": "enabled",
          "description": "Enable the extension?",
          "type": "boolean"
        },
        "objectTypeRefs": {
          "title": "objectTypeRefs",
          "description": "Allows to map JSON schema definitions to an `objectType`, e.g. `\u0027#/$defs/Link\u0027: Link`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "geometryTypeRefs": {
          "title": "geometryTypeRefs",
          "description": "Allows to map JSON schema definitions to a `geometryType`, e.g.     `https://geojson.org/schema/LineString.json\u0027: LINE_STRING`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "relationRefs": {
          "title": "relationRefs",
          "description": "Allows to map JSON schema definitions to a `refType`, e.g. `\u0027#/$defs/Address\u0027:     address`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "compositionIndexes": {
          "title": "compositionIndexes",
          "description": "Allows to choose a specific variant for oneOf/anyOf/allOf.",
          "type": "object",
          "additionalProperties": {
            "type": "number"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.features.domain.ExtensionConfiguration": {
      "oneOf": [
        {
          "$ref": "#/$defs/de.ii.xtraplatform.feature.changes.sql.domain.FeatureChangesPgConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.xtraplatform.routes.sql.domain.RoutesConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.xtraplatform.schemas.ext.domain.JsonSchemaConfiguration"
        }
      ]
    },
    "de.ii.xtraplatform.features.domain.transform.PropertyTransformation": {
      "title": "PropertyTransformation",
      "description": "# Transformations  Transformations are supported in multiple parts of the configuration. Transformations do     not affect data sources, they are applied on-the-fly as part of the encoding. Filter     expressions do not take transformations into account, they have to be based on the source     values.  {@docTable:properties }  ## Examples for `stringFormat`       \u003cspan v-pre\u003e`https://example.com/id/kinder/kita/{{value}}`\u003c/span\u003e inserts the value into     the URI template.       \u003cspan v-pre\u003e`{{value | replace:\u0027\\\\s*[0-9].*$\u0027:\u0027\u0027}}`\u003c/span\u003e removes all white space and     numbers at the end (e.g. to remove a street number)       \u003cspan v-pre\u003e`{{value | replace:\u0027^[^0-9]*\u0027:\u0027\u0027}}`\u003c/span\u003e removes everything before the first     digit       \u003cspan v-pre\u003e`{{value | toUpper}}`\u003c/span\u003e transforms the value to upper case       \u003cspan v-pre\u003e`{{value | toLower}}`\u003c/span\u003e transforms the value to lower case       \u003cspan v-pre\u003e`{{value | urlEncode}}`\u003c/span\u003e encodes special characters in the text for     usage as aprt of an URI       \u003cspan v-pre\u003e`[{{value}}](https://de.wikipedia.org/wiki/{{value | replace:\u0027 \u0027:\u0027_\u0027 |     urlencode}})`\u003c/span\u003e transforms a value into a markdown link to a Wikipedia entry",
      "type": "object",
      "properties": {
        "rename": {
          "title": "rename",
          "description": "Rename a property.",
          "type": "string"
        },
        "remove": {
          "title": "remove",
          "description": "`IN_COLLECTION` (until version 3.0: `OVERVIEW`) skips the property only for the     *Features* resource, `ALWAYS` always skips it, `NEVER` never skips it.",
          "type": "string"
        },
        "flatten": {
          "title": "flatten",
          "description": "Flattens object or array properties using the given separator. For arrays the property     name is formed by the original property name followed by pairs of separator and array     position. For objects the property name is formed by concatenating the original property     separated by the given separator. Can only be applied on the feature level in the provider     or using the wildcard property name `*` otherwise.",
          "type": "string"
        },
        "reduceStringFormat": {
          "title": "reduceStringFormat",
          "description": "Reduces an object to a string using the same syntax as `stringFormat` but with     additional replacements for objects property names.",
          "type": "string"
        },
        "stringFormat": {
          "title": "stringFormat",
          "description": "Format a value, where `{{value}}` is replaced with the actual value and     `{{serviceUrl}}` is replaced with the API landing page URI. Additonal operations can be     applied to `{{value}}` by chaining them with `|`, see the examples below.",
          "type": "string"
        },
        "dateFormat": {
          "title": "dateFormat",
          "description": "Format date(-time) values with the given     [pattern](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#patterns),     e.g. `dd.MM.yyyy` for German notation.",
          "type": "string"
        },
        "codelist": {
          "title": "codelist",
          "description": "Maps the value according to the given [codelist](../../auxiliaries/codelists.md). If     the value is not found in the codelist or the codelist does not exist, the original value     is passed through. Falls der Wert nicht in der Codelist enthalten ist oder die Codelist     nicht gefunden wird, bleibt der Wert unverändert. Not applicable for properties containing     objects.",
          "type": "string"
        },
        "nullify": {
          "title": "nullify",
          "description": "Maps all values matching the list of regular expressions to `null`. Not applicable for     properties containing objects.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "null": {
          "title": "null",
          "description": "*Deprecated* See `nullify`.",
          "type": "string",
          "deprecated": true
        },
        "asLink": {
          "title": "asLink",
          "description": "TODO",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.features.domain.SchemaConstraints": {
      "title": "SchemaConstraints",
      "description": "# Constraints  Currently only available in [German](../../de/providers/details/constraints.md).",
      "type": "object",
      "properties": {
        "codelist": {
          "title": "codelist",
          "description": "TODO",
          "type": "string"
        },
        "enum": {
          "title": "enum",
          "description": "TODO",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regex": {
          "title": "regex",
          "description": "TODO",
          "type": "string"
        },
        "required": {
          "title": "required",
          "description": "TODO",
          "type": "boolean"
        },
        "min": {
          "title": "min",
          "description": "TODO",
          "type": "number"
        },
        "max": {
          "title": "max",
          "description": "TODO",
          "type": "number"
        },
        "minOccurrence": {
          "title": "minOccurrence",
          "description": "TODO",
          "type": "number"
        },
        "maxOccurrence": {
          "title": "maxOccurrence",
          "description": "TODO",
          "type": "number"
        },
        "composite": {
          "title": "composite",
          "description": "Flag to indicate that all geometry components are connected. Only relevant for     properties with MultiLineString and MultiPolygon geometries.",
          "type": "boolean"
        },
        "closed": {
          "title": "closed",
          "description": "Flag to indicate that all geometry values are closed. Only relevant for geometry     properties.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.features.domain.PartialObjectSchema": {
      "title": "PartialObjectSchema",
      "description": "",
      "type": "object",
      "properties": {
        "sourcePath": {
          "title": "sourcePath",
          "description": "",
          "type": "string"
        },
        "schema": {
          "title": "schema",
          "description": "",
          "type": "string"
        },
        "properties": {
          "title": "properties",
          "description": "Only for `OBJECT` and `OBJECT_ARRAY`. Object with the property names as keys and schema     objects as values.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.FeatureSchema"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.features.domain.FeatureSchema": {
      "title": "FeatureSchema",
      "description": "",
      "type": "object",
      "properties": {
        "refType": {
          "title": "refType",
          "description": "",
          "type": "string"
        },
        "refUriTemplate": {
          "title": "refUriTemplate",
          "description": "",
          "type": "string"
        },
        "sourcePath": {
          "title": "sourcePath",
          "description": "The relative path for this schema object. The syntax depends on the provider types, see     [SQL](sql.md#path-syntax) or [WFS](wfs.md#path-syntax).",
          "type": "string"
        },
        "path": {
          "title": "path",
          "description": "*Deprecated* See `sourcePath`.",
          "type": "string",
          "deprecated": true
        },
        "sourcePaths": {
          "title": "sourcePaths",
          "description": "The relative paths for this schema object. The syntax depends on the provider types,     see [SQL](sql.md#path-syntax) or [WFS](wfs.md#path-syntax).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "title": "type",
          "description": "Data type of the schema object. Default is `OBJECT` when `properties` is set, otherwise     it is `STRING`. Possible values:        - `FLOAT`, `INTEGER`, `STRING`, `BOOLEAN`, `DATETIME`, `DATE` for simple values. - `GEOMETRY` for geometries. - `OBJECT` for objects. - `OBJECT_ARRAY` a list of objects. - `VALUE_ARRAY` a list of simple values.",
          "type": "string"
        },
        "role": {
          "title": "role",
          "description": "`ID` has to be set for the property that should be used as the unique feature id. As a     rule that should be the first property ion the `properties` object. Property names cannot     contain spaces (\" \") or slashes (\"/\"). Set `TYPE` for a property that specifies the type     name of the object.",
          "type": "string"
        },
        "valueType": {
          "title": "valueType",
          "description": "Only needed when `type` is `VALUE_ARRAY`. Possible values: `FLOAT`, `INTEGER`,     `STRING`, `BOOLEAN`, `DATETIME`, `DATE`",
          "type": "string"
        },
        "geometryType": {
          "title": "geometryType",
          "description": "The specific geometry type for properties with `type: GEOMETRY`. Possible values are     simple feature geometry types: `POINT`, `MULTI_POINT`, `LINE_STRING`, `MULTI_LINE_STRING`,     `POLYGON`, `MULTI_POLYGON`, `GEOMETRY_COLLECTION` and `ANY`",
          "type": "string"
        },
        "objectType": {
          "title": "objectType",
          "description": "Optional name for an object type, used for example in JSON Schema. For properties that     should be mapped as links according to *RFC 8288*, use `Link`.",
          "type": "string"
        },
        "label": {
          "title": "label",
          "description": "Label for the schema object, used for example in HTML representations.",
          "type": "string"
        },
        "description": {
          "title": "description",
          "description": "Description for the schema object, used for example in HTML representations or JSON     Schema.",
          "type": "string"
        },
        "unit": {
          "title": "unit",
          "description": "The unit of measurement of the value, only relevant for numeric properties.",
          "type": "string"
        },
        "constantValue": {
          "title": "constantValue",
          "description": "Might be used instead of `sourcePath` to define a property with a constant value.",
          "type": "string"
        },
        "scope": {
          "title": "scope",
          "description": "Optional scope for properties that should only be used when either reading (`QUERIES`)     or writing (`MUTATIONS`) features.",
          "type": "string"
        },
        "schema": {
          "title": "schema",
          "description": "Reference to an external schema definition. The default resolver will resolve     references to entries in `fragments` e.g. `#/fragments/example`. For additional resolvers     see [Extensions](extensions).",
          "type": "string"
        },
        "ignore": {
          "title": "ignore",
          "description": "Option to completely ignore this schema object. Main purpose is to ignore parts of     schemas referenced with `schema`.",
          "type": "boolean"
        },
        "transformations": {
          "title": "transformations",
          "description": "Optional transformations for the property, see     [transformations](../details/transformations.md).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.transform.PropertyTransformation"
          }
        },
        "constraints": {
          "title": "constraints",
          "description": "Optional description of schema constraints, especially for JSON schema generation. See     [Constraints](../details/constraints.md).",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.features.domain.SchemaConstraints"
        },
        "forcePolygonCCW": {
          "title": "forcePolygonCCW",
          "description": "Option to disable enforcement of counter-clockwise orientation for exterior rings and a     clockwise orientation for interior rings (only for SQL).",
          "type": "boolean"
        },
        "isQueryable": {
          "title": "isQueryable",
          "description": "Properties that are not of type OBJECT or OBJECT_ARRAY are by default eligible as     queryables. This setting can be used to declare a property as ineligible, for example, if     the property is not optimized for use in queries. If an eligible property can actually be     queried is decided by the provider implementation, that might not be feasible due to     technical reasons.",
          "type": "boolean"
        },
        "isSortable": {
          "title": "isSortable",
          "description": "Only the direct properties of a feature type that are of type STRING, FLOAT, INTEGER,     DATE, or TIMESTAMP are eligible as sortables. This setting can be used to declare a     property as ineligible, for example, if the property is not optimized for use in queries.     If an eligible property can actually be used as sortable is decided by the provider     implementation, that might not be feasible due to technical reasons.",
          "type": "boolean"
        },
        "properties": {
          "title": "properties",
          "description": "Only for `OBJECT` and `OBJECT_ARRAY`. Object with the property names as keys and schema     objects as values.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.FeatureSchema"
          }
        },
        "merge": {
          "title": "merge",
          "description": "If only some of the `properties` are defined in an external `schema`, or if some of the     `properties` should be mapped to a different table, this provides a convenient way to     define these properties alongside the regular properties. The option takes a list of schema     objects, but only `sourcePath`, `schema` and `properties` are considered. For details see     [Mapping Operations](#merge).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.PartialObjectSchema"
          }
        },
        "allOf": {
          "title": "allOf",
          "description": "*Deprecated* See `merge`.",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.PartialObjectSchema"
          }
        },
        "coalesce": {
          "title": "coalesce",
          "description": "If the value for a property may come from more than one `sourcePath`, this allows to     choose the first non-null value. This takes a list of value schemas, for details see     [Mapping Operations](#coalesce).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.FeatureSchema"
          }
        },
        "concat": {
          "title": "concat",
          "description": "If the values for an array property may come from more than one `sourcePath`, this     allows to concatenate all available values. This takes a list of value or value array     schemas, for details see [Mapping Operations](#concat).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.features.domain.FeatureSchema"
          }
        },
        "additionalInfo": {
          "title": "additionalInfo",
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.features.gml.domain.ConnectionInfoWfsHttp": {
      "title": "ConnectionInfoWfsHttp",
      "description": "",
      "type": "object",
      "properties": {
        "connectionUri": {
          "title": "connectionUri",
          "description": "",
          "type": "string"
        },
        "version": {
          "title": "version",
          "description": "The WFS version to use.",
          "type": "string"
        },
        "gmlVersion": {
          "title": "gmlVersion",
          "description": "The GML version to use.",
          "type": "string"
        },
        "namespaces": {
          "title": "namespaces",
          "description": "A map of namespace prefixes and URIs used in the mapping paths.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "connectorType": {
          "title": "connectorType",
          "description": "Always `HTTP`.",
          "type": "string"
        },
        "uri": {
          "title": "uri",
          "description": "The URI of the GetCapabilities operation for the WFS.",
          "type": "string"
        },
        "method": {
          "title": "method",
          "description": "The HTTP method to use, `GET` or `POST`.",
          "type": "string"
        },
        "user": {
          "title": "user",
          "description": "The user name for HTTP Basic Auth.",
          "type": "string"
        },
        "password": {
          "title": "password",
          "description": "The base64 encoded password for HTTP Basic Auth.",
          "type": "string"
        },
        "otherUrls": {
          "title": "otherUrls",
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.features.sql.domain.PoolSettings": {
      "title": "PoolSettings",
      "description": "",
      "type": "object",
      "properties": {
        "maxConnections": {
          "title": "maxConnections",
          "description": "Maximum number of connections to the database. The default value is computed     depending on the number of processor cores and the maximum number of joins per feature     type in the [Types Configuration](README.md#schema-definitions). The default value is     recommended for optimal performance under load. The smallest possible value also depends     on the maximum number of joins per feature type, smaller values are rejected.",
          "type": "number"
        },
        "minConnections": {
          "title": "minConnections",
          "description": "Minimum number of connections to the database that are maintained.",
          "type": "number"
        },
        "initFailFast": {
          "title": "initFailFast",
          "description": "If disabled the provider will wait longer for the first database connection to be     established. Has no effect if `minConnections` is `0`. Should normally be disabled only     on development systems.",
          "type": "boolean",
          "deprecated": true
        },
        "initFailTimeout": {
          "title": "initFailTimeout",
          "description": "",
          "type": "string"
        },
        "idleTimeout": {
          "title": "idleTimeout",
          "description": "The maximum amount of time that a connection is allowed to sit idle in the pool. Only     applies to connections beyond the `minConnections` limit. A value of 0 means that idle     connections are never removed from the pool.",
          "type": "string"
        },
        "shared": {
          "title": "shared",
          "description": "If enabled for multiple providers with matching `host`, `database` and `user`, a     single connection pool will be shared between these providers. If any of the other     `connectionInfo` options do not match, the provider startup will fail.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.features.sql.domain.FeatureActionTrigger": {
      "title": "FeatureActionTrigger",
      "description": "",
      "type": "object",
      "properties": {
        "onDelete": {
          "title": "onDelete",
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.features.sql.domain.SqlPathDefaults": {
      "title": "SqlPathDefaults",
      "description": "",
      "type": "object",
      "properties": {
        "primaryKey": {
          "title": "primaryKey",
          "description": "The default column that is used for join analysis if no differing primary key is set in     the [sourcePath](#path-syntax).",
          "type": "string"
        },
        "defaultPrimaryKey": {
          "title": "defaultPrimaryKey",
          "description": "*Deprecated* See `primaryKey`.",
          "type": "string",
          "deprecated": true
        },
        "sortKey": {
          "title": "sortKey",
          "description": "The default column that is used to sort rows if no differing sort key is set in the     [sourcePath](#path-syntax).",
          "type": "string"
        },
        "defaultSortKey": {
          "title": "defaultSortKey",
          "description": "*Deprecated* See `sortKey`.",
          "type": "string",
          "deprecated": true
        },
        "schema": {
          "title": "schema",
          "description": "The default schema that is applied to tables without prefix in     [sourcePaths](#path-syntax).",
          "type": "string"
        },
        "junctionTablePattern": {
          "title": "junctionTablePattern",
          "description": "",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.features.sql.domain.ConnectionInfoSql": {
      "title": "ConnectionInfoSql",
      "description": "",
      "type": "object",
      "properties": {
        "connectionUri": {
          "title": "connectionUri",
          "description": "",
          "type": "string"
        },
        "connectorType": {
          "title": "connectorType",
          "description": "Always `SLICK`.",
          "type": "string"
        },
        "dialect": {
          "title": "dialect",
          "description": "`PGIS` for PostgreSQL/PostGIS, `GPKG` for GeoPackage or SQLite/SpatiaLite.",
          "type": "string"
        },
        "database": {
          "title": "database",
          "description": "The name of the database. For `GPKG` the file path, either absolute or relative to the     [data folder](../../application/30-data-folder.md).",
          "type": "string"
        },
        "host": {
          "title": "host",
          "description": "The database host. To use a non-default port, add it to the host separated by `:`, e.g.     `db:30305`. Not relevant for `GPKG`.",
          "type": "string"
        },
        "user": {
          "title": "user",
          "description": "The user name. Not relevant for `GPKG`.",
          "type": "string"
        },
        "password": {
          "title": "password",
          "description": "The base64 encoded password of the user. Not relevant for `GPKG`.",
          "type": "string"
        },
        "schemas": {
          "title": "schemas",
          "description": "The names of database schemas that should be used in addition to `public`. Not relevant     for `GPKG`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pool": {
          "title": "pool",
          "description": "Connection pool settings, for details see [Pool](#connection-pool) below.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.features.sql.domain.PoolSettings"
        },
        "driverOptions": {
          "title": "driverOptions",
          "description": "Custom options for the JDBC driver. For `PGIS`, you might pass `gssEncMode`, `ssl`,     `sslmode`, `sslcert`, `sslkey`, `sslrootcert` and `sslpassword`. For details see the     [driver     documentation](https://jdbc.postgresql.org/documentation/head/connect.html#connection-parameters).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "triggers": {
          "title": "triggers",
          "description": "",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.features.sql.domain.FeatureActionTrigger"
        },
        "maxConnections": {
          "title": "maxConnections",
          "description": "*Deprecated* See `pool.maxConnections`.",
          "type": "number",
          "deprecated": true
        },
        "maxThreads": {
          "title": "maxThreads",
          "description": "*Deprecated* See `maxConnections`.",
          "type": "number",
          "deprecated": true
        },
        "minConnections": {
          "title": "minConnections",
          "description": "*Deprecated* See `pool.minConnections`.",
          "type": "number",
          "deprecated": true
        },
        "initFailFast": {
          "title": "initFailFast",
          "description": "*Deprecated* See `pool.initFailFast`.",
          "type": "boolean",
          "deprecated": true
        },
        "computeNumberMatched": {
          "title": "computeNumberMatched",
          "description": "*Deprecated* See [Query Generation](#query-generation) below.",
          "type": "boolean",
          "deprecated": true
        },
        "pathSyntax": {
          "title": "pathSyntax",
          "description": "*Deprecated* See [Source Path Defaults](#source-path-defaults) below.",
          "type": "object",
          "deprecated": true,
          "$ref": "#/$defs/de.ii.xtraplatform.features.sql.domain.SqlPathDefaults"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.features.sql.domain.QueryGeneratorSettings": {
      "title": "QueryGeneratorSettings",
      "description": "",
      "type": "object",
      "properties": {
        "chunkSize": {
          "title": "chunkSize",
          "description": "",
          "type": "number"
        },
        "computeNumberMatched": {
          "title": "computeNumberMatched",
          "description": "Option to disable computation of the number of selected features for performance     reasons that are returned in `numberMatched`. As a general rule this should be disabled     for big datasets.",
          "type": "boolean"
        },
        "accentiCollation": {
          "title": "accentiCollation",
          "description": "",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.LonLat": {
      "title": "LonLat",
      "description": "",
      "type": "object",
      "properties": {
        "lon": {
          "title": "lon",
          "description": "",
          "type": "number"
        },
        "lat": {
          "title": "lat",
          "description": "",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.MinMax": {
      "title": "MinMax",
      "description": "",
      "type": "object",
      "properties": {
        "min": {
          "title": "min",
          "description": "",
          "type": "number"
        },
        "max": {
          "title": "max",
          "description": "",
          "type": "number"
        },
        "default": {
          "title": "default",
          "description": "",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.TilesetMbTilesDefaults": {
      "title": "TilesetMbTilesDefaults",
      "description": "",
      "type": "object",
      "properties": {
        "center": {
          "title": "center",
          "description": "Longitude and latitude that a map with the tiles should be centered on by default.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LonLat"
        },
        "levels": {
          "title": "levels",
          "description": "Controls the zoom levels available for each active tiling scheme as well as which zoom     level to use as default.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.TilesetMbTiles": {
      "title": "TilesetMbTiles",
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "The tileset id.",
          "type": "string"
        },
        "levels": {
          "title": "levels",
          "description": "Controls the zoom levels available for each active tiling scheme as well as which zoom     level to use as default.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        },
        "center": {
          "title": "center",
          "description": "Longitude and latitude that a map with the tiles should be centered on by default.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LonLat"
        },
        "source": {
          "title": "source",
          "description": "Filename of the MBTiles file in the `api-resources/tiles` directory.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.LevelTransformation": {
      "title": "LevelTransformation",
      "description": "",
      "type": "object",
      "properties": {
        "min": {
          "title": "min",
          "description": "",
          "type": "number"
        },
        "max": {
          "title": "max",
          "description": "",
          "type": "number"
        },
        "merge": {
          "title": "merge",
          "description": "",
          "type": "boolean"
        },
        "groupBy": {
          "title": "groupBy",
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "title": "properties",
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.TilesetFeaturesDefaults": {
      "title": "TilesetFeaturesDefaults",
      "description": "### Tileset Defaults       Defaults that are applied to each [Tileset](#tileset).",
      "type": "object",
      "properties": {
        "center": {
          "title": "center",
          "description": "Longitude and latitude that a map with the tiles should be centered on by default.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LonLat"
        },
        "featureLimit": {
          "title": "featureLimit",
          "description": "Maximum number of features contained in a single tile per query.",
          "type": "number"
        },
        "minimumSizeInPixel": {
          "title": "minimumSizeInPixel",
          "description": "Features with line geometries shorter that the given value are excluded from tiles.     Features with surface geometries smaller than the square of the given value are excluded     from the tiles. The value `0.5` corresponds to half a \"pixel\" in the used coordinate     reference system.",
          "type": "number"
        },
        "ignoreInvalidGeometries": {
          "title": "ignoreInvalidGeometries",
          "description": "Ignore features with invalid geometries. Before ignoring a feature, an attempt is made     to transform the geometry to a valid geometry. The topology of geometries might be invalid     in the data source or in some cases the quantization of coordinates to integers might     render it invalid.",
          "type": "boolean"
        },
        "transformations": {
          "title": "transformations",
          "description": "Transform the selected features for a certain zoom level. Supported transformations     are: selecting a subset of feature properties (`properties`), spatial merging of features     that intersect (`merge`), with the option to restrict the operations to features with     matching attributes (`groupBy`). See the example below. For `merge`, the resulting object     will only obtain properties that are identical for all merged features.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LevelTransformation"
            }
          }
        },
        "featureProvider": {
          "title": "featureProvider",
          "description": "The id of the feature provider. By default the tile provider id without `-tiles` is     used.",
          "type": "string"
        },
        "levels": {
          "title": "levels",
          "description": "Controls the zoom levels available for each active tiling scheme as well as which zoom     level to use as default.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.LevelFilter": {
      "title": "LevelFilter",
      "description": "",
      "type": "object",
      "properties": {
        "min": {
          "title": "min",
          "description": "",
          "type": "number"
        },
        "max": {
          "title": "max",
          "description": "",
          "type": "number"
        },
        "filter": {
          "title": "filter",
          "description": "",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.TilesetFeatures": {
      "title": "TilesetFeatures",
      "description": "### Tileset       All options from [Tileset Defaults](#tileset-defaults) are also available and can be     overriden here.",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "The tileset id.",
          "type": "string"
        },
        "levels": {
          "title": "levels",
          "description": "Controls the zoom levels available for each active tiling scheme as well as which zoom     level to use as default.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        },
        "center": {
          "title": "center",
          "description": "Longitude and latitude that a map with the tiles should be centered on by default.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LonLat"
        },
        "featureProvider": {
          "title": "featureProvider",
          "description": "The id of the feature provider. By default the tile provider id without `-tiles` is     used.",
          "type": "string"
        },
        "featureLimit": {
          "title": "featureLimit",
          "description": "Maximum number of features contained in a single tile per query.",
          "type": "number"
        },
        "minimumSizeInPixel": {
          "title": "minimumSizeInPixel",
          "description": "Features with line geometries shorter that the given value are excluded from tiles.     Features with surface geometries smaller than the square of the given value are excluded     from the tiles. The value `0.5` corresponds to half a \"pixel\" in the used coordinate     reference system.",
          "type": "number"
        },
        "ignoreInvalidGeometries": {
          "title": "ignoreInvalidGeometries",
          "description": "Ignore features with invalid geometries. Before ignoring a feature, an attempt is made     to transform the geometry to a valid geometry. The topology of geometries might be invalid     in the data source or in some cases the quantization of coordinates to integers might     render it invalid.",
          "type": "boolean"
        },
        "transformations": {
          "title": "transformations",
          "description": "Transform the selected features for a certain zoom level. Supported transformations     are: selecting a subset of feature properties (`properties`), spatial merging of features     that intersect (`merge`), with the option to restrict the operations to features with     matching attributes (`groupBy`). See the example below. For `merge`, the resulting object     will only obtain properties that are identical for all merged features.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LevelTransformation"
            }
          }
        },
        "featureType": {
          "title": "featureType",
          "description": "The name of the feature type. By default the tileset id is used.",
          "type": "string"
        },
        "combine": {
          "title": "combine",
          "description": "Instead of being generated using a `featureType`, a tileset may be composed of multiple     other tilesets. Takes a list of tileset ids. A list with a single entry `*` combines all     tilesets.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "title": "filters",
          "description": "Filters to select a subset of feature for certain zoom levels using a CQL filter     expression, see example below.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LevelFilter"
            }
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.Cache": {
      "title": "Cache",
      "description": "### Cache       There are two different cache types:        - `IMMUTABLE` An immutable cache can only be created through seeding. It will only be made available once it is complete. If some or all tiles are re-seeded, then again the new version will only be made available once it is complete. In the meantime the old version is still provided to consumers.   Therefore an immutable cache is always consistent and, once the initial seeding has completed, it guarantees uninterrupted operation. - `DYNAMIC` A dynamic cache can be computed through seeding, but it will also cache matching tiles that are requested by a consumer. Tiles will be made available as soon as they are computed. If some or all tiles are re-seeded, they are deleted first.   Therefore a dynamic cache might be inconsistent and may cause client errors during (re-)seeding.            In general the usage of immutable caches is recommended. For higher zoom levels a     complementary non-seeded dynamic cache might make sense to reduce seeding time.              There are two different storage types:        - `PLAIN` Every tile is stored in a single file. This is recommended for remote storage (coming soon). - `MBTILES` Tiles are stored in a [MBTiles](https://github.com/mapbox/mbtiles-spec) file per tiling scheme. This is recommended for local storage.",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "description": "Either `IMMUTABLE` or `DYNAMIC`.",
          "type": "string"
        },
        "storage": {
          "title": "storage",
          "description": "Either `PLAIN` or `MBTILES`.",
          "type": "string"
        },
        "seeded": {
          "title": "seeded",
          "description": "Should this cache be included by the [Seeding](#seeding)?",
          "type": "boolean"
        },
        "levels": {
          "title": "levels",
          "description": "Tiling schemes and zoom levels that should be stored in the cache. Applies to all     tilesets that are not specified in `tilesetLevels`.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        },
        "tilesetLevels": {
          "title": "tilesetLevels",
          "description": "Tiling schemes and zoom levels for single tilesets that should be stored in the cache.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
            }
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.SeedingOptions": {
      "title": "SeedingOptions",
      "description": "### Seeding       Controls how and when [caches](#cache) are computed.",
      "type": "object",
      "properties": {
        "runOnStartup": {
          "title": "runOnStartup",
          "description": "If disabled the seeding will not be run when the API starts.",
          "type": "boolean"
        },
        "runPeriodic": {
          "title": "runPeriodic",
          "description": "A crontab pattern to run the seeding periodically. There will only ever be one seeding     in progress, so if the next run is scheduled before the last one finished, it will be     skipped.",
          "type": "string"
        },
        "purge": {
          "title": "purge",
          "description": "If enabled the tile cache will be purged before the seeding starts.",
          "type": "boolean"
        },
        "maxThreads": {
          "title": "maxThreads",
          "description": "The maximum number of threads the seeding is allowed to use. The actual number of     threads used depends on the number of available background task threads when the seeding is     about to start. If you want to allow more than thread, first check if sufficient background     task threads are configured. Take into account that the seeding for multiple APIs will     compete for the available background task threads.",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.TilesetHttpDefaults": {
      "title": "TilesetHttpDefaults",
      "description": "### Tileset Defaults       Defaults that are applied to each [Tileset](#tileset).",
      "type": "object",
      "properties": {
        "center": {
          "title": "center",
          "description": "Longitude and latitude that a map with the tiles should be centered on by default.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LonLat"
        },
        "encodings": {
          "title": "encodings",
          "description": "Supported tile encodings. Keys have to be one of `MVT`, `PNG`, `WebP` and `JPEG`,     values are provided as `{{fileExtension}}` in `urlTemplate`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "levels": {
          "title": "levels",
          "description": "Controls the zoom levels available for each active tiling scheme as well as which zoom     level to use as default.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.tiles.domain.TilesetHttp": {
      "title": "TilesetHttp",
      "description": "### Tileset       All options from [Tileset Defaults](#tileset-defaults) are also available and can be     overriden here.",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "The tileset id.",
          "type": "string"
        },
        "levels": {
          "title": "levels",
          "description": "Controls the zoom levels available for each active tiling scheme as well as which zoom     level to use as default.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        },
        "center": {
          "title": "center",
          "description": "Longitude and latitude that a map with the tiles should be centered on by default.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LonLat"
        },
        "encodings": {
          "title": "encodings",
          "description": "Supported tile encodings. Keys have to be one of `MVT`, `PNG`, `WebP` and `JPEG`,     values are provided as `{{fileExtension}}` in `urlTemplate`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "urlTemplate": {
          "title": "urlTemplate",
          "description": "URL template for accessing tiles. Parameters to use are `{{tileMatrix}}`,     `{{tileRow}}`, `{{tileCol}}` and `{{fileExtension}}`. Single curly braces are also allowed.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.foundation.domain.ApiMetadata": {
      "title": "ApiMetadata",
      "description": "General metadata for the API (version, contact details, license information). Supported     keys with affected resources:        - `version`: API Definition, - `contactName`: API Definition, HTML Landing Page - `contactUrl`: API Definition, HTML Landing Page - `contactEmail`: API Definition, HTML Landing Page - `contactPhone`: HTML Landing Page, - `licenseName`: API Definition, HTML Landing Page, Feature Collections, Feature Collection - `licenseUrl`: API Definition, HTML Landing Page, Feature Collections, Feature Collection - `keywords`: HTML meta tages and schema:Dataset in HTML Landing Page - `attribution`: Landing Page, maps - `creatorName`: schema:Dataset in HTML - `creatorUrl`: schema:Dataset in HTML - `creatorLogoUrl`: schema:Dataset in HTML - `publisherName`: schema:Dataset in HTML - `publisherUrl`: schema:Dataset in HTML - `publisherLogoUrl`: schema:Dataset in HTML            All values are strings, except `keywords`, which is an array of strings.",
      "type": "object",
      "properties": {
        "contactName": {
          "title": "contactName",
          "description": "Optional name of a contact person or organization for the API.",
          "type": "string"
        },
        "contactUrl": {
          "title": "contactUrl",
          "description": "Optional URL of a contact webpage for the API.",
          "type": "string"
        },
        "contactEmail": {
          "title": "contactEmail",
          "description": "Optional email address for information about the API.",
          "type": "string"
        },
        "contactPhone": {
          "title": "contactPhone",
          "description": "Optional phone number for information about the API.",
          "type": "string"
        },
        "creatorName": {
          "title": "creatorName",
          "description": "Optional name of a creator of data shared via the API.",
          "type": "string"
        },
        "creatorUrl": {
          "title": "creatorUrl",
          "description": "Optional URL of a website of the creator of data shared via the API.",
          "type": "string"
        },
        "creatorLogoUrl": {
          "title": "creatorLogoUrl",
          "description": "Optional URL of a logo bitmap image of the creator of data shared via the API.",
          "type": "string"
        },
        "publisherName": {
          "title": "publisherName",
          "description": "Optional name of the publisher of this API.",
          "type": "string"
        },
        "publisherUrl": {
          "title": "publisherUrl",
          "description": "Optional URL of a website of the publisher of this API.",
          "type": "string"
        },
        "publisherLogoUrl": {
          "title": "publisherLogoUrl",
          "description": "Optional URL of a logo bitmap image of the publisher of this API.",
          "type": "string"
        },
        "licenseName": {
          "title": "licenseName",
          "description": "Name of the license of the data shared via this API.",
          "type": "string"
        },
        "licenseUrl": {
          "title": "licenseUrl",
          "description": "URL of the license of the data shared via this API.",
          "type": "string"
        },
        "keywords": {
          "title": "keywords",
          "description": "Keywords describing this API.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "title": "version",
          "description": "Version for this API in the OpenAPI definition.",
          "type": "string"
        },
        "attribution": {
          "title": "attribution",
          "description": "Attribution text for data shared via this API, e.g., for display in maps.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.foundation.domain.ExternalDocumentation": {
      "title": "ExternalDocumentation",
      "description": "External document with additional information about this API, the `url` key is required,     the `description` key is recommended.",
      "type": "object",
      "properties": {
        "description": {
          "title": "description",
          "description": "Description of the content of the document or website.",
          "type": "string"
        },
        "url": {
          "title": "url",
          "description": "URL of the document or website.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.xtraplatform.crs.domain.BoundingBox": {
      "title": "BoundingBox",
      "description": "",
      "type": "object",
      "properties": {
        "xmin": {
          "title": "xmin",
          "description": "",
          "type": "number"
        },
        "ymin": {
          "title": "ymin",
          "description": "",
          "type": "number"
        },
        "zmin": {
          "title": "zmin",
          "description": "",
          "type": "number"
        },
        "xmax": {
          "title": "xmax",
          "description": "",
          "type": "number"
        },
        "ymax": {
          "title": "ymax",
          "description": "",
          "type": "number"
        },
        "zmax": {
          "title": "zmax",
          "description": "",
          "type": "number"
        },
        "epsgCrs": {
          "title": "epsgCrs",
          "description": "",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.crs.domain.EpsgCrs"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.foundation.domain.TemporalExtent": {
      "title": "TemporalExtent",
      "description": "",
      "type": "object",
      "properties": {
        "start": {
          "title": "start",
          "description": "",
          "type": "number"
        },
        "end": {
          "title": "end",
          "description": "",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.foundation.domain.CollectionExtent": {
      "title": "CollectionExtent",
      "description": "By default, spatial and temporal extents of the collections are derived from the data     during startup. The extent of the dataset is always the union of the collection extents. For     large datasets the automated derivation will slow down the startup of the API.       If the spatial extent should not be derived from the data source on startup, set     `spatialComputed` to `false`.       If the temporal extent should not be derived from the data source on startup, set     `temporalComputed` to `false`.       As an alternative, a default value for the spatial (`spatial`) and/or temporal     (`temporal`) extent for each collection can be set.        - Required keys for spatial extents (all values in `CRS84`): `xmin` (western longitude), `ymin` (southern latitude), `xmax` (eastern longitude), `ymax` (northern latitude). - Required keys for temporal extents (all values in milliseconds since 1 January 1970): `start`, `end`.",
      "type": "object",
      "properties": {
        "spatial": {
          "title": "spatial",
          "description": "West- and east-bound longitude (`xmin`, `xmax`), south- and north-bound latitude     (`ymin`, `ymax`) of the data. Optionally, minimum and maximum elevation (`zmin`, `zmax`)     can be provided, too.",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.crs.domain.BoundingBox"
        },
        "spatialComputed": {
          "title": "spatialComputed",
          "description": "The spatial extent of each collection is automatically dervied from the data during the     startup of the API. If the collection has no temporal properties, the collection will not     have a temporal extent.",
          "type": "boolean"
        },
        "temporal": {
          "title": "temporal",
          "description": "`start` and `end` of the temporal extent of the data, specified as a RFC 3339 string in     UTC. Unspecified values indicate an unbounded interval end.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.TemporalExtent"
        },
        "temporalComputed": {
          "title": "temporalComputed",
          "description": "The temporal extent of each collection is automatically dervied from the data during     the startup of the API. If the collection has no temporal properties, the collection will     not have a temporal extent.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.foundation.domain.Caching": {
      "title": "Caching",
      "description": "",
      "type": "object",
      "properties": {
        "lastModified": {
          "title": "lastModified",
          "description": "For the resources in the building block, the `Last-Modified` header is set to the     configured value. The value overrides any modification time determined from the resource.",
          "type": "string"
        },
        "expires": {
          "title": "expires",
          "description": "For the resources in the building block, the `Expires` header is set to the configured     value.",
          "type": "string"
        },
        "cacheControl": {
          "title": "cacheControl",
          "description": "For the resources in the building block, the `Cache-Control` header is set to the     configured value. Exception are the *Features* and *Feature* resources, where     `cacheControlItems` is to be used.",
          "type": "string"
        },
        "cacheControlItems": {
          "title": "cacheControlItems",
          "description": "For the *Features* und *Feature* resources in the building block, the `Cache-Control`     header is set to the configured value.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.foundation.domain.ApiSecurity": {
      "title": "ApiSecurity",
      "description": "Access control for all API operations (combination of endpoint and HTTP method).       The control mechanism is based on scopes, currently only two exist:        - `write`: every operation with HTTP method `POST`, `PUT`, `PATCH` or `DELETE` - `read`: any other operation            To support authenticated users, a bearer token has to be included in the `Authorization`     header in requests to the API. Validation and evaluation of these tokens has to be configured     in the [global configuration](../application/70-reference.md).",
      "type": "object",
      "properties": {
        "enabled": {
          "title": "enabled",
          "description": "Option to disable access control.",
          "type": "boolean"
        },
        "publicScopes": {
          "title": "publicScopes",
          "description": "List of permissions that every user possesses, if authenticated or not.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.foundation.domain.Link": {
      "title": "Link",
      "description": "",
      "type": "object",
      "properties": {
        "rel": {
          "title": "rel",
          "description": "",
          "type": "string"
        },
        "type": {
          "title": "type",
          "description": "",
          "type": "string"
        },
        "anchor": {
          "title": "anchor",
          "description": "",
          "type": "string"
        },
        "title": {
          "title": "title",
          "description": "",
          "type": "string"
        },
        "href": {
          "title": "href",
          "description": "",
          "type": "string"
        },
        "hreflang": {
          "title": "hreflang",
          "description": "",
          "type": "string"
        },
        "length": {
          "title": "length",
          "description": "",
          "type": "number"
        },
        "templated": {
          "title": "templated",
          "description": "",
          "type": "boolean"
        },
        "var-base": {
          "title": "var-base",
          "description": "",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.collections.domain.CollectionsConfiguration": {
      "title": "CollectionsConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `COLLECTIONS`.",
          "type": "string",
          "const": "COLLECTIONS"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "COLLECTIONS"
        },
        "caching": {
          "title": "caching",
          "description": "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "additionalLinks": {
          "title": "additionalLinks",
          "description": "Add additional links to the *Collections* resource. The value is an array of link     objects. Required properties of a link are a URI (`href`), a label (`label`) and a relation     (`rel`).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Link"
          }
        },
        "collectionIdAsParameter": {
          "title": "collectionIdAsParameter",
          "description": "Controls whether each feature collection and subresource is listed as a single resource     in the API definition (`false`), or whether a path parameter `collectionId` is used and     each resource is specified only once in the definition (`true`). With `true` the API     definition becomes simpler and shorter, but the schema is no longer collection-specific and     collection-specific query parameters can no longer be specified in the API definition.",
          "type": "boolean"
        },
        "collectionDefinitionsAreIdentical": {
          "title": "collectionDefinitionsAreIdentical",
          "description": "If in the case of `collectionIdAsParameter: true` all collections have a structurally     identical schema and the same queryables, the value `true` can be used to control that in     the API definition schema and queryables are determined from any collection.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.collections.queryables.domain.QueryablesConfiguration": {
      "title": "QueryablesConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `QUERYABLES`.",
          "type": "string",
          "const": "QUERYABLES"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "QUERYABLES"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "caching": {
          "title": "caching",
          "description": "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "included": {
          "title": "included",
          "description": "The list of properties that can be used in CQL2 filter expressions and/or for which     filtering query parameters are provided for a collection. Properties that are not of type     `OBJECT` or `OBJECT_ARRAY` are eligible as queryables unless `isQueryable` is set to     `false` for the property. The special value `*` includes all eligible properties as     queryables. By default, no property is queryable (this is for backwards compatibility, in     v4.0 the default behaviour will change to all eligible properties).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excluded": {
          "title": "excluded",
          "description": "The list of properties that would be queryables based on `included`, but which should     not be queryables.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pathSeparator": {
          "title": "pathSeparator",
          "description": "The character that is used as the path separator in case of object-valued properties.     Either `DOT` or `UNDERSCORE`.",
          "type": "string"
        },
        "enableEndpoint": {
          "title": "enableEndpoint",
          "description": "If `true`, the Queryables endpoint will be enabled.",
          "type": "boolean"
        },
        "asQueryParameters": {
          "title": "asQueryParameters",
          "description": "If `true`, all queryables with a simple value (string, number or boolean) will be     provided query parameters to filter features.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.common.domain.CommonConfiguration": {
      "title": "CommonConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `COMMON`.",
          "type": "string",
          "const": "COMMON"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "COMMON"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "caching": {
          "title": "caching",
          "description": "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "additionalLinks": {
          "title": "additionalLinks",
          "description": "Add additional links to the *Landing Page* resource. The value is an array of link     objects. Required properties of a link are a URI (`href`), a label (`label`) and a relation     (`rel`).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Link"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.crs.domain.CrsConfiguration": {
      "title": "CrsConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `CRS`.",
          "type": "string",
          "const": "CRS"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "CRS"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "additionalCrs": {
          "title": "additionalCrs",
          "description": "Lists additional coordinate reference systems to be supported in the API or for a     feature collection. The native coordinate reference system of the data and the default     coordinate reference system of the API are automatically enabled. Coordinate reference     systems are identified by their EPSG code (`code`). Additionally, the order of the     coordinate axes must be specified in `forceAxisOrder` (`NONE`: as in the coordinate     reference system, `LON_LAT` or `LAT_LON`: the order in the coordinate reference system is     ignored and the specified order is used).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.crs.domain.EpsgCrs"
          }
        },
        "suppressGlobalCrsList": {
          "title": "suppressGlobalCrsList",
          "description": "If `true`, the coordinate reference systems will be included in every Collection     resource that is embedded in the Collections resource. The global `crs` array will not be     used or referenced. Use this option, if the API is intended to be used with a client that     does not support the global `crs` array.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.cityjson.domain.CityJsonConfiguration": {
      "title": "CityJsonConfiguration",
      "description": "### Prerequisites       The module requires that the feature provider includes a type `building` that is mapped to     a CityJSON Building feature. Properties of the type `building` are mapped to CityJSON as     follows:        - `consistsOfBuildingPart`: The value must be an object with the same properties as `building`.   The object is encoded as a BuildingPart feature of the Building feature. - `address`: The value must be an array of address objects. The following attributes are mapped   to an Address object, all other properties are ignored:   - `multiPoint`: a  MULTI_POINT geometry representing the address location   - `ThoroughfareName`: a string   - `ThoroughfareNumber`: a string   - `LocalityName`: a string   - `PostalCode`: a string   - `AdministrativeArea`: a string   - `CountryName`: a string - `lod1Solid`: a closed MULTI_POLYGON geometry that represents the shell of the building at LoD 1. - `lod2Solid`: a closed MULTI_POLYGON geometry that represents the shell of the building at LoD 2. - `surfaces`: an array of semantic surface objects. The object must have a `surfaceType` and the   values must be one of the following: `CeilingSurface`, `ClosureSurface`, `Door`, `FloorSurface`,   `GroundSurface`, `InteriorWallSurface`, `OuterCeilingSurface`, `OuterFloorSurface`, `RoofSurface`,   `WallSurface`, or `Window`. The object should have a property with a POLYGON or MULTI_POLYGON   geometry that represents the surface geometry. - all other properties: The property will be mapped to a CityJSON attribute, except for `gml_id` properties.            The property of the `building` with the role `ID` will be used as the CityJSON id. Since     the embedded building parts do not have a property with a role `ID`, the building part     feature must have a unique property `id`, which will be used as the id of the CityJSON     building part.       The [example](#examples) includes a sample type definition for the building features in a     PostgreSQL feature provider based on the CityGML profile of the German surveying and mapping     authorities.",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `CITY_JSON`.",
          "type": "string",
          "const": "CITY_JSON"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "CITY_JSON"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "transformations": {
          "title": "transformations",
          "description": "[Property transformations](../../providers/details/transformations.md) do not affect     data sources, they are applied on-the-fly as part of the encoding. Filter expressions do     not take transformations into account, they have to be based on the source values. That     means queryable properties (see `queryables` in [Features](features.md)) should not use     transformations in most cases. The exception to the rule is the HTML encoding, where     readability might be more important than filter support.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.features.domain.transform.PropertyTransformation"
            }
          }
        },
        "textSequences": {
          "title": "textSequences",
          "description": "Enables support for CityJSON text sequences (media type `application/city+json-seq`).     Requires version 1.1 or later.",
          "type": "boolean"
        },
        "version": {
          "title": "version",
          "description": "Select the CityJSON version that should be returned. Supported versions are `V10`     (CityJSON 1.0) and `V11` (CityJSON 1.1).",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.core.domain.FeaturesCollectionQueryables": {
      "title": "FeaturesCollectionQueryables",
      "description": "",
      "type": "object",
      "properties": {
        "spatial": {
          "title": "spatial",
          "description": "",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "string"
          }
        },
        "temporal": {
          "title": "temporal",
          "description": "",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "string"
          }
        },
        "q": {
          "title": "q",
          "description": "",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "string"
          }
        },
        "other": {
          "title": "other",
          "description": "",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.core.domain.FeaturesCoreConfiguration": {
      "title": "FeaturesCoreConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `FEATURES_CORE`.",
          "type": "string",
          "const": "FEATURES_CORE"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "FEATURES_CORE"
        },
        "transformations": {
          "title": "transformations",
          "description": "[Property transformations](../../providers/details/transformations.md) do not affect     data sources, they are applied on-the-fly as part of the encoding. Filter expressions do     not take transformations into account, they have to be based on the source values. That     means queryable properties (see `queryables` in [Features](features.md)) should not use     transformations in most cases. The exception to the rule is the HTML encoding, where     readability might be more important than filter support.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.features.domain.transform.PropertyTransformation"
            }
          }
        },
        "caching": {
          "title": "caching",
          "description": "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "featureProvider": {
          "title": "featureProvider",
          "description": "Id of the feature provider to use. Normally the feature provider and API ids are the     same.",
          "type": "string"
        },
        "featureType": {
          "title": "featureType",
          "description": "Id of the feature type to use as defined in the given feature provider. Normally the     feature type and collection ids are the same.",
          "type": "string"
        },
        "": {
          "title": "",
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultCrs": {
          "title": "defaultCrs",
          "description": "Default coordinate reference system, either `CRS84` for datasets with 2D geometries or     `CRS84h` for datasets with 3D geometries.",
          "type": "string"
        },
        "minimumPageSize": {
          "title": "minimumPageSize",
          "description": "Minimum value for parameter `limit`.",
          "type": "number"
        },
        "defaultPageSize": {
          "title": "defaultPageSize",
          "description": "Default value for parameter `limit`.",
          "type": "number"
        },
        "maximumPageSize": {
          "title": "maximumPageSize",
          "description": "Maximum value for parameter `limit`.",
          "type": "number"
        },
        "embeddedFeatureLinkRels": {
          "title": "embeddedFeatureLinkRels",
          "description": "Controls which links should be specified for each feature in the Features resource, if     these exist. The values are the link relation types to be included. By default, links such     as `self` or `alternate` are omitted from features in a FeatureCollection, this option can     be used to add them if needed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "showsFeatureSelfLink": {
          "title": "showsFeatureSelfLink",
          "description": "Always add `self` link to features, even in the *Features* resource.",
          "type": "boolean",
          "deprecated": true
        },
        "validateCoordinatesInQueries": {
          "title": "validateCoordinatesInQueries",
          "description": "Validate the coordinates of the bbox or filter parameters against the domain of validity of the  coordinate reference system",
          "type": "boolean"
        },
        "itemType": {
          "title": "itemType",
          "description": "",
          "type": "string"
        },
        "queryables": {
          "title": "queryables",
          "description": "*Deprecated* Use [Module Feature Collections -     Queryables](collections_-_queryables.md). Controls which of the attributes in queries can     be used for filtering data. A distinction is made between spatial (`spatial`), temporal     (`temporal`) and \"regular\" (`q`, `other`) attributes. The attributes under `spatial` must     be of type `GEOMETRY` in the provider schema, the attributes under `temporal` of type     `DATETIME` or `DATE`. The searchable attributes are each listed by their name in an array.     The queryables can be used in filter expressions ([building block \"filter\"](filter.md)).     The primary spatial and temporal attributes (see provider configuration) can be used for     selection via the [parameters     `bbox`](https://docs.ogc.org/is/17-069r4/17-069r4.html#_parameter_bbox) and [parameters     `datetime`](https://docs.ogc.org/is/17-069r4/17-069r4.html#_parameter_datetime),     respectively. The remaining attributes are defined as [additional parameters for the     respective feature     collections](https://docs.ogc.org/is/17-069r4/17-069r4.html#_parameters_for_filtering_on_feature_properties)     (\"*\" can be used as wildcard). In this way a selection of objects is already possible     without additional building blocks. The attributes under `q` are also taken into account in     the free text search in the query parameter with the same name.",
          "type": "object",
          "deprecated": true,
          "$ref": "#/$defs/de.ii.ogcapi.features.core.domain.FeaturesCollectionQueryables"
        },
        "coordinatePrecision": {
          "title": "coordinatePrecision",
          "description": "Controls whether coordinates are limited to a certain number of places depending on the     coordinate reference system used. The unit of measurement and the corresponding number of     decimal places must be specified. Example: `{ \"metre\" : 2, \"degree\" : 7 }`. Valid units of     measurement are \"metre\" and \"degree\".",
          "type": "object",
          "additionalProperties": {
            "type": "number"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.geojson.domain.GeoJsonConfiguration": {
      "title": "GeoJsonConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `GEO_JSON`.",
          "type": "string",
          "const": "GEO_JSON"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "GEO_JSON"
        },
        "transformations": {
          "title": "transformations",
          "description": "[Property transformations](../../providers/details/transformations.md) do not affect     data sources, they are applied on-the-fly as part of the encoding. Filter expressions do     not take transformations into account, they have to be based on the source values. That     means queryable properties (see `queryables` in [Features](features.md)) should not use     transformations in most cases. The exception to the rule is the HTML encoding, where     readability might be more important than filter support.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.features.domain.transform.PropertyTransformation"
            }
          }
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "nestedObjectStrategy": {
          "title": "nestedObjectStrategy",
          "description": "*Deprecated* Use the [`flatten`     transformation](../../providers/details/transformations.md) instead.",
          "type": "string",
          "deprecated": true
        },
        "multiplicityStrategy": {
          "title": "multiplicityStrategy",
          "description": "*Deprecated* Use the [`flatten`     transformation](../../providers/details/transformations.md) instead.",
          "type": "string",
          "deprecated": true
        },
        "useFormattedJsonOutput": {
          "title": "useFormattedJsonOutput",
          "description": "",
          "type": "boolean",
          "deprecated": true
        },
        "separator": {
          "title": "separator",
          "description": "*Deprecated* Use the [`flatten`     transformation](../../providers/details/transformations.md) instead.",
          "type": "string",
          "deprecated": true
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.gml.domain.VariableName": {
      "title": "VariableName",
      "description": "",
      "type": "object",
      "properties": {
        "property": {
          "title": "property",
          "description": "",
          "type": "string"
        },
        "mapping": {
          "title": "mapping",
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.gml.domain.GmlConfiguration": {
      "title": "GmlConfiguration",
      "description": "By default, every GML property element will receive the property name from the feature     schema. That is, the element will be in the default namespace. A different name can be set     using the `rename` transformation, which can be used to change the name, but also supports to     add a namespace prefix.",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `GML`.",
          "type": "string",
          "const": "GML"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "GML"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "transformations": {
          "title": "transformations",
          "description": "[Property transformations](../../providers/details/transformations.md) do not affect     data sources, they are applied on-the-fly as part of the encoding. Filter expressions do     not take transformations into account, they have to be based on the source values. That     means queryable properties (see `queryables` in [Features](features.md)) should not use     transformations in most cases. The exception to the rule is the HTML encoding, where     readability might be more important than filter support.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.features.domain.transform.PropertyTransformation"
            }
          }
        },
        "gmlVersion": {
          "title": "gmlVersion",
          "description": "Selects the GML version to use: `GML32` for GML 3.2, `GML31` for GML 3.1 and `GML21`     for GML 2.1.",
          "type": "string"
        },
        "gmlSfLevel": {
          "title": "gmlSfLevel",
          "description": "The default `null` declares that the GML support does not meet all requirements of the     *Geography Markup Language (GML), Simple Features Profile, Level 0* or the *Geography     Markup Language (GML), Simple Features Profile, Level 2* conformance classes from [OGC API     - Features - Part 1: Core 1.0](https://docs.ogc.org/is/17-069r4/17-069r4.html#rc_gmlsf0).       If the value is set to `0`, `1` or `2`, the conformance will be declared in the     *Conformance Declaration* resource.       If for a collection from a SQL feature provider a root element different to     `sf:FeatureCollection` is configured in `featureCollectionElementName`, the value will be     ignored and no conformance to a GML conformance class will be declared.",
          "type": "number"
        },
        "conformance": {
          "title": "conformance",
          "description": "",
          "type": "string"
        },
        "applicationNamespaces": {
          "title": "applicationNamespaces",
          "description": "Every XML element will have and XML attribute can have an XML namespace. To improve     readability of the XML documents, a namespace prefix is declared for every namespace.       Common namespaces and prefixes are pre-defined, these are: `gml` (GML 3.2), `xlink`     (XLink), `xml` (XML), `sf` (OGC API Features Core 1.0, Core-SF), `wfs` (WFS 2.0), and `xsi`     (XML Schema Information).       Additional namespaces that are used in the data (declared in GML application schemas and     imported schemas), the namespaces are configured with their prefixes. Since feature data     will always use elements in application-schema-specific namespaces, this confirguration     parameter will always need to be specified.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "defaultNamespace": {
          "title": "defaultNamespace",
          "description": "A default namespace that is used for XML elements, if no other namespace is specified,     can be specified with this configuration parameter. The value will be the namespace prefix.     It must be either a pre-defined prefix or a prefix declared in `applicationNamespaces`.     This namespace will be declared as the default namespace of the XML document.",
          "type": "string"
        },
        "schemaLocations": {
          "title": "schemaLocations",
          "description": "If any application namespace should be included in the `xsi:schemaLocation` attribute     of the root element, the document URIs have to be provided.       In addition, the schema location of the namespace of the root element will be added, if     known. For the pre-defined namespaces (`gml`, `sf` and `wfs`), the canonical schema     location in the OGC schema repository will be used unless another schema location for the     namespace is configured.       Note that to meet XML Schema validation requirements, the namespace of the root element     must be declared in the `xsi:schemaLocation` attribute, even if the namespace is imported     by another schema.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "objectTypeNamespaces": {
          "title": "objectTypeNamespaces",
          "description": "All object/data type instances are represented through a GML object element.       In the provider schema, a name must be provided for each OBJECT in the `objectType`     property, including for the feature type itself. By default, this name will be used for the     unqualified name of the GML object element.       If the GML object element is not in the default namespace, this configuration parameter     assigns a namespace prefix to an object type.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "variableObjectElementNames": {
          "title": "variableObjectElementNames",
          "description": "There may also be cases, in particular when inheritance is used in the underlying     application schema, where multiple object types are represented in the same table with an     attribute that specifies the name of the feature/object type. This configuration parameter     provides the capability to identify these properties and map the values to qualified names     for the GML object element. In the example, `_type` is the feature property with three     different values mapped to the qualified element name.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.features.gml.domain.VariableName"
          }
        },
        "featureCollectionElementName": {
          "title": "featureCollectionElementName",
          "description": "Various feature collection elements are in use and sometimes additional ones are     specified in GML application schemas. The default is `sf:FeatureCollection` as specified by     OGC API Features. This configuration parameter provides a capability to use a different     feature collection element.",
          "type": "string"
        },
        "featureMemberElementName": {
          "title": "featureMemberElementName",
          "description": "The feature collection element referenced in `featureCollectionElementName` has a child     property element that contains each feature. The default is `sf:featureMember` as specified     by OGC API Features. This configuration parameter provides a capability to declare the     element name for the feature collection element.",
          "type": "string"
        },
        "supportsStandardResponseParameters": {
          "title": "supportsStandardResponseParameters",
          "description": "The feature collection element referenced in `featureCollectionElementName` may support     the WFS 2.0 standard response parameters (`timeStamp`, `numberMatched`, `numberReturned`).     This configuration parameter controls whether the attributes are included in the feature     collection element as XML attributes.",
          "type": "boolean"
        },
        "xmlAttributes": {
          "title": "xmlAttributes",
          "description": "Properties are by default represented as the XML child element (GML property element)     of the XML element representing the object (GML object element). Alternatively, the     property can be represented as an XML attribute of the parent GML object element. This is     only possible for properties of type STRING, FLOAT, INTEGER, or BOOLEAN.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gmlIdPrefix": {
          "title": "gmlIdPrefix",
          "description": "The feature property with role `ID` in the provider schema is mapped to the `gml:id`     attribute of the feature. These properties must be a direct property of the feature type.       If the values violate the rule for XML IDs, e.g., if they can start with a digit, this     configuration parameter can be used to add a consistent prefix to map all values to valid     XML IDs.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.html.domain.FeaturesHtmlConfiguration": {
      "title": "FeaturesHtmlConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `FEATURES_HTML`.",
          "type": "string",
          "const": "FEATURES_HTML"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "FEATURES_HTML"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "layout": {
          "title": "layout",
          "description": "*Deprecated* Superseded by `mapPosition` and the [`flattern`     transformation](../../providers/details/transformations.md).",
          "type": "string",
          "deprecated": true
        },
        "mapPosition": {
          "title": "mapPosition",
          "description": "Can be `TOP`, `RIGHT` or `AUTO`. `AUTO` is the default, it chooses `TOP` when any     nested objects are found and `RIGHT` otherwise.",
          "type": "string"
        },
        "featureTitleTemplate": {
          "title": "featureTitleTemplate",
          "description": "Define how the feature label for HTML is formed. Default is the feature id. Property     names in double curly braces will be replaced with the corresponding value.",
          "type": "string"
        },
        "itemLabelFormat": {
          "title": "itemLabelFormat",
          "description": "*Deprecated* See `featureTitleTemplate`.",
          "type": "string",
          "deprecated": true
        },
        "transformations": {
          "title": "transformations",
          "description": "Optional transformations for feature properties for HTML, see     [transformations](README.md#transformations).",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.features.domain.transform.PropertyTransformation"
            }
          }
        },
        "mapClientType": {
          "title": "mapClientType",
          "description": "The map client library to use to display features in the HTML representation. The     default is MapLibre GL (`MAP_LIBRE`). Cesium (`CESIUM`) can be used for displaying 3D     features on a globe, if [Features - glTF](features_-_gltf.md) is enabled.",
          "type": "string"
        },
        "style": {
          "title": "style",
          "description": "An optional style in the style repository to use for the map in the HTML representation     of a feature or feature collection. The style should render all data. If set to `DEFAULT`,     the `defaultStyle` configured in the [HTML configuration](html.md) is used. If the map     client is MapLibre, the style must be available in the Mapbox format. If the style is set     to `NONE`, a simple wireframe style will be used with OpenStreetMap as a basemap. If the     map client is Cesium, the style must be available in the 3D Tiles format. If the style is     set to `NONE`, the standard 3D Tiles styling is used.",
          "type": "string"
        },
        "removeZoomLevelConstraints": {
          "title": "removeZoomLevelConstraints",
          "description": "If `true`, any `minzoom` or `maxzoom` members are removed from the GeoJSON layers. The     value is ignored, if the map client is not MapLibre or `style` is `NONE`.",
          "type": "boolean"
        },
        "geometryProperties": {
          "title": "geometryProperties",
          "description": "This option works only for CesiumJS as map client. By default, the geometry identified     in the provider as PRIMARY_GEOMETRY is used for representation on the map. This option     allows multiple geometry properties to be specified in a list. The first geometry property     set for a feature will be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maximumPageSize": {
          "title": "maximumPageSize",
          "description": "This option can be used to set a custom maximum value for the `limit` parameter for the     HTML output. If no value is specified, the value from the Features Core module applies.     When using CesiumJS as a map client, a value of 100 is recommended.",
          "type": "number"
        },
        "propertyTooltips": {
          "title": "propertyTooltips",
          "description": "If `true`, on the single item page any property that has a description in the provider     schema will get an info icon with the description as a tooltip.",
          "type": "boolean"
        },
        "propertyTooltipsOnItems": {
          "title": "propertyTooltipsOnItems",
          "description": "If `true`, on the items page any property that has a description in the provider schema     will get an info icon with the description in a tooltip.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.foundation.domain.FoundationConfiguration": {
      "title": "FoundationConfiguration",
      "description": "Provides base functionality for all other modules and therefore cannot be disabled.",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `FOUNDATION`.",
          "type": "string",
          "const": "FOUNDATION"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "FOUNDATION"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "useLangParameter": {
          "title": "useLangParameter",
          "description": "Support query parameter `lang` to set the desired response language.",
          "type": "boolean"
        },
        "includeLinkHeader": {
          "title": "includeLinkHeader",
          "description": "Return links contained in API responses also as [HTTP     header](https://docs.ogc.org/is/17-069r4/17-069r4.html#_link_headers).",
          "type": "boolean"
        },
        "apiCatalogLabel": {
          "title": "apiCatalogLabel",
          "description": "Title for resource *API Catalog*.",
          "type": "string"
        },
        "apiCatalogDescription": {
          "title": "apiCatalogDescription",
          "description": "Description for resource *API Catalog*. May contain HTML elements.",
          "type": "string"
        },
        "googleSiteVerification": {
          "title": "googleSiteVerification",
          "description": "If set, the value is embedded in the HTML page of the API catalog resource in a     \"googleSiteVerification\" meta tag (`\u003cmeta name\u003d\"`google-site-verification`\" content\u003d\"{value}\" \u003e).",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.foundation.domain.ApiCatalogEntry": {
      "title": "ApiCatalogEntry",
      "description": "",
      "type": "object",
      "properties": {
        "title": {
          "title": "title",
          "description": "",
          "type": "string"
        },
        "description": {
          "title": "description",
          "description": "",
          "type": "string"
        },
        "links": {
          "title": "links",
          "description": "",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Link"
          }
        },
        "id": {
          "title": "id",
          "description": "",
          "type": "string"
        },
        "landingPageUri": {
          "title": "landingPageUri",
          "description": "",
          "type": "string"
        },
        "tags": {
          "title": "tags",
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isDataset": {
          "title": "isDataset",
          "description": "",
          "type": "boolean"
        },
        "extensions": {
          "title": "extensions",
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.html.domain.HtmlConfiguration": {
      "title": "HtmlConfiguration",
      "description": "### Custom Templates       The HTML encoding is implemented using [Mustache templates](https://mustache.github.io/).     Custom templates are supported, they have to reside in the data directory under the relative     path `templates/html/{templateName}.mustache`, where `{templateName}` equals the name of a     default template (see [source code on     GitHub](https://github.com/search?q\u003drepo%3Ainteractive-instruments%2Fldproxy+extension%3Amustache\u0026type\u003dCode)).",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `HTML`.",
          "type": "string",
          "const": "HTML"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "HTML"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "noIndexEnabled": {
          "title": "noIndexEnabled",
          "description": "Set `noIndex` for all sites to prevent search engines from indexing.",
          "type": "boolean"
        },
        "schemaOrgEnabled": {
          "title": "schemaOrgEnabled",
          "description": "Enable [schema.org](https://schema.org) annotations for all sites, which are used e.g.     by search engines. The annotations are embedded as JSON-LD.",
          "type": "boolean"
        },
        "microdataEnabled": {
          "title": "microdataEnabled",
          "description": "*Deprecated* See `schemaOrgEnabled`.",
          "type": "boolean",
          "deprecated": true
        },
        "collectionDescriptionsInOverview": {
          "title": "collectionDescriptionsInOverview",
          "description": "Show collection descriptions in the HTML representation of the *Feature Collections*     resource.",
          "type": "boolean"
        },
        "suppressEmptyCollectionsInOverview": {
          "title": "suppressEmptyCollectionsInOverview",
          "description": "Suppress collections without items in the HTML representation of the *Feature     Collections* resource.",
          "type": "boolean"
        },
        "sendEtags": {
          "title": "sendEtags",
          "description": "",
          "type": "boolean"
        },
        "legalName": {
          "title": "legalName",
          "description": "Label for optional legal notice link on every site.",
          "type": "string"
        },
        "legalUrl": {
          "title": "legalUrl",
          "description": "URL for optional legal notice link on every site.",
          "type": "string"
        },
        "privacyName": {
          "title": "privacyName",
          "description": "Label for optional privacy notice link on every site.",
          "type": "string"
        },
        "privacyUrl": {
          "title": "privacyUrl",
          "description": "URL for optional privacy notice link on every site.",
          "type": "string"
        },
        "defaultStyle": {
          "title": "defaultStyle",
          "description": "A default style in the style repository that is used in maps in the HTML representation     of the feature and tile resources. If `NONE`, a simple wireframe style will be used with     OpenStreetMap as a basemap, if the map client is MapLibre; for Cesium, the default 3D Tiles     styling will be used with the basemap. If the value is not `NONE` and the map client is     MapLibre, the API landing page (or the collection page) will also contain a link to a web     map with the style for the dataset (or the collection).",
          "type": "string"
        },
        "basemapUrl": {
          "title": "basemapUrl",
          "description": "URL template for background map tiles.",
          "type": "string"
        },
        "basemapAttribution": {
          "title": "basemapAttribution",
          "description": "Source attribution for background map.",
          "type": "string"
        },
        "leafletUrl": {
          "title": "leafletUrl",
          "description": "*Deprecated* See `basemapUrl`.",
          "type": "string",
          "deprecated": true
        },
        "leafletAttribution": {
          "title": "leafletAttribution",
          "description": "*Deprecated* See `basemapAttribution`.",
          "type": "string",
          "deprecated": true
        },
        "openLayersUrl": {
          "title": "openLayersUrl",
          "description": "*Deprecated* See `basemapUrl`.",
          "type": "string",
          "deprecated": true
        },
        "openLayersAttribution": {
          "title": "openLayersAttribution",
          "description": "*Deprecated* See `basemapAttribution`",
          "type": "string",
          "deprecated": true
        },
        "footerText": {
          "title": "footerText",
          "description": "Additional text shown in footer of every site.",
          "type": "string"
        },
        "additionalApis": {
          "title": "additionalApis",
          "description": "",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.ApiCatalogEntry"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.json.domain.JsonConfiguration": {
      "title": "JsonConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `JSON`.",
          "type": "string",
          "const": "JSON"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "JSON"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.oas30.domain.Oas30Configuration": {
      "title": "Oas30Configuration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `OAS30`.",
          "type": "string",
          "const": "OAS30"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "OAS30"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.tilematrixsets.domain.TileMatrixSetsConfiguration": {
      "title": "TileMatrixSetsConfiguration",
      "description": "### Custom Tiling Schemes       Additional tiling schemes can be configured as JSON files according to the [OGC Two     Dimensional Tile Matrix Set and Tile Set Metadata 2.0     Standard](https://docs.ogc.org/is/17-083r4/17-083r4.html) in the data directory at     `api-resources/tile-matrix-sets/{tileMatrixSetId}.json`.",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `TILE_MATRIX_SETS`.",
          "type": "string",
          "const": "TILE_MATRIX_SETS"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "TILE_MATRIX_SETS"
        },
        "caching": {
          "title": "caching",
          "description": "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "includePredefined": {
          "title": "includePredefined",
          "description": "The list of pre-defined tile matrix sets that are included in the API. All tile matrix     sets used by a tile provider of the API are automatically added to the list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.tiles.domain.TileProviderMbtiles": {
      "title": "TileProviderMbtiles",
      "description": "With this tile provider, the tiles are provided via an [MBTiles     file](https://github.com/mapbox/mbtiles-spec). The tile format and all other properties of     the tileset resource are derived from the contents of the MBTiles file. Only the     \"WebMercatorQuad\" tiling scheme is supported.",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "description": "Fixed value, identifies the tile provider type.",
          "type": "string",
          "const": "MBTILES"
        },
        "filename": {
          "title": "filename",
          "description": "Filename of the MBTiles file in the `api-resources/tiles/{apiId}` directory.",
          "type": "string",
          "deprecated": true
        },
        "tileMatrixSetId": {
          "title": "tileMatrixSetId",
          "description": "Tiling scheme used in the MBTiles file.",
          "type": "string",
          "deprecated": true
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.tiles.domain.TileProviderFeatures": {
      "title": "TileProviderFeatures",
      "description": "In this tile provider, the tiles in Mapbox Vector Tiles format are derived from the     features provided by the API in the area of the tile.",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "description": "Fixed value, identifies the tile provider type.",
          "type": "string",
          "const": "FEATURES"
        },
        "tileEncodings": {
          "title": "tileEncodings",
          "description": "Controls which formats should be supported for the tiles. Currently only Mapbox Vector     Tiles (\"MVT\") is available.",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "string"
          }
        },
        "zoomLevels": {
          "title": "zoomLevels",
          "description": "Controls the zoom levels available for each active tiling scheme as well as which zoom     level to use as default.",
          "type": "object",
          "deprecated": true,
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        },
        "zoomLevelsCache": {
          "title": "zoomLevelsCache",
          "description": "Zoom levels for which tiles are cached.",
          "type": "object",
          "deprecated": true,
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        },
        "seedingOptions": {
          "title": "seedingOptions",
          "description": "Controls how and when tiles are precomputed, see [Seeding options](#seeding-options).",
          "type": "object",
          "deprecated": true,
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.SeedingOptions"
        },
        "seeding": {
          "title": "seeding",
          "description": "Zoom levels per enabled tile encoding for which the tile cache should be seeded on     startup.",
          "type": "object",
          "deprecated": true,
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        },
        "filters": {
          "title": "filters",
          "description": "Filters to select a subset of feature for certain zoom levels using a CQL filter     expression, see example below.",
          "type": "object",
          "deprecated": true,
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LevelFilter"
            }
          }
        },
        "rules": {
          "title": "rules",
          "description": "Rules to postprocess the selected features for a certain zoom level. Supported     operations are: selecting a subset of feature properties (`properties`), spatial merging of     features that intersect (`merge`), with the option to restrict the operations to features     with matching attributes (`groupBy`). See the example below. For `merge`, the resulting     object will only obtain properties that are identical for all merged features.",
          "type": "object",
          "deprecated": true,
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LevelTransformation"
            }
          }
        },
        "center": {
          "title": "center",
          "description": "Longitude and latitude that a map with the tiles should be centered on by default.",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "number"
          }
        },
        "limit": {
          "title": "limit",
          "description": "Maximum number of features contained in a single tile per query.",
          "type": "number",
          "deprecated": true
        },
        "singleCollectionEnabled": {
          "title": "singleCollectionEnabled",
          "description": "Enable vector tiles for each *Feature Collection*. Every tile contains a layer with the     feature from the collection.",
          "type": "boolean",
          "deprecated": true
        },
        "multiCollectionEnabled": {
          "title": "multiCollectionEnabled",
          "description": "Enable vector tiles for the whole dataset. Every tile contains one layer per collection     with the features of that collection.",
          "type": "boolean",
          "deprecated": true
        },
        "ignoreInvalidGeometries": {
          "title": "ignoreInvalidGeometries",
          "description": "Ignore features with invalid geometries. Before ignoring a feature, an attempt is made     to transform the geometry to a valid geometry. The topology of geometries might be invalid     in the data source or in some cases the quantization of coordinates to integers might     render it invalid.",
          "type": "boolean",
          "deprecated": true
        },
        "minimumSizeInPixel": {
          "title": "minimumSizeInPixel",
          "description": "Features with line geometries shorter that the given value are excluded from tiles.     Features with surface geometries smaller than the square of the given value are excluded     from the tiles. The value `0.5` corresponds to half a \"pixel\" in the used coordinate     reference system.",
          "type": "number",
          "deprecated": true
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.tiles.domain.TileProviderTileServer": {
      "title": "TileProviderTileServer",
      "description": "With this tile provider, the tiles are obtained from [TileServer-GL     instance](https://github.com/maptiler/tileserver-gl). Only the \"WebMercatorQuad\" tile scheme     is supported.       In the current version, this provider is only supported in the [Map Tiles](map_tiles.md)     module. Only bitmap tile formats are supported. Seeding or caching are not supported.       This tile provider is experimental and its configuration options may change in future     versions.",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "description": "Fixed value, identifies the tile provider type.",
          "type": "string",
          "const": "TILESERVER"
        },
        "urlTemplate": {
          "title": "urlTemplate",
          "description": "URL template for accessing tiles. Parameters to use are `{tileMatrix}`, `{tileRow}`,     `{tileCol}` and `{fileExtension}`.",
          "type": "string",
          "deprecated": true
        },
        "urlTemplateSingleCollection": {
          "title": "urlTemplateSingleCollection",
          "description": "URL template for accessing tiles for a collection.",
          "type": "string",
          "deprecated": true
        },
        "tileEncodings": {
          "title": "tileEncodings",
          "description": "List of tile formats to be supported, allowed are `PNG`, `WebP` and `JPEG`.",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.tiles.domain.TileProvider": {
      "oneOf": [
        {
          "$ref": "#/$defs/de.ii.ogcapi.tiles.domain.TileProviderMbtiles"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.tiles.domain.TileProviderFeatures"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.tiles.domain.TileProviderTileServer"
        }
      ]
    },
    "de.ii.ogcapi.tiles.domain.TilesConfiguration": {
      "title": "TilesConfiguration",
      "description": "### Prerequisites       The building block *Tile Matrix Sets* must be enabled. If that building block is not     configured, it is automatically enabled if *Tiles* is enabled.       ### Storage       The tile cache is located in the data directory under the relative path     `cache/tiles/{apiId}`. If the data for an API or tile configuration has been changed, then     the cache directory for the API should be deleted so that the cache is rebuilt with the     updated data or rules.",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `TILES`.",
          "type": "string",
          "const": "TILES"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "TILES"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "transformations": {
          "title": "transformations",
          "description": "[Property transformations](../../providers/details/transformations.md) do not affect     data sources, they are applied on-the-fly as part of the encoding. Filter expressions do     not take transformations into account, they have to be based on the source values. That     means queryable properties (see `queryables` in [Features](features.md)) should not use     transformations in most cases. The exception to the rule is the HTML encoding, where     readability might be more important than filter support.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.features.domain.transform.PropertyTransformation"
            }
          }
        },
        "maxMultiplicity": {
          "title": "maxMultiplicity",
          "description": "If the feature schema includes array properties, `maxMultiplicity` properties will be     created for each array property. If an instance has more values in an array, only the first     values are included in the data.",
          "type": "number"
        },
        "caching": {
          "title": "caching",
          "description": "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "tileProvider": {
          "title": "tileProvider",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)* Specifies the data source for the     tiles, see [Tile provider objects](#tile-provider).",
          "type": "object",
          "deprecated": true,
          "$ref": "#/$defs/de.ii.ogcapi.tiles.domain.TileProvider"
        },
        "tileProviderId": {
          "title": "tileProviderId",
          "description": "*Deprecated (will be renamed to `tileProvider` in v4.0)* Specifies the data source for     the tiles, see [Tile Providers](../../providers/tile/README.md).",
          "type": "string",
          "deprecated": true
        },
        "tileProviderTileset": {
          "title": "tileProviderTileset",
          "description": "Specifies the tileset from the tile provider that should be used. The default is     `__all__` for dataset tiles and `{collectionId}` for collection tiles.",
          "type": "string"
        },
        "tileLayer": {
          "title": "tileLayer",
          "description": "*Deprecated* See `tileProviderTileset`.",
          "type": "string",
          "deprecated": true
        },
        "tileSetEncodings": {
          "title": "tileSetEncodings",
          "description": "Controls which formats are supported for the tileset resources. Available are [OGC     TileSetMetadata](https://docs.ogc.org/DRAFTS/17-083r3.html#tsmd-json-encoding) (\"JSON\") and     [TileJSON](https://github.com/mapbox/tilejson-spec) (\"TileJSON\").",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cache": {
          "title": "cache",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities) `FILES` stores each tile as a file in     the file system. `MBTILES` stores the tiles in an MBTiles file (one MBTiles file per     tileset).",
          "type": "string",
          "deprecated": true
        },
        "mapClientType": {
          "title": "mapClientType",
          "description": "Selection of the map client to be used in the HTML output. The default is MapLibre GL     JS, only the \"WebMercatorQuad\" tiling scheme is supported. Alternatively \u0027OPEN_LAYERS\u0027 is     supported as well (OpenLayers). The support of Open Layers only makes sense if other of the     predefined tiling schemes should be supported in the HTML output. With `OPEN_LAYERS` no     styles are supported.",
          "type": "string"
        },
        "style": {
          "title": "style",
          "description": "A style in the style repository to be used in maps with tiles by default. With     `DEFAULT` the `defaultStyle` from [module HTML](html.md) is used. If the map client is     MapLibre, the style must be available in the Mapbox format. If the style is set to `NONE`,     a simple wireframe style will be used with OpenStreetMap as a basemap. If the map client is     Open Layers, the setting is ignored.",
          "type": "string"
        },
        "removeZoomLevelConstraints": {
          "title": "removeZoomLevelConstraints",
          "description": "If `true` is selected, the `minzoom` and `maxzoom` specifications for the layer objects     are removed from the style specified in `style` so that the features are displayed at all     zoom levels. This option should not be used if the style provides different presentations     depending on the zoom level, otherwise all layers will be displayed at all zoom levels at     the same time.",
          "type": "boolean"
        },
        "tileEncodings": {
          "title": "tileEncodings",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)* List of tile formats to be supported,     in general `MVT` (Mapbox Vector Tiles), `PNG`, `WebP` and `JPEG` are allowed. The actually     supported formats depend on the [Tile Provider](../../providers/tile/README.md).",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "string"
          }
        },
        "center": {
          "title": "center",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)*",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "number"
          }
        },
        "zoomLevels": {
          "title": "zoomLevels",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)* Controls the zoom levels available for     each active tiling scheme as well as which zoom level to use as default.",
          "type": "object",
          "deprecated": true,
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        },
        "collectionTiles": {
          "title": "collectionTiles",
          "description": "Enable vector tiles for each *Feature Collection*. Every tile contains a layer with the     feature from the collection.",
          "type": "boolean"
        },
        "singleCollectionEnabled": {
          "title": "singleCollectionEnabled",
          "description": "*Deprecated* See `collectionTiles`.",
          "type": "boolean",
          "deprecated": true
        },
        "datasetTiles": {
          "title": "datasetTiles",
          "description": "Enable vector tiles for the whole dataset. Every tile contains one layer per collection     with the features of that collection.",
          "type": "boolean"
        },
        "multiCollectionEnabled": {
          "title": "multiCollectionEnabled",
          "description": "*Deprecated* See `datasetTiles`.",
          "type": "boolean",
          "deprecated": true
        },
        "zoomLevelsCache": {
          "title": "zoomLevelsCache",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)*",
          "type": "object",
          "deprecated": true,
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        },
        "seeding": {
          "title": "seeding",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)*",
          "type": "object",
          "deprecated": true,
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.MinMax"
          }
        },
        "seedingOptions": {
          "title": "seedingOptions",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)*",
          "type": "object",
          "deprecated": true,
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.SeedingOptions"
        },
        "limit": {
          "title": "limit",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)*",
          "type": "number",
          "deprecated": true
        },
        "ignoreInvalidGeometries": {
          "title": "ignoreInvalidGeometries",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)*",
          "type": "boolean",
          "deprecated": true
        },
        "filters": {
          "title": "filters",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)*",
          "type": "object",
          "deprecated": true,
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LevelFilter"
            }
          }
        },
        "rules": {
          "title": "rules",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)*",
          "type": "object",
          "deprecated": true,
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.LevelTransformation"
            }
          }
        },
        "minimumSizeInPixel": {
          "title": "minimumSizeInPixel",
          "description": "*Deprecated (from v4.0 on you have to use [Tile     Provider](../../providers/tile/README.md) entities)*",
          "type": "number",
          "deprecated": true
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.xml.domain.XmlConfiguration": {
      "title": "XmlConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `XML`.",
          "type": "string",
          "const": "XML"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "XML"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.collections.schema.domain.SchemaConfiguration": {
      "title": "SchemaConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `SCHEMA`.",
          "type": "string",
          "const": "SCHEMA"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "SCHEMA"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "caching": {
          "title": "caching",
          "description": "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "versions": {
          "title": "versions",
          "description": "List of enabled JSON Schema versions. Supported are 2020-12 (`V202012`), 2019-09     (`V201909`) and 07 (`V7`).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.crud.app.CrudConfiguration": {
      "title": "CrudConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `CRUD` or (*deprecated*) `TRANSACTIONAL`.",
          "type": "string",
          "enum": [
            "CRUD",
            "TRANSACTIONAL"
          ]
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "enum": [
            "CRUD",
            "TRANSACTIONAL"
          ]
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.gltf.domain.GltfPropertyDefinition": {
      "title": "GltfPropertyDefinition",
      "description": "",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "description": "",
          "type": "string"
        },
        "componentType": {
          "title": "componentType",
          "description": "",
          "type": "string"
        },
        "stringOffsetType": {
          "title": "stringOffsetType",
          "description": "",
          "type": "string"
        },
        "noData": {
          "title": "noData",
          "description": "",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.gltf.domain.GltfConfiguration": {
      "title": "GltfConfiguration",
      "description": "### Prerequisites       The module requires that the feature provider includes a type `building`. The requirements     for the type are the same as in the configuration of the [CityJSON     encoding](features_-_cityjson.html#configuration).",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `GLTF`.",
          "type": "string",
          "const": "GLTF"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "GLTF"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "transformations": {
          "title": "transformations",
          "description": "[Property transformations](../../providers/details/transformations.md) do not affect     data sources, they are applied on-the-fly as part of the encoding. Filter expressions do     not take transformations into account, they have to be based on the source values. That     means queryable properties (see `queryables` in [Features](features.md)) should not use     transformations in most cases. The exception to the rule is the HTML encoding, where     readability might be more important than filter support.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.features.domain.transform.PropertyTransformation"
            }
          }
        },
        "meshQuantization": {
          "title": "meshQuantization",
          "description": "Enables support for the glTF 2.0 extension     [KHR_mesh_quantization](https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_mesh_quantization).",
          "type": "boolean"
        },
        "withNormals": {
          "title": "withNormals",
          "description": "If `true`, the normals are computed for every vertex.",
          "type": "boolean"
        },
        "withOutline": {
          "title": "withOutline",
          "description": "If `true`, the polygon edges are outlined in Cesium.",
          "type": "boolean"
        },
        "polygonOrientationNotGuaranteed": {
          "title": "polygonOrientationNotGuaranteed",
          "description": "If `true`, materials are defined as     [double-sided](https://registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#double-sided).",
          "type": "boolean"
        },
        "properties": {
          "title": "properties",
          "description": "Use this option to specify which feature attributes are included in the glTF model.     `type` is one of `SCALAR`, `STRING` or `ENUM`. For a scalar, specify the `componentType`     (see [3D Metadata     Specification](https://github.com/CesiumGS/3d-tiles/tree/main/specification/Metadata#component-type)),     default is `UNIT16`. For a string, specify the `stringOffsetType` as `UNIT8`, `UNIT16`, or     `UNIT32` depending on the expected length of the string buffer, default is `UNIT32`. For an     enum, the feature property must either have an `enum` constraint in the provider schema or     a `codelist` constraint where the codelist uses an integer code; specify the     `componentType` according to the range of code values, default is `UINT32`. In addition, a     sentinel value can be specified using `noData` (see [3D Metadata     Specification](https://github.com/CesiumGS/3d-tiles/tree/main/specification/Metadata) for     details).",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.features.gltf.domain.GltfPropertyDefinition"
          }
        },
        "withSurfaceType": {
          "title": "withSurfaceType",
          "description": "If `true`, for buildings in Level-of-Detail 2 with information about the semantics of     each surface (wall, roof, etc.), a property \"surfaceType\" is added and available for each     vertex.",
          "type": "boolean"
        },
        "maxMultiplicity": {
          "title": "maxMultiplicity",
          "description": "If the data is flattened and the feature schema includes arrays, `maxMultiplicity`     properties will be created for each array property. If an instance has more values in an     array, only the first values are included in the data.",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.jsonfg.domain.JsonFgConfiguration": {
      "title": "JsonFgConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `JSON_FG`.",
          "type": "string",
          "const": "JSON_FG"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "JSON_FG"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "transformations": {
          "title": "transformations",
          "description": "[Property transformations](../../providers/details/transformations.md) do not affect     data sources, they are applied on-the-fly as part of the encoding. Filter expressions do     not take transformations into account, they have to be based on the source values. That     means queryable properties (see `queryables` in [Features](features.md)) should not use     transformations in most cases. The exception to the rule is the HTML encoding, where     readability might be more important than filter support.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.features.domain.transform.PropertyTransformation"
            }
          }
        },
        "describedby": {
          "title": "describedby",
          "description": "*Partially Deprecated* For schemas specific to the feature type, use `schemaCollection`     and `schemaFeature`. Enables that links to the generic JSON-FG and GeoJSON JSON Schema     documents tare added to the JSON-FG response document. The links have the link relation     type \"describedby\". The schemas can be used to validate the JSON document.",
          "type": "boolean"
        },
        "schemaCollection": {
          "title": "schemaCollection",
          "description": "The URI of a JSON Schema document describing a feature collection with the features of     the collection/dataset. The schema will be referenced from JSON-FG feature collection     responses by a link with the link relation type \"describedby\". The schemas can be used to     validate the JSON document.",
          "type": "string"
        },
        "schemaFeature": {
          "title": "schemaFeature",
          "description": "The URI of a JSON Schema document describing a feature of the collection/dataset. The     schema will be referenced from JSON-FG feature responses by a link with the link relation     type \"describedby\". The schemas can be used to validate the JSON document.",
          "type": "string"
        },
        "coordRefSys": {
          "title": "coordRefSys",
          "description": "Activates the output of the coordinate reference system in a JSON member \"coordRefSys\"     for features and feature collections. The coordinate reference system is identified by its     OGC URI, for example, `http://www.opengis.net/def/crs/EPSG/0/25832` for ETRS89 / UTM 32N.",
          "type": "boolean"
        },
        "geojsonCompatibility": {
          "title": "geojsonCompatibility",
          "description": "Activates support for the \"compatibility\u003dgeojson\" media type parameter. If the     parameter is provided, JSON-FG features with a \"place\" member that is not `null` will also     include a GeoJSON geometry in the \"geometry\" member in WGS 84. If the parameter is missing,     the \"geometry\" member of a JSON-FG feature will be `null`, if the \"place\" member is not     `null`.",
          "type": "boolean"
        },
        "featureType": {
          "title": "featureType",
          "description": "Features are often categorized by type. Typically, all features of the same type have     the same schema and the same properties.       Many GIS clients depend on knowledge about the feature type when processing feature     data. For example, when associating a style to a feature in order to render that feature on     a map.       This option adds a \"featureType\" member with the specified values. If a single value is     specified, then a string is added, otherwise an array of strings.       A value can include a template `{{type}}`, which will be replaced with the value of the     feature property with `role: TYPE` in the provider schema of the feature type of the     collection. The property must be of type `STRING`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "links": {
          "title": "links",
          "description": "Adds the specified links to the `links` array of features. All values of the array must     be a valid link object with `href` and `rel`.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Link"
          }
        },
        "includeInGeoJson": {
          "title": "includeInGeoJson",
          "description": "The option allows selected JSON-FG extensions to be included in the GeoJSON encoding as     well. Allowed values are: `describedby`, `featureType`, `time`, `place`, `coordRefSys`,     `links`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.search.domain.SearchConfiguration": {
      "title": "SearchConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `SEARCH`.",
          "type": "string",
          "const": "SEARCH"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "SEARCH"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "caching": {
          "title": "caching",
          "description": "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "managerEnabled": {
          "title": "managerEnabled",
          "description": "Option to manage stored queries using PUT and DELETE.",
          "type": "boolean"
        },
        "validationEnabled": {
          "title": "validationEnabled",
          "description": "Option to validate stored queries when using PUT by setting a `Prefer` header with     `handling\u003dstrict`.",
          "type": "boolean"
        },
        "allLinksAreLocal": {
          "title": "allLinksAreLocal",
          "description": "Signals feature encoders whether all link targets are within the same document.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.filter.domain.FilterConfiguration": {
      "title": "FilterConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `FILTER`.",
          "type": "string",
          "const": "FILTER"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "FILTER"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.geometry.simplification.app.GeometrySimplificationConfiguration": {
      "title": "GeometrySimplificationConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `GEOMETRY_SIMPLIFICATION`.",
          "type": "string",
          "const": "GEOMETRY_SIMPLIFICATION"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "GEOMETRY_SIMPLIFICATION"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.projections.app.ProjectionsConfiguration": {
      "title": "ProjectionsConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `PROJECTIONS`.",
          "type": "string",
          "const": "PROJECTIONS"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "PROJECTIONS"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.routes.domain.RoutingFlag": {
      "title": "RoutingFlag",
      "description": "",
      "type": "object",
      "properties": {
        "label": {
          "title": "label",
          "description": "",
          "type": "string"
        },
        "default": {
          "title": "default",
          "description": "",
          "type": "boolean"
        },
        "providerFlag": {
          "title": "providerFlag",
          "description": "",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.routes.domain.HtmlFormDefaults": {
      "title": "HtmlFormDefaults",
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "title": "name",
          "description": "",
          "type": "string"
        },
        "start": {
          "title": "start",
          "description": "",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "end": {
          "title": "end",
          "description": "",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "center": {
          "title": "center",
          "description": "",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "centerLevel": {
          "title": "centerLevel",
          "description": "",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.routes.domain.HtmlForm": {
      "title": "HtmlForm",
      "description": "",
      "type": "object",
      "properties": {
        "enabled": {
          "title": "enabled",
          "description": "",
          "type": "boolean"
        },
        "defaults": {
          "title": "defaults",
          "description": "",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.routes.domain.HtmlFormDefaults"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.routes.domain.RoutingConfiguration": {
      "title": "RoutingConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `ROUTING`.",
          "type": "string",
          "const": "ROUTING"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "ROUTING"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "caching": {
          "title": "caching",
          "description": "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "featureType": {
          "title": "featureType",
          "description": "*Required* Name of the feature type in the [feature provider with the routing     extension](../../providers/feature/extensions/routing.html) that provides the route feature     as a series of route segments. See [Routing Provider](#routing-provider) for configuring     the",
          "type": "string"
        },
        "manageRoutes": {
          "title": "manageRoutes",
          "description": "Enables support for conformance class *Manage Routes*. If enabled, routes along with     their request payload are stored in the API and can be retrieved. Routes that are no longer     needed can be deleted.",
          "type": "boolean"
        },
        "intermediateWaypoints": {
          "title": "intermediateWaypoints",
          "description": "Enables support for conformance class *Intermediate Waypoints*. If enabled, routing     requests can provide more than two waypoints along the route.",
          "type": "boolean"
        },
        "weightRestrictions": {
          "title": "weightRestrictions",
          "description": "Enables support for conformance class *Weight Restrictions*. If enabled, routing     requests can include the weight of the vehicle and route segments will only be selected, if     they support the weight.",
          "type": "boolean"
        },
        "heightRestrictions": {
          "title": "heightRestrictions",
          "description": "Enables support for conformance class *Height Restrictions*. If enabled, routing     requests can include the height of the vehicle and route segments will only be selected, if     they support the weight.",
          "type": "boolean"
        },
        "obstacles": {
          "title": "obstacles",
          "description": "Enables support for conformance class *Obstacles*. If enabled, routing requests can     include a multi-polygon of areas that the route must avoid.",
          "type": "boolean"
        },
        "speedLimitUnit": {
          "title": "speedLimitUnit",
          "description": "Sets the unit used in speed limit attributes of segments. Either \"kmph\" or \"mph\".",
          "type": "string"
        },
        "defaultPreference": {
          "title": "defaultPreference",
          "description": "Sets the default value for the \"preference\" (cost function) in the routing request.",
          "type": "string"
        },
        "defaultMode": {
          "title": "defaultMode",
          "description": "Sets the default value for the \"mode\" (mode of transport) in the routing request.",
          "type": "string"
        },
        "additionalFlags": {
          "title": "additionalFlags",
          "description": "The routing provider supports passing additional flags (key-value-pairs) that can be     taken into account in the routing process.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.routes.domain.RoutingFlag"
          }
        },
        "defaultCrs": {
          "title": "defaultCrs",
          "description": "Default coordinate reference system, either `CRS84` for routing providers with 2D     coordinates, `CRS84h` for 3D coordinates.",
          "type": "string"
        },
        "coordinatePrecision": {
          "title": "coordinatePrecision",
          "description": "Controls whether coordinates are limited to a certain number of places depending on the     coordinate reference system used. The unit of measurement and the corresponding number of     decimal places must be specified. Example: `{ \"metre\" : 2, \"degree\" : 7 }`. Valid units of     measurement are \"metre\" and \"degree\".",
          "type": "object",
          "additionalProperties": {
            "type": "number"
          }
        },
        "elevationProfileSimplificationTolerance": {
          "title": "elevationProfileSimplificationTolerance",
          "description": "If set, route segment geometries with 3D coordinates will be smoothened using the     Douglas-Peucker algorithm with the specified tolerance.",
          "type": "number"
        },
        "html": {
          "title": "html",
          "description": "If enabled (the object includes a \"enabled\" member set to `true`), the HTML response to     the Get Routes operation will be enabled. The object can also include a \"defaults\" member     that contains key-value pairs. The following properties are supported: \"name\" (default name     of the route), \"start\" (longitude and latitude of the default start of the route), \"end\"     (longitude and latitude of the default end of the route), \"center\" (longitude and latitude     of the center point of the initial map view), \"centerLevel\" (WebMercatorQuad zoom level of     the initial map view).",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.routes.domain.HtmlForm"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.sorting.domain.SortingConfiguration": {
      "title": "SortingConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `SORTING`.",
          "type": "string",
          "const": "SORTING"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "SORTING"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "sortables": {
          "title": "sortables",
          "description": "*Deprecated* Superseded by `included`. Controls which of the attributes in queries can     be used for sorting data. Only direct attributes of the data types `STRING`, `DATE`,     `DATETIME`, `INTEGER` and `FLOAT` are allowed (no attributes from arrays or embedded     objects).",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "string"
          }
        },
        "included": {
          "title": "included",
          "description": "Controls which of the attributes in queries can be used for sorting data. Only direct     attributes of the data types `STRING`, `DATE`, `DATETIME`, `INTEGER` and `FLOAT` are     eligible as sortables (that is, no attributes from arrays or embedded objects) unless     `isSortable` is set to `false` for the property. The special value `*` includes all     eligible properties as sortables. By default, no property is sortable (this is for     backwards compatibility, in v4.0 the default behaviour will change to all eligible     properties).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excluded": {
          "title": "excluded",
          "description": "The list of properties that would be sortables based on `included`, but which should     not be sortables.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pathSeparator": {
          "title": "pathSeparator",
          "description": "The character that is used as the path separator in case of object-valued properties.     Either `DOT` or `UNDERSCORE`.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.styles.domain.StylesConfiguration": {
      "title": "StylesConfiguration",
      "description": "### Storage       The stylesheets, style metadata and style information all reside as files in the data     directory:        - Stylesheets reside under the relative path `styles/{apiId}/{styleId}.{ext}`. The URIs (Sprites,     Glyphs, Source.url, Source.tiles) used in Mapbox styles links might contain `{serviceUrl}`.     The file extension `{ext}` must have the following value depending on the style encoding:   - Mapbox Style: `mbs`   - OGC SLD 1.0: `sld10`   - OGC SLD 1.1: `sld11`   - QGIS QML: `qml`   - ArcGIS Desktop: `lyr`   - ArcGIS Pro: `lyrx`   - 3D Tiles Styling: `3dtiles` - Style metadata reside under the relative path `styles/{apiId}/{styleId}.metadata`. Links     might be templates (by setting `templated` to `true`) containing `{serviceUrl}`. - Style information reside under the relative path `style-infos/{apiId}/{collectionId}.json`. Links     might be templates (by setting `templated` to `true`) containing `{serviceUrl}` and     `{collectionId}`.",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `STYLES`.",
          "type": "string",
          "const": "STYLES"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "STYLES"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "caching": {
          "title": "caching",
          "description": "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "styleEncodings": {
          "title": "styleEncodings",
          "description": "List of enabled stylesheet encodings. Supported are Mapbox Style (`Mapbox`), OGC SLD     1.0 (`SLD10`), OGC SLD 1.1 (`SLD11`), QGIS QML (\"QML\"), ArcGIS Layer (\"lyr\" und \"lyrx\"), 3D     Tiles (\"3D Tiles\") and HTML (`HTML`). HTML is an output only encoding for web maps that     requires a *Mapbox Style* stylesheet. For details see conformance classes *Mapbox Style*,     *OGC SLD 1.0*, *OGC SLD 1.1* und *HTML*.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "managerEnabled": {
          "title": "managerEnabled",
          "description": "Option to manage styles using POST, PUT and DELETE. If `styleInfosOnCollection` is     enabled, style information may be created and updated using PATCH. Siehe die     Konformitätsklasse \"Manage styles\".",
          "type": "boolean"
        },
        "validationEnabled": {
          "title": "validationEnabled",
          "description": "Option to validate styles when using POST and PUT by setting the query parameter     `validate`. For details see conformance class *Validation of styles*.",
          "type": "boolean"
        },
        "useIdFromStylesheet": {
          "title": "useIdFromStylesheet",
          "description": "",
          "type": "boolean"
        },
        "resourcesEnabled": {
          "title": "resourcesEnabled",
          "description": "*Deprecated* See `enabled` in [Modul Resources](resources.md).",
          "type": "boolean",
          "deprecated": true
        },
        "resourceManagerEnabled": {
          "title": "resourceManagerEnabled",
          "description": "*Deprecated* See `managerEnabled` in [Modul Resources](resources.md).",
          "type": "boolean",
          "deprecated": true
        },
        "defaultStyle": {
          "title": "defaultStyle",
          "description": "*Deprecated* See `defaultStyle` in [Modul HTML](html.md).",
          "type": "string",
          "deprecated": true
        },
        "deriveCollectionStyles": {
          "title": "deriveCollectionStyles",
          "description": "Only applies to styles in Mapbox Style format. Controls whether the styles at the     collection level should be derived from the styles in the parent style collection. The     prerequisite is that the name of the `source` in the stylesheet corresponds to `{apiId}`     and the name of the `source-layer` corresponds to `{collectionId}`. If a style is to be     used for displaying features in the FEATURES_HTML module, the option should be enabled.",
          "type": "boolean"
        },
        "webmapWithPopup": {
          "title": "webmapWithPopup",
          "description": "Option to support popups in web maps for *Mapbox Style* styles that show attributes for     the top-most object.",
          "type": "boolean"
        },
        "webmapWithLayerControl": {
          "title": "webmapWithLayerControl",
          "description": "Option to support layer controls in web maps for *Mapbox Style* styles. Allows to     collectively enable and disable all layers for a certain feature collection.",
          "type": "boolean"
        },
        "layerControlAllLayers": {
          "title": "layerControlAllLayers",
          "description": "Option to support layer controls for additional layers like background maps. Requires     `webmapWithLayerControl: true`.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.text.search.domain.TextSearchConfiguration": {
      "title": "TextSearchConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `TEXT_SEARCH`.",
          "type": "string",
          "const": "TEXT_SEARCH"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "TEXT_SEARCH"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "properties": {
          "title": "properties",
          "description": "Controls which of the queryable attributes are used for text search.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.tiles3d.domain.Tiles3dConfiguration": {
      "title": "Tiles3dConfiguration",
      "description": "### Prerequisites       The module requires that the feature provider includes a type `building`. The requirements     for the type are the same as in the configuration of the [CityJSON     encoding](features_-_cityjson.html#configuration).",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `3D TILES`.",
          "type": "string",
          "const": "3D TILES"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "3D TILES"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "firstLevelWithContent": {
          "title": "firstLevelWithContent",
          "description": "The first level of the tileset which will contain buildings. The value will depend on     the spatial extent of the dataset, i.e., at what level of the implicit tiling scheme large     buildings can be displayed.",
          "type": "number"
        },
        "maxLevel": {
          "title": "maxLevel",
          "description": "The last level of the tileset which will contain buildings. The value will depend on     the spatial extent of the dataset, i.e., at what level of the implicit tiling scheme small     buildings can be displayed in detail.",
          "type": "number"
        },
        "contentFilters": {
          "title": "contentFilters",
          "description": "A CQL2 text filter expression for each level between the `firstLevelWithContent` and     the `maxLevel` to select the buildings to include in the tile on that level. Since the     [refinement strategy](https://docs.ogc.org/cs/22-025r4/22-025r4.html#toc19) is always     `ADD`, specify disjoint filter expressions, so that each building will be included on     exactly one level.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tileFilters": {
          "title": "tileFilters",
          "description": "A CQL2 text filter expression for each level between the `firstLevelWithContent` and     the `maxLevel` to select the buildings to include in the tile on that level or in any of     the child tiles. This filter expression is the same as all the `contentFilters` on this or     higher levels combined with an `OR`. This is also the default value. However, depending on     the filter expressions, this may lead to inefficient tile filters and to improve     performance the tile filters can also be specified explicitly.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "geometricErrorRoot": {
          "title": "geometricErrorRoot",
          "description": "The error, in meters, introduced if a tile at level 0 (root) is rendered and its     children at level 1 are not. At runtime, the geometric error is used to compute screen     space error (SSE), i.e., the error measured in pixels.",
          "type": "number"
        },
        "subtreeLevels": {
          "title": "subtreeLevels",
          "description": "The number of levels in each Subtree.",
          "type": "number"
        },
        "seeding": {
          "title": "seeding",
          "description": "Controls how and when tiles are precomputed, see [Seeding options in the Tiles building     block](tiles.md#seeding-options).",
          "type": "object",
          "$ref": "#/$defs/de.ii.xtraplatform.tiles.domain.SeedingOptions"
        },
        "clampToEllipsoid": {
          "title": "clampToEllipsoid",
          "description": "If set to `true`, each building will be translated vertically so that the bottom of the     building is on the WGS 84 ellipsoid. Use this option, if the data is intended to be     rendered without a terrain model.",
          "type": "boolean"
        },
        "ionAccessToken": {
          "title": "ionAccessToken",
          "description": "If the 3D Tiles should be rendered in the integrated Cesium client using the terrain     model from Cesium Ion, specify the access token to use in requests.",
          "type": "string"
        },
        "maptilerApiKey": {
          "title": "maptilerApiKey",
          "description": "If the 3D Tiles should be rendered in the integrated Cesium client using the terrain     model from MapTiler, specify the api key to use in requests.",
          "type": "string"
        },
        "customTerrainProviderUri": {
          "title": "customTerrainProviderUri",
          "description": "If the 3D Tiles should be rendered in the integrated Cesium client using an external     Terrain Provider, specify the URI of the provider.",
          "type": "string"
        },
        "terrainHeightDifference": {
          "title": "terrainHeightDifference",
          "description": "If the terrain does not match the height values in the data, this option can be used to     translate the buildings vertically in the integrated Cesium client.",
          "type": "number"
        },
        "style": {
          "title": "style",
          "description": "A style in the style repository of the collection to be used in maps with 3D Tiles.     With `DEFAULT` the `defaultStyle` from [module HTML](html.md) is used. With `NONE` the     default 3D Tiles style is used. The style must be available in the 3D Tiles Styling format.     If no style is found, \u0027NONE\u0027 is used.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.csv.domain.CsvConfiguration": {
      "title": "CsvConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `CSV`.",
          "type": "string",
          "const": "CSV"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "CSV"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "transformations": {
          "title": "transformations",
          "description": "[Property transformations](../../providers/details/transformations.md) do not affect     data sources, they are applied on-the-fly as part of the encoding. Filter expressions do     not take transformations into account, they have to be based on the source values. That     means queryable properties (see `queryables` in [Features](features.md)) should not use     transformations in most cases. The exception to the rule is the HTML encoding, where     readability might be more important than filter support.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.features.domain.transform.PropertyTransformation"
            }
          }
        },
        "maxMultiplicity": {
          "title": "maxMultiplicity",
          "description": "If the feature schema includes array properties, `maxMultiplicity` properties will be     created for each array property. If an instance has more values in an array, only the first     values are included in the data.",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.custom.extensions.domain.FeaturesExtensionsConfiguration": {
      "title": "FeaturesExtensionsConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `FEATURES_EXTENSIONS`.",
          "type": "string",
          "const": "FEATURES_EXTENSIONS"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "FEATURES_EXTENSIONS"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "postOnItems": {
          "title": "postOnItems",
          "description": "Enables support for the POST HTTP method on the \"Features\" resource.",
          "type": "boolean"
        },
        "intersectsParameter": {
          "title": "intersectsParameter",
          "description": "Enables support for the `intersects` query parameter on the \"Features\" resource",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.flatgeobuf.domain.FlatgeobufConfiguration": {
      "title": "FlatgeobufConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `FLATGEOBUF`.",
          "type": "string",
          "const": "FLATGEOBUF"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "FLATGEOBUF"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "transformations": {
          "title": "transformations",
          "description": "[Property transformations](../../providers/details/transformations.md) do not affect     data sources, they are applied on-the-fly as part of the encoding. Filter expressions do     not take transformations into account, they have to be based on the source values. That     means queryable properties (see `queryables` in [Features](features.md)) should not use     transformations in most cases. The exception to the rule is the HTML encoding, where     readability might be more important than filter support.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/$defs/de.ii.xtraplatform.features.domain.transform.PropertyTransformation"
            }
          }
        },
        "maxMultiplicity": {
          "title": "maxMultiplicity",
          "description": "If the feature schema includes array properties, `maxMultiplicity` properties will be     created for each array property. If an instance has more values in an array, only the first     values are included in the data.",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.features.geojson.ld.domain.GeoJsonLdConfiguration": {
      "title": "GeoJsonLdConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `GEO_JSON_LD`.",
          "type": "string",
          "const": "GEO_JSON_LD"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "GEO_JSON_LD"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "contextFileName": {
          "title": "contextFileName",
          "description": "File name of the JSON-LD context document in the folder     `api-resources/json-ld-contexts/{apiId}`.",
          "type": "string"
        },
        "context": {
          "title": "context",
          "description": "URI of the JSON-LD context document. The value should either be an external URI or     `{{serviceUrl}}/collections/{{collectionId}}/context` for contexts provided by the API (see     below for details). The template may contain `{{serviceUrl}}` (substituted with the API     landing page URI) and `{{collectionId}}` (substituted with the collection id).",
          "type": "string"
        },
        "types": {
          "title": "types",
          "description": "Value of `@type` that is added to every feature.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "idTemplate": {
          "title": "idTemplate",
          "description": "Value of `@id` that is added to every feature. The template may contain     `{{serviceUrl}}` (substituted with the API landing page URI), `{{collectionId}}`     (substituted with the collection id) and `{{featureId}}` (substituted with the feature id).",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.resources.domain.ResourcesConfiguration": {
      "title": "ResourcesConfiguration",
      "description": "",
      "type": "object",
      "properties": {
        "buildingBlock": {
          "title": "buildingBlock",
          "description": "Always `RESOURCES`.",
          "type": "string",
          "const": "RESOURCES"
        },
        "extensionType": {
          "title": "extensionType",
          "description": "*Deprecated* See `buildingBlock`.",
          "type": "string",
          "deprecated": true,
          "const": "RESOURCES"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the building block?",
          "type": "boolean"
        },
        "caching": {
          "title": "caching",
          "description": "Sets fixed values for [HTTP Caching Headers](/services/README.md#caching) for the     resources.",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Caching"
        },
        "managerEnabled": {
          "title": "managerEnabled",
          "description": "Controls whether the resources should be able to be created and deleted via PUT and     DELETE through the API.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "de.ii.ogcapi.foundation.domain.ExtensionConfiguration": {
      "oneOf": [
        {
          "$ref": "#/$defs/de.ii.ogcapi.collections.domain.CollectionsConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.collections.queryables.domain.QueryablesConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.common.domain.CommonConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.crs.domain.CrsConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.cityjson.domain.CityJsonConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.core.domain.FeaturesCoreConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.geojson.domain.GeoJsonConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.gml.domain.GmlConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.html.domain.FeaturesHtmlConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.FoundationConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.html.domain.HtmlConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.json.domain.JsonConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.oas30.domain.Oas30Configuration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.tilematrixsets.domain.TileMatrixSetsConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.tiles.domain.TilesConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.xml.domain.XmlConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.collections.schema.domain.SchemaConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.crud.app.CrudConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.gltf.domain.GltfConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.jsonfg.domain.JsonFgConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.search.domain.SearchConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.filter.domain.FilterConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.geometry.simplification.app.GeometrySimplificationConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.projections.app.ProjectionsConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.routes.domain.RoutingConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.sorting.domain.SortingConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.styles.domain.StylesConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.text.search.domain.TextSearchConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.tiles3d.domain.Tiles3dConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.csv.domain.CsvConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.custom.extensions.domain.FeaturesExtensionsConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.flatgeobuf.domain.FlatgeobufConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.features.geojson.ld.domain.GeoJsonLdConfiguration"
        },
        {
          "$ref": "#/$defs/de.ii.ogcapi.resources.domain.ResourcesConfiguration"
        }
      ]
    },
    "de.ii.ogcapi.foundation.domain.FeatureTypeConfigurationOgcApi": {
      "title": "FeatureTypeConfigurationOgcApi",
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "Unique identifier, allowed characters are (A-Z, a-z), numbers (0-9), underscore and     hyphen.",
          "type": "string"
        },
        "label": {
          "title": "label",
          "description": "Human readable label.",
          "type": "string"
        },
        "description": {
          "title": "description",
          "description": "Human readable description.",
          "type": "string"
        },
        "enabled": {
          "title": "enabled",
          "description": "Enable the collection?",
          "type": "boolean"
        },
        "persistentUriTemplate": {
          "title": "persistentUriTemplate",
          "description": "The *Feature* resource defines a unique URI for every feature, but this URI is only     stable as long as the API URI stays the same. For use cases where external persistent     feature URIs, which redirect to the current API URI, are used, this option allows to use     such URIs as canonical URI of every feature. To enable this option, provide an URI template     where `{{value}}` is replaced with the feature id.",
          "type": "string"
        },
        "extent": {
          "title": "extent",
          "description": "",
          "type": "object",
          "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.CollectionExtent"
        },
        "additionalLinks": {
          "title": "additionalLinks",
          "description": "Array of additional link objects, required keys are `href` (the URI), `label` and `rel`     (the relation).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.Link"
          }
        },
        "api": {
          "title": "api",
          "description": "[Building Blocks](#building-blocks) configuration.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.ExtensionConfiguration"
          }
        },
        "capabilities": {
          "title": "capabilities",
          "description": "*Deprecated* See `api`.",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "object",
            "$ref": "#/$defs/de.ii.ogcapi.foundation.domain.ExtensionConfiguration"
          }
        }
      },
      "additionalProperties": false
    }
  }
}