{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$ref": "#/$defs/CodelistData",
  "$defs": {
    "CodelistData": {
      "title": "CodelistData",
      "description": "# Codelists       Codelists allow to map property values to a different value. This is useful especially for     HTML representations.  ## Configuration       The following table describes the structure of the code list files.       {@docTable:properties }       For the target values in `entries` and for `fallback` also     [stringFormat](../providers/details/transformations.md) transformations can be used. If the     transformed value is intended for HTML output, then Markdown markup can also be used, this     will be formatted in the HTML output.  ### Example       Based on the INSPIRE codelist     [EnvironmentalDomain](https://inspire.ec.europa.eu/codeList/EnvironmentalDomain), maps values     like `soil` to the German label of the entry in the INSPIRE codelist registry.    ```yaml  --- id: environmental-domain label: Umweltbereich, für den Umweltziele festgelegt werden können. sourceType: TEMPLATES entries:   air: Luft   climateAndClimateChange: Klima und Klimawandel   healthProtection: Gesundheitsschutz   landUse: Bodennutzung   naturalResources: natürliche Ressourcen   natureAndBiodiversity: Natur und biologische Vielfalt   noise: Lärm   soil: Boden   sustainableDevelopment: nachhaltige Entwicklung   waste: Abfall   water: Wasser  ```    ## Storage       Codelists reside under the relative path `store/entities/codelists/{codelistId}.yml` in     the data directory.",
      "type": "object",
      "properties": {
        "id": {
          "title": "id",
          "description": "Unique identifier of the entity, has to match the filename. Allowed characters are     (A-Z, a-z), numbers (0-9), underscore and hyphen.",
          "type": "string"
        },
        "createdAt": {
          "title": "createdAt",
          "description": "",
          "type": "number"
        },
        "lastModified": {
          "title": "lastModified",
          "description": "",
          "type": "number"
        },
        "entityStorageVersion": {
          "title": "entityStorageVersion",
          "description": "",
          "type": "number"
        },
        "label": {
          "title": "label",
          "description": "Human readable label.",
          "type": "string"
        },
        "entries": {
          "title": "entries",
          "description": "Map with the original value as key and the new value as value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sourceType": {
          "title": "sourceType",
          "description": "Always `TEMPLATES`.",
          "type": "string"
        },
        "sourceUrl": {
          "title": "sourceUrl",
          "description": "",
          "type": "string"
        },
        "fallback": {
          "title": "fallback",
          "description": "Optional default value.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}